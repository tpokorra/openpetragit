<?xml version="1.0" encoding="utf-8"?>
<setup>
<import class="org.databene.benerator.util.RandomUtil"/>

<echo>\n ### GENERATE PEOPLE ### \n</echo>

<!-- Person: okay -->
<comment> 
Selection of possible countries for people (there are more!)
The ones marked with star * are also available for creating addresses,
the ones marked with hash # are also available with company names. 
Source: benerator manual 0.6.5

numbers: most common given names (_u_nweighted|_w_eighted) / family names (u|a)
AT (Austria)  120 w /   40 u
BR (Brazil)   100 u /   29 u   *
CA (Canada)    80 u /   20 u
FI (Finland)  785 u /  448 u
DE (Germany) 1998 w / 3421 w   * #
IL (Israel)   264 u /   30 w
IN (India)    155 u /   50 u
JP (Japan)    109 u /   50 w ~ Kanji letters
NO (Norway)   300 u /  100 w
RU (Russia)    33 w /   20 w ~ Kyrillic letters
TR (Turkey)  1077 u /   37 u
US (UStates)  600 w / 1000 w   * #

Recommended: (BR),DE,US
</comment>

<generate type="Person" count="${people_count}" 
	consumer="new CSVEntityExporter(uri='${dir.data.output}/people.csv')">
				
	<variable name="person" generator="PersonGenerator" />
	<id name="identifier" type="long"  />
	<attribute name="active" type="boolean" constant="true" />
	<attribute name="Title" script="person.salutation" />
	<attribute name="NobilityTitle" script="person.nobilityTitle" /> <!-- e.g. "Duke" -->
	<attribute name="Gender" script="person.gender" />
	<attribute name="FirstName" script="person.givenName" />
	<attribute name="MiddleName" script="person.secondGivenName" />
	<attribute name="FamilyName" script="person.familyName" />
	<attribute name="DateOfBirth" script="person.birthDate" />
	<attribute name="Email" script="person.email" />
	<!-- <attribute name="language" script="person.locale" /> --> <!-- e.g. "de" -->
</generate>

<echo>\n ### GENERATE ORGANISATIONS ### \n</echo>

<!-- Organisation: okay -->
<comment> company names can be generated for DE and US (according to benerator manual 0.6.5)</comment>	
<comment> attributes in Capital letters also have that attribute name in Petra. The others are informational only for the time being.</comment>
<generate type="Organisation" count="${organisations_count}" consumer="new CSVEntityExporter(uri='${dir.data.output}/organisations.csv')">
<!--
	<variable name="organisation" generator="CompanyNameGenerator" dataset="DE" locale="de_DE" />	
-->
	<variable name="organisation" generator="CompanyNameGenerator" />	
	<attribute name="Name" script="organisation.fullName" /> 
	<attribute name="short_name" script="organisation.shortName" /> 
	<attribute name="sector" script="organisation.sector" /> 
	<attribute name="location" script="organisation.location" /> 
	<attribute name="legal_form" script="organisation.legalForm" /> 
</generate>

<echo>\n ### GENERATE ADDRESSES (LOCATIONS) ### \n</echo>	
<!-- Address: okay -->
<comment> address names can be generated for DE, US, BR (according to benerator manual 0.6.5)</comment>	
<comment> 
In Petra, addresses are stored as "partner locations" / "location" .
partner -> partner-location -> location
</comment>
<generate type="Address" count="${addresses_count}" consumer="new CSVEntityExporter(uri='${dir.data.output}/addresses.csv')">

	<variable name="address" generator="AddressGenerator" />

<!-- class/table: PartnerLocation | ContactInformation-->
  <!-- Phone -->
	<!-- for now, just discard rest of address if phone is wanted excluded --> 
	<attribute name="Phone" script="address.privatePhone" />
	<attribute name="Alternate" script="address.officePhone" />
	<attribute name="Mobile" script="address.mobilePhone" />
	<attribute name="FaxExtension" script="address.fax" />
	<!-- Email ... is also in PartnerLocation in OpenPetra -->
	<!-- Website ... is also in PartnerLocation in OP -->
	
<!-- class/table: Location -->
	<attribute name="Addr2" script="address.street + ' ' + address.houseNumber" />
	<attribute name="PostCode" script="address.postalCode" />
	
	<!-- City - possibly redundant -->
	<attribute name="City" script="address.city.name" />
	<!-- <attribute name="city_area_code" script="address.city.areaCode" /> --><!-- don't need this! -->

	<!-- Province - possibly redundant -->
	<!-- province-id: internal -->
	<!--
	<attribute name="province_id" script="address.city.state.id" />
	-->
	<attribute name="Province" script="address.city.state.name" />

	<!-- foreign key: Country-Code -->
	<!-- read (by access to Country): CountryName -->
		
<!-- class/table: Country -->
	<!-- Country - possibly redundant -->	
	<attribute name="CountryCode" script="address.city.state.country.isoCode" />
	<attribute name="CountryName" script="address.city.state.country.name" />
	<attribute name="InternationalDialingCode" script="address.city.state.country.phoneCode" />
</generate>

<bean id="myDayGen" class="DayGenerator">
    <property name='min'          value='${datetime::get-year(datetime::now())}-01-01'/>
    <property name='max'          value='${datetime::get-year(datetime::now())}-12-31'/>
    <property name='granularity'  value='00-00-02'  />
    <property name='distribution' value='random'    />
</bean>

<!-- field -->
<generate name="the_field" type="Field" count="${fields_count}" consumer="new CSVEntityExporter(uri='${dir.data.output}/fields.csv')">
    <id name="id" type="int" generator="IncrementalIdGenerator" />
	<attribute name="Name" type="string" pattern="(HK|GY|GT|IE|GN|ID|IQ|KH|LB|MD|MR|NG|PR|RW|SV|UY|TN|UZ|VE|ZW)" unique="true"/>
    <!-- key ministries per field -->
    <generate type="KeyMinistry" count="${keyminsperfield_count}" consumer="new CSVEntityExporter(uri='${dir.data.output}/keymins.csv')">
        <id name="id" type="int" generator="IncrementalIdGenerator" />
        <attribute name="KeyMinName" type="string" pattern="(Feed the|Heal the|Save the|Rescue the|Free the) (Forest|Dolphins|Poor|Hungry|Injured|Addicted|Disadvantaged)" unique="true"/>
        <reference name="field" script="the_field.id"/>
    </generate>
</generate>

<!-- workers -->
<bean id="myMalePersonGen" class="PersonGenerator">
    <property name='locale'          value='US'/>
    <property name='femaleQuota'          value='0.0'/>
    <property name='minAgeYears'          value='19'/>
</bean>

<bean id="myFemalePersonGen" class="PersonGenerator">
    <property name='locale'          value='US'/>
    <property name='femaleQuota'          value='1.0'/>
    <property name='minAgeYears'          value='19'/>
</bean>

<bean id="myChildPersonGen" class="PersonGenerator">
    <property name='locale'          value='US'/>
    <property name='minAgeYears'          value='0'/>
    <property name='maxAgeYears'          value='15'/>
</bean>

<bean id="myStartCommitmentGen" class="DayGenerator">
    <property name='min'          value='${datetime::get-year(datetime::now()) - 3}-01-01'/>
    <property name='max'          value='${datetime::get-year(datetime::now())}-12-31'/>
    <property name='granularity'  value='00-00-02'  />
    <property name='distribution' value='random'    />
</bean>

<generate name="the_worker" type="Worker" count="${workers_count}" consumer="new CSVEntityExporter(uri='${dir.data.output}/workers.csv')">
    <id name="id" type="int" generator="IncrementalIdGenerator" />
    <!-- worker needs a person and a family record, perhaps with spouse and children, an address record, and a commitment record with one of the fields. -->
    
    <variable name="personMale" generator="myMalePersonGen"/>
    <variable name="personFemale" generator="myFemalePersonGen"/>
    <variable name="personChild1" generator="myChildPersonGen"/>
    <variable name="personChild2" generator="myChildPersonGen"/>
    <variable name="personChild3" generator="myChildPersonGen"/>
    <variable name="personChild4" generator="myChildPersonGen"/>
    <variable name="personChild5" generator="myChildPersonGen"/>

	<id name="identifier" type="long"  />
    <attribute name="familySituation" type="string" pattern="(singleMan|singleWoman|family)"/>
    <attribute name="numberOfChildren" type="int" min="0" max="5"/>

	<attribute name="MaleTitle" script="personMale.salutation" />
	<attribute name="MaleFirstName" script="personMale.givenName" />
	<attribute name="MaleMiddleName" script="personMale.secondGivenName" />
	<attribute name="MaleFamilyName" script="personMale.familyName" />
	<attribute name="MaleDateOfBirth" script="personMale.birthDate" />
	<attribute name="MaleEmail" script="personMale.email" />

	<attribute name="FemaleTitle" script="personFemale.salutation" />
	<attribute name="FemaleFirstName" script="personFemale.givenName" />
	<attribute name="FemaleMiddleName" script="personFemale.secondGivenName" />
	<attribute name="FemaleFamilyName" script="personFemale.familyName" />
	<attribute name="FemaleDateOfBirth" script="personFemale.birthDate" />
	<attribute name="FemaleEmail" script="personFemale.email" />
    <attribute name="AgeDifferenceSpouse" type="int" min="-5" max="5"/>

	<attribute name="Child1Title" script="personChild1.salutation" />
	<attribute name="Child1FirstName" script="personChild1.givenName" />
	<attribute name="Child1MiddleName" script="personChild1.secondGivenName" />
	<attribute name="Child1DateOfBirth" script="personChild1.birthDate" />
    <attribute name="Child1Gender" script="personChild1.gender" />
    <attribute name="Child1Email" script="personChild1.email" />
    
	<attribute name="Child2Title" script="personChild2.salutation" />
	<attribute name="Child2FirstName" script="personChild2.givenName" />
	<attribute name="Child2MiddleName" script="personChild2.secondGivenName" />
	<attribute name="Child2DateOfBirth" script="personChild2.birthDate" />
    <attribute name="Child2Gender" script="personChild2.gender" />
    <attribute name="Child2Email" script="personChild2.email" />

	<attribute name="Child3Title" script="personChild3.salutation" />
	<attribute name="Child3FirstName" script="personChild3.givenName" />
	<attribute name="Child3MiddleName" script="personChild3.secondGivenName" />
	<attribute name="Child3DateOfBirth" script="personChild3.birthDate" />
    <attribute name="Child3Gender" script="personChild3.gender" />
    <attribute name="Child3Email" script="personChild3.email" />

   	<attribute name="Child4Title" script="personChild4.salutation" />
	<attribute name="Child4FirstName" script="personChild4.givenName" />
	<attribute name="Child4MiddleName" script="personChild4.secondGivenName" />
	<attribute name="Child4DateOfBirth" script="personChild4.birthDate" />
    <attribute name="Child4Gender" script="personChild4.gender" />
    <attribute name="Child4Email" script="personChild4.email" />

	<attribute name="Child5Title" script="personChild5.salutation" />
	<attribute name="Child5FirstName" script="personChild5.givenName" />
	<attribute name="Child5MiddleName" script="personChild5.secondGivenName" />
	<attribute name="Child5DateOfBirth" script="personChild5.birthDate" />
    <attribute name="Child5Gender" script="personChild5.gender" />
    <attribute name="Child5Email" script="personChild5.email" />

	<variable name="address" generator="AddressGenerator" />
	<attribute name="Addr2" script="address.street + ' ' + address.houseNumber" />
	<attribute name="PostCode" script="address.postalCode" />
	<attribute name="City" script="address.city.name" />
	<attribute name="Province" script="address.city.state.name" />
	<attribute name="CountryCode" script="address.city.state.country.isoCode" />

    <!-- TODO: add a commitment for the wife as well? -->
    <attribute name="startDateCommitment" generator="myStartCommitmentGen"/>
    <attribute name="lengthCommitment" type="int" min="0" max="5"/> <!-- 0 is open ended -->
    <attribute name="lengthCommitmentUnit" type="string" pattern="(week|month|year)"/>
    <attribute name="fieldCommitment" type="int" min="1" max="300"/>
</generate>

<generate type="Donations" count="${donations_count}" 
	consumer="new CSVEntityExporter(uri='${dir.data.output}/donations.csv')">

	<id name="identifier" type="long"  />
    
    <!--
      frequency: this gift is only once, or starting with the startdate every month, or once in a quarter
      splitgift: should amount_2 and amount_3 also be used?
      motivation: the gift can be towards personal support, for a field, or for a key ministry/project
      assuming we have 1000 donors
      assuming we have about 200 workers, 50 key ministries, 20 fields
    -->

    <attribute name="frequency" type="string" pattern="(once|once|monthly|monthly|monthly|quarterly)"/>
    <attribute name="startdate" generator="myDayGen"/>
    <attribute name="splitgift" type="string" pattern="(1|1|1|2|2|3)" />
    <attribute name="donor" type="int" min="1" max="1000"/>
    <attribute name="motivation_1" type="string" pattern="(SUPPORT|SUPPORT|SUPPORT|FIELD|KEYMIN)" />
    <attribute name="recipient_support_1" type="int" min="1" max="200"/>
    <attribute name="recipient_keymin_1" type="int" min="1" max="50"/>
    <attribute name="recipient_field_1" type="int" min="1" max="20"/>
    <attribute name="amount_1" type="int" min="5" max="500"/>
    <attribute name="motivation_2" type="string" pattern="(SUPPORT|SUPPORT|SUPPORT|FIELD|KEYMIN)" />
    <attribute name="recipient_support_2" type="int" min="1" max="200"/>
    <attribute name="recipient_keymin_2" type="int" min="1" max="50"/>
    <attribute name="recipient_field_2" type="int" min="1" max="20"/>
    <attribute name="amount_2" type="int" min="5" max="500"/>
    <attribute name="motivation_3" type="string" pattern="(SUPPORT|SUPPORT|SUPPORT|FIELD|KEYMIN)" />
    <attribute name="recipient_support_3" type="int" min="1" max="200"/>
    <attribute name="recipient_keymin_3" type="int" min="1" max="50"/>
    <attribute name="recipient_field_3" type="int" min="1" max="20"/>
    <attribute name="amount_3" type="int" min="5" max="500"/>

</generate>

<echo>\n ### GENERATE COMPLETE ### \n</echo>

</setup>