<?xml version="1.0"?>
<project name="OpenPetra-tobe-migrated">
<!-- All targets in this file should go away when the new buildfiles are ready -->

<include buildfile="OpenPetra.common.xml"/>

<target name="cleanPetra" depends="clean" />
<target name="compilePetra" depends="compile" />

<target name="generateORM" depends="" description="Generates the cached tables">
  <loadtasks assembly="${Ict.Tools.NAntTasks.DLL}" unless="${task::exists('ExecDotNet')}"/> 
  <property name="CachedTableParameters" value="-petraxml:${PetraXML.file} -outputshared:${dir.root}/csharp/ICT/Petra/Shared -TemplateDir:${dir.root}/csharp/ICT/PetraTools/Templates"/>
  <ExecDotNet program="${tool-generateORM}" commandline="-do:cachedtables ${CachedTableParameters} -cachedef:${dir.root}/csharp/ICT/Petra/Definitions/CacheableTablesAndLists.yaml"/>
</target> 


<target name="generateGlue" depends="" description="Generate the glue between client and server, ie. interfaces and instantiators">
  <loadtasks assembly="${Ict.Tools.NAntTasks.DLL}" unless="${task::exists('ExecDotNet')}"/> 
  <ExecDotNet program="${dir.bin}/GenerateSharedCode.exe" commandline="-ymlfile:${dir.root}/csharp/ICT/Petra/Definitions/NamespaceHierarchy.yml -outputdir:${dir.root}/csharp/ICT/Petra -TemplateDir:${dir.root}/csharp/ICT/PetraTools/Templates"/>
</target>

<target name="translation" description="extracts string in winforms, creates and updates the .po files, and compiles the .mo files for delivery">
  <nant inheritall="false" target="extractMsgs" 
        buildfile="${dir.root}/i18n/i18n.build" />
  <nant inheritall="false" target="translationCompilePOFile" 
        buildfile="${dir.root}/i18n/i18n.build" />
</target>

<!-- Add the database a as is. Add properties for compat -->
<property name="DBMS.Type" value="sqlite" overwrite="false" />
<property name="DBMS.DBName" value="openpetra" overwrite="false" />
<property name="DBMS.Password" value="petra" overwrite="false" /> 
<property name="DBDoc.Output.dir" value="${dir.delivery}/dbdoc" overwrite="false" />
<property name="SelectedDemo" value="demodataGermany" overwrite="false"/>

<!-- set platform specific variables -->
<if test="${'win32'==platform::get-name()}" >
  <echo>Running on MS Windows</echo>
  <property name="Dia.exe" value="dia.exe" overwrite="false"/> 
  <property name="PostgreSQL.exe" value="${environment::get-variable('ProgramFiles')}/PostgreSQL/9.0/bin/psql.exe" overwrite="false" />
  <property name="pgdump.exe" value="${environment::get-variable('ProgramFiles')}/PostgreSQL/9.0/bin/pg_dump.exe" overwrite="false"/>
  <property name="MySQL.exe" value="${environment::get-variable('ProgramFiles')}\mysql\mysql server 5.1/bin/mysql.exe" overwrite="false" />
  <property name="MySQLDump.exe" value="${environment::get-variable('ProgramFiles')}\mysql\mysql server 5.1/bin/mysqldump.exe" overwrite="false"/> 
  <!-- Is this really needed?? -->
  <property name="MonoBinPath" value="" overwrite="false"/>     
</if>
<if test="${'win32'!=platform::get-name()}">
  <if test="${'unix'==platform::get-name()}">
    <echo>Running on Unix</echo>
    <property name="PostgreSQL.exe" value="psql" overwrite="false"/>
    <property name="MySQL.exe" value="mysql" overwrite="false"/>
  </if>
  <if test="${'unix'!=platform::get-name()}">
    <echo>Unknown platform!</echo>
    <fail>Platform={$platform::get-name()} not supported! Expand the properties here!!</fail>
    <property name="PostgreSQL.exe" value="/Library/PostgreSQL/8.3/bin/psql" overwrite="true"/> 
  </if>
</if>        
<!-- Add the database as is add properties for compat, which will be removed -->
<property name="OpenPetraRoot.dir" value="${dir.root}" overwrite="true" />
<property name="PetraRelease" value="0300" overwrite="false" />
<property name="SQLitedb.file" value="${dir.bin}/setup/petra${PetraRelease}/petra.db" overwrite="false" />
<property name="PetraToolsExe.dir" value="${dir.bin}" overwrite="true" />
<property name="DBDoc.Output.dir" value="${dir.delivery}/dbdoc" overwrite="false" />
<property name="ThirdParty.dir" value="${dir.3rdParty}" overwrite="false" />
<property name="Tmp.dir" value="${tempdir}"/>


<target name="init">
  <loadtasks assembly="${Ict.Tools.NAntTasks.DLL}" unless="${task::exists('ExecDotNet')}"/>  
</target>
  
<include buildfile="../../OpenPetra.build.database.tasks" />

</project>