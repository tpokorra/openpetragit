{##NANT_FILE_REFS_DEPS_TEMPLATE}
<?xml version="1.0"?>
<!-- Generated by CsDepend at {0} -->
<project name="OpenPetra-csharp-{1}-refs-deps-generated">

{2}

</project>

{##NANT_FILE_TARGET_DEPENDS_TEMPLATE}

<target name="nant-subcall" depends="{0}">
</target>

{##NANT_FILE_TARGET_TEMPLATE}

<target name="{0}" depends="{1}" description="calls target from property target for {0}">
  <!-- Default target is compile -->
  <property name="target" value="compile" overwrite="false "/>
  <!-- If target is clean and the buildfile is not there, then we ignore it.
       Otherwise we are glad about the error message: Something wired happend. -->
  <nant inheritall="false" target="${{target}}" buildfile="{2}" if="${{target!='clean' or file::exists('{2}')}}"/>
</target>

{##NANT_BUILD_FILE_TEMPLATE}
<?xml version="1.0"?>
<!-- Generated by CsDepend at {0} -->
<project name="OpenPetra-csharp-{1}-build-generated">
<property name="Namespace" value="{1}" />
<property name="OutputType" value="{5}" overwrite="false"/>

<property name="ProjectGuid" value="{{{4}}}" />

<property name="RunCsDepend" value="false" />

<include buildfile="{3}"/>

<patternset id="references">{2}
  <patternset refid="3rdPartyPattern" />
</patternset>

</project>

{##NANT_REFERENCE_PATTERNSET_TEMPLATE}

  <patternset refid="{0}" />
  
{##NANT_REFERENCE_TEMPLATE}
<property name="OutputType" value="{4}" overwrite="false"/>

<property name="ProjectGuid" value="{{{3}}}" />

<patternset id="references">{1}
  <patternset refid="3rdPartyPattern" />
</patternset>

<target name="{0}" depends="{2}" description="calls target from property target">
  <!-- RunCsDepend was already executed and the file imported. Now we can do the real task -->
  <property name="RunCsDepend" value="false" overwrite="true" />
  <property name="target" value="compile" overwrite="false" />
  <call target="${{target}}" cascade="false" />
</target>

{##NANT_FILE_REFERENCE_INC_TEMPLATE}

  <include name="{0}.dll"/>