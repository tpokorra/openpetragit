<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ict.Petra.Client.MReporting.Gui</name>
    </assembly>
    <members>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TPreviewDelegate">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TGridPreview">
            <summary>
            This has some functions to fill the Grid on the report Print Preview screen.
            It allows to open detail reports
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TGridPreview.FOrigParameters">
            <summary>is reused for setting parameters</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TGridPreview.FDetailParameters">
            <summary>the parameters for the new detail report</summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TGridPreview.#ctor(System.Windows.Forms.Form,Ict.Petra.Client.CommonForms.TFrmPetraUtils,Ict.Petra.Client.MReporting.Gui.TPreviewDelegate,Ict.Petra.Shared.MReporting.TResultList,Ict.Petra.Shared.MReporting.TParameterList)">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TGridPreview.PopulateResultGrid(Ict.Common.Controls.TSgrdDataGrid)">
            <summary>
            Try to populate the grid with the current result.
            </summary>
            <returns>s false if no detail report is available
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TGridPreview.PopulateGridContextMenu(System.Windows.Forms.ContextMenu)">
            <summary>
            populate the popup menu
            </summary>
            <param name="AContextMenu"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TGridPreview.MenuItemClick(System.Object,System.EventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview">
             <summary>
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.#ctor(System.IntPtr,System.String,System.TimeSpan,Ict.Petra.Shared.MReporting.TResultList,Ict.Petra.Shared.MReporting.TParameterList,System.Boolean)">
            <summary>
            constructor
            </summary>
            <param name="ACallerWindowHandle"></param>
            <param name="caption">caption of the dialog</param>
            <param name="duration"></param>
            <param name="results"></param>
            <param name="parameters"></param>
            <param name="AWrapColumn">true: Wrap the text in the column. False: Cut the text that is to long for the column</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.MniFile_Click(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.MniHelpPetra_Click(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.MniHelpAboutPetra_Click(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.MniHelpDevelopmentTeam_Click(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.MniHelpBugReport_Click(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.Btn_NextPage_Click(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.Btn_PreviousPage_Click(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.TPrintPreview_Resize(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.tbbCloseClick(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.tbtExportTextClick(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.tbtExportCSVClick(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.tbtGenerateChartClick(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.tbtPrintClick(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.PreviewDetailReport(Ict.Petra.Client.MReporting.Logic.TRptCalculator)">
             <summary>
            
             </summary>
             <param name="ACalculator"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.SetPrintChartProcedure(Ict.Petra.Client.MReporting.Gui.TPrintChartCallbackProcedure)">
             <summary>
            
             </summary>
             <param name="printChartProcedure"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.SgGridView_DoubleClickCell(System.Object,SourceGrid.CellContextEventArgs)">
             <summary>
            
             </summary>
             <param name="Sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.PrintDocument_EndPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.CbB_Zoom_SelectedIndexChanged(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.FormatDuration(System.TimeSpan)">
            <summary>
            should this go into StringHelper?
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.ExportToExcel">
            <summary>
            directly export the full result to Excel
            </summary>
            <returns>false if Excel is not available
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.ExportToCSV">
             <summary>
             export the full result to a CSV file
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.EnablePageButtons">
            <summary>
            Depending on the setting of zoom, several pages are displayed, or just one 100% or AutoZoom, will display only one page, and enable the previous/next page buttons otherwise display all pages, and scroll through
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.CanClose">
            <summary>
            This function tells the caller whether the window can be closed.
            It can be used to find out if something is still edited, for example.
            </summary>
            <returns>true if window can be closed
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.HookupAllControls">
             <summary>
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.GetPetraUtilsObject">
            <summary>
            needed for interface
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.RunOnceOnActivation">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.InitializeComponentPetraForm">
            <summary>
            this is InitializeComponent from PetraForm
            this will not be needed anymore when the code generation works
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPrintPreview.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TPrintChartCallbackProcedure">
            <summary> </summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils">
            <summary>
            useful functions for report screens
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.NUMBER_SORTBY">
            <summary>number of columns that can be sorted</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FDontResizeForm">
            <summary>we will not need resizing of form for forms that are generated by scaffolding</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FReportName">
            <summary>the name of the report; used to identify the directory where the settings are stored</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FMenuItemCaption">
            <summary>name that should be in the menu; used for dynamically loading NRR reports</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FCurrentSettingsName">
            <summary>the name of the current settings, if they have been loaded or already saved under this name</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FXMLFiles">
            <summary>the CSV list of file names of xml files needed for this report</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FCurrentReport">
            <summary>the name of the report, as it is used in the xml file</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FSettingsDirectory">
            <summary>the name of the sub directory where the settings are stored</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FWrapColumn">
            <summary>Indicator if the output of the columns should be wrapped or cut of if the text
            doesn't fit in the width of the column </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FWindowCaption">
            <summary>to be able to add the currently loaded settings name to the caption of the window.</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FStoredSettings">
            <summary>this System.Object manages the stored settings of the current user and current report</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FCalculator">
            <summary>the System.Object that is able to deal with all the parameters, and can calculate a report</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FSelectedColumn">
            <summary>this shows which column is currently selected; it is 1 if no column is selected</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FMaxDisplayColumns">
            <summary>holds the number of visible columns. This value is usually set from UC_PartnerColumns </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FAvailableFunctions">
            <summary>List of functions between columns, that are available for this report; is set by SetAvailableFunctions</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FVerificationResults">
            <summary>list of verification results; ReadControls should add all errors to this list; ReadControlsWithErrorHandling will tell the user</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FGenerateReportThread">
            <summary>This is the thread used to generate the report; that way, the status bar is always updated, and the window does never turn blank</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FApplicationDirectory">
            <summary>the path where the application is started from.</summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.#ctor(System.IntPtr,Ict.Petra.Client.CommonForms.IFrmPetra,Ict.Common.Controls.TExtStatusBarHelp)">
            <summary>
            constructor
            </summary>
            <param name="ACallerWindowHandle">the int handle of the form that has opened this window; needed for focusing when this window is closed later</param>
            <param name="ATheForm"></param>
            <param name="AStatusBar"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.GetMenuItemCaption">
             <summary>
             returns the string that is to be displayed in the menuitem
             that is mainly used for dynamically loaded nrr reports
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.HasSufficientPermissions">
            <summary>
            This function is supposed to test if the current user has access to all the needed modules
            This method describes, which permissions are needed for this specific report.
            </summary>
            <returns>true if the current user is allowed to use this report
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.TFrmPetra_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Event Handler that is invoked when the Form is about to close - no matter
            how the closing was invoked (by calling Form.Close, a Close button, the
            x Button of a Form, etc).
            </summary>
            <param name="sender">Event sender</param>
            <param name="e">EventArgs that allow cancelling of the closing</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.InitialiseData(System.String)">
             <summary>
             setup the form
            
             </summary>
             <param name="AReportParameter"></param>
             <returns>false if there are not enough permissions
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.CanClose">
            <summary>
            This function makes sure whether the window can be closed.
            It can be used e.g. if something is still edited.
            </summary>
            <returns>true if window can be closed
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.MI_GenerateReport_Click(System.Object,System.EventArgs)">
            <summary>
            generate a report, called by menu item or toolbar button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.MI_WrapColumn_Click(System.Object,System.EventArgs)">
            <summary>
            toggle the option to wrap a column in the report
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.GetDefaultBrowserPath">
            <summary>
            Reads path of default browser from registry
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.GenerateReport">
            <summary>
            This procedure does the calculation of the report, including fetching the parameters from the GUI, verifying them, and providing error messages This should be called in a different thread, by MI_GenerateReport_Click
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.PreviewReport">
            <summary>
            to be called by the thread, after the calculation of the report has been finished
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.UpdateLoadingMenu(System.Collections.Specialized.StringCollection)">
             <summary>
             This procedure loads the available saved settings into the Load menu
            
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.FParametersFromFile">
            backup of recently loaded parameters from file. can contain information that is not available on the GUI (yet)
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.LoadSettings(System.String)">
            <summary>
            This procedure loads the parameters of the given settings
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.LoadDefaultSettings">
             <summary>
             This procedure loads the parameters of the default settings;
             at the moment this is implemented to use the last used settings
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.ColumnChangedWithErrorMessage(System.String)">
            <summary>
            has anything changed in the currently selected column?
            if yes, show error message; telling the user to save changes first
            </summary>
            <returns>true if column has changed and error message was displayed</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.MI_LoadSettingsDialog_Click(System.Object,System.EventArgs)">
            <summary>
            show a dialog with all available stored settings for this report
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.MI_LoadSettings_Click(System.Object,System.EventArgs)">
            <summary>
            load settings from menu, recently used settings
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.MI_SaveSettingsAs_Click(System.Object,System.EventArgs)">
            <summary>
            save report settings with a new name
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.MI_SaveSettings_Click(System.Object,System.EventArgs)">
            <summary>
            save report settings; if those are the system default settings, the user still has to enter a new name
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.MI_MaintainSettings_Click(System.Object,System.EventArgs)">
            <summary>
            maintain existing report settings (rename, delete)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.ReadControlsWithErrorHandling(Ict.Petra.Client.MReporting.Gui.TReportActionEnum)">
            <summary>
            to be called from outside
            </summary>
            <returns>true if successful
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.ReadControls(Ict.Petra.Client.MReporting.Gui.TReportActionEnum)">
             <summary>
             Reads the selected values from the controls,
             and stores them into the parameter system of FCalculator
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.SetControls(Ict.Petra.Shared.MReporting.TParameterList)">
             <summary>
             Sets the selected values in the controls, using the parameters loaded from a file
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.AddVerificationResult(Ict.Common.Verification.TVerificationResult)">
            add a verification result
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.GetVerificationResultCount">
            count the verification results
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.AddAvailableFunction(System.String)">
            <summary>
            Add an item to the fields that can be selected in the report
            </summary>
            <param name="AName">Name of the field</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.AddAvailableFunction(Ict.Petra.Client.MReporting.Gui.TColumnFunction)">
            <summary>
            Add an item to the fields that can be selected in the report
            </summary>
            <param name="AFunction">The function to add</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.GetAvailableFunctions">
            <summary>
            This will return the available functions
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.GetAvailableFunctionsStringList">
             <summary>
             This will return a string list of available functions
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.RemoveAvailableFunction(System.String)">
             <summary>
             Remove an advertised function;
             that is necessary for some of the derived reports;
             e.g. on the monthly reports you don't want to see a "Actual End of Year"
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.SetAvailableFunctions">
             <summary>
             This will add functions to the list of available functions
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.GetFunction(System.String)">
            <summary>
            get the function System.Object of the given calculation string
            </summary>
            <returns>nil if the function cannot be found
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils.GetFunction(Ict.Petra.Shared.MReporting.TParameterList,System.String,System.Int32)">
            <summary>
            todoComment
            </summary>
            <param name="AParameterList"></param>
            <param name="ACalculationName"></param>
            <param name="AColumnNr"></param>
            <returns></returns>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TColumnFunction">
             <summary>
             This class contains all information needed to specify a function for 2 columns,
             or a function that is applied to one column;
             once it is created and added to a TFrmReporting System.Object, in one of its derived SetAvailableFunctions() Methods,
             it will be available in the comboboxes.
            
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TColumnFunction.FDescription">
            <summary>the name of the function, e.g. Variance</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TColumnFunction.FNumberColumns">
            <summary>number of columns involved, e.g 1 or 2</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TColumnFunction.FCalculationParameterName">
            <summary>e.g. param_label; name that the parameter should be stored under</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TColumnFunction.FCalculationParameterValue">
            <summary>e.g.: Regional Director; This will be displayed</summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TColumnFunction.InitializeUnit">
            <summary>
            Initialisation
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TColumnFunction.#ctor(System.String,System.Int32)">
             <summary>
             todo: add column default width for personnel reports? }
             constructor used for functions between columns
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TColumnFunction.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ADescription">Name of the field</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TColumnFunction.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ADescription">Name of the field</param>
            <param name="ACalculationParameterName">Name of the report header</param>
            <param name="ACalculationParameterValue">Name of the variable during report calculation</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TColumnFunction.GetDisplayValue">
            <summary>
            Returns the name of the field
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TPartnerColumnFunction">
            <summary>
            Column function for partner module
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TPartnerColumnFunction.FColumnWidth">
            <summary>Default width of the column in cm e.g 1.5 </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TPartnerColumnFunction.#ctor(System.String,System.Double,System.Int32)">
             <summary>
             constructor used for functions between columns
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TPartnerColumnFunction.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ADescription">Name of the field</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TPartnerColumnFunction.#ctor(System.String,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="ADescription">Name of the field</param>
            <param name="AColumnWidth">Default width</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TPartnerColumnFunction.#ctor(System.String,System.String,System.String,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="ADescription">Name of the field</param>
            <param name="ACalculationParameterName">Name of the report header</param>
            <param name="ACalculationParameterValue">Name of the variable during report calculation</param>
            <param name="AColumnWidth">Default width</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TPartnerColumnFunction.CharLengthToCM(System.Int32)">
            <summary>
            convert a character length to a width in centimeters
            </summary>
            <returns>void</returns>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFinanceColumnFunction">
            <summary>
            Column function for partner module
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFinanceColumnFunction.FDisplayYTD">
            <summary>Show YTD </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFinanceColumnFunction.FDefaultYTD">
            <summary>Default value to show YTD </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFinanceColumnFunction.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="ADescription"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFinanceColumnFunction.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="ADescription"></param>
            <param name="ANumberColumns"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFinanceColumnFunction.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="ADescription"></param>
            <param name="ADisplayYTD"></param>
            <param name="ADefaultYTD"></param>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TMyUpdateDelegate">
            <summary>
            a delegate for running the report preview window
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.IFrmReporting">
            for accessing the reporting form from the TFrmPetraReportingUtils object
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.IFrmReporting.ReadControls(Ict.Petra.Client.MReporting.Logic.TRptCalculator,Ict.Petra.Client.MReporting.Gui.TReportActionEnum)">
            <summary>
            read the values from the controls on the form
            </summary>
            <param name="ACalc"></param>
            <param name="AReportAction"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.IFrmReporting.SetControls(Ict.Petra.Shared.MReporting.TParameterList)">
            <summary>
            set the values of the controls on the form
            </summary>
            <param name="AParameters"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.IFrmReporting.GetRecentSettingsItems(System.Int32,System.Windows.Forms.ToolStripItem@,System.Windows.Forms.ToolStripItem@)">
            <summary>
            this is used for writing the captions of the menu items and toolbar buttons for recently used report settings
            </summary>
            <returns>false if an item with that index does not exist</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.IFrmReporting.CheckWrapColumnMenuItem(System.Boolean)">
            <summary>
            this will Check the menu item "Wrap Column"
            </summary>
            <param name="ACheck">True if the item is to be checked. Otherwise false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.IFrmReporting.EnableBusy(System.Boolean)">
            <summary>
            activate and deactivate toolbar buttons and menu items depending on ongoing report calculation
            </summary>
            <param name="ABusy">True if a report is generated and the close button should be disabled.</param>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TReportActionEnum">
            <summary>This enums defines what action is going on. It's needed e.g. for the ReadControls function </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TReportActionEnum.raSave">
            <summary> Save </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TReportActionEnum.raLoad">
            <summary> Load </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TReportActionEnum.raGenerate">
            <summary> Generate </summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFrmSettingsLoad">
            <summary>
            load screen for report settings
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmSettingsLoad.FStoredSettings">
            <summary>
            the stored settings for the report
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmSettingsLoad.FSettingsName">
            <summary>
            name of the selected settings
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsLoad.#ctor(Ict.Petra.Client.MReporting.Logic.TStoredSettings)">
            <summary>
            Private Declarations
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsLoad.GetNewName">
            <summary>
            get the name of the selected settings
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsLoad.LoadSettingsList">
            <summary>
            load the available settings and add them to the listbox
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmSettingsLoad.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsLoad.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsLoad.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFrmSettingsMaintain">
            <summary>
            form that helps with mainting the report settings;
            allows to delete and to rename settings
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsMaintain.#ctor(Ict.Petra.Client.MReporting.Logic.TStoredSettings)">
            <summary>
            Private Declarations
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsMaintain.LoadSettingsList">
            <summary>
            load available settings into a listbox
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmSettingsMaintain.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsMaintain.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsMaintain.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFrmSettingsRename">
            <summary>
            form that helps with renaming report settings
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsRename.#ctor">
            <summary>
            Private Declarations
            </summary>
            <returns>void</returns>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmSettingsRename.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsRename.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsRename.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.TFrmSettingsRename.NewName">
            <summary>
            the new name after renaming
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.TFrmSettingsRename.OldName">
            <summary>
            the old name before renaming
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFrmSettingsSave">
            <summary>
            form for saving the current set of settings
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsSave.#ctor(Ict.Petra.Client.MReporting.Logic.TStoredSettings,System.String)">
            <summary>
            Private Declarations
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsSave.GetNewName">
            <summary>
            the name that has be assigned to the current set of settings
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsSave.LoadSettingsList">
            <summary>
            load the settings into the listbox
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmSettingsSave.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsSave.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmSettingsSave.InitializeComponent">
            <summary>
            this is InitializeComponent from PetraForm
            this will not be needed anymore when the code generation works
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper">
            <summary>
            This class provides helper functions for UC_Columns
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper.SwitchColumn(Ict.Petra.Shared.MReporting.TParameterList@,System.Int32,System.Int32)">
            <summary>
            This procedure will switch the two columns
            </summary>
            <param name="AColumnParameters">List with the current columns</param>
            <param name="AFrom">Index of the column to move</param>
            <param name="ATo">Index of the new position of the column to move</param>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper.CheckAddDoubleEntry(Ict.Petra.Shared.MReporting.TParameterList@,System.String,System.Int32)">
            <summary>
            Checks if there is already a field with the same name in the grid. If yes, ask
            if the field should be added again.
            </summary>
            <param name="AColumnParameters">List with the current columns</param>
            <param name="AColumnName">Name of the field</param>
            <param name="ASelectedColumn">Index of the column in the grid</param>
            <returns>True if the field should be added. Otherwise false</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper.GetFunction(System.Collections.ArrayList@,System.String)">
            <summary>
            get the function System.Object of the given calculation string
            </summary>
            <param name="AAvailableFunctions">List with the current functions</param>
            <param name="ACalculation">Name of the function</param>
            <returns>nil if the function cannot be found
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper.GetFunction(System.Collections.ArrayList@,System.String,Ict.Petra.Shared.MReporting.TParameterList,System.Int32)">
            <summary>
            get the function System.Object of the given calculation string
            </summary>
            <param name="AAvailableFunctions">List with the current functions</param>
            <param name="ACalculation">Name of the function</param>
            <param name="AParameterList">the current list of parameters</param>
            <param name="AColumnNumber">Number of the column</param>
            <returns>nil if the function cannot be found
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper.RemoveColumn(Ict.Petra.Shared.MReporting.TParameterList@,System.Int32)">
            <summary>
            Remove one colum from the parameter list.
            </summary>
            <param name="AColumnParameters">List with the current columns</param>
            <param name="AColumnIndex">Index of the column to remove</param>
            <returns>the MaxDisplayColumns number</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper.AddColumn(Ict.Petra.Shared.MReporting.TParameterList@,System.Int32)">
            <summary>
            Adds a new column to the column parameter list at the specified index.
            </summary>
            <param name="AColumnParameters">List with the current columns</param>
            <param name="AColumnIndex">Index where the new column is added</param>
            <returns>the MaxDisplayColumns number</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper.ReadControls(Ict.Petra.Shared.MReporting.TParameterList@,Ict.Petra.Client.MReporting.Logic.TRptCalculator@)">
             <summary>
             Reads the selected values from the controls,
             and stores them into the parameter system of FCalculator
            
             </summary>
             <param name="AColumnParameters">List with the current columns</param>
             <param name="ACalculator"></param>
             <returns>the MaxDisplayColumns number</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper.SetControls(Ict.Petra.Shared.MReporting.TParameterList@,Ict.Petra.Shared.MReporting.TParameterList@)">
             <summary>
             Sets the selected values in the controls, using the parameters loaded from a file
            
             </summary>
             <param name="AColumnParameters">List with the current columns</param>
             <param name="AParameters"></param>
             <returns>the MaxDisplayColumns number</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TUC_ColumnHelper.LoadDataToGrid(Ict.Common.Controls.TSgrdDataGridPaged@,System.Data.DataTable@)">
            <summary>
            Loads the data of the column parameters to the grid
            </summary>
            <param name="AGrid">Grid to show the values</param>
            <param name="AColumnTable">Table that holds the column parameter data</param>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns">
            auto generated user control
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.OnDataLoadingStarted(System.Object,System.EventArgs)">
            to avoid warning CS0067: unused event
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.OnDataLoadingFinished(System.Object,System.EventArgs)">
            to avoid warning CS0067: unused event
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.InitUserControl">
            needs to be called after FMainDS and FPetraUtilsObject have been set
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.RunOnceOnActivation">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.HookupAllControls">
            <summary>
            Adds event handlers for the appropiate onChange event to call a central procedure
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.HookupAllInContainer(System.Windows.Forms.Control)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.CanClose">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.GetPetraUtilsObject">
            auto generated
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.PetraUtilsObject">
            helper object for the whole screen
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.MainDS">
            dataset for the whole screen
        </member>
        <member name="E:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.DataLoadingStarted">
            <summary>todoComment</summary>
        </member>
        <member name="E:Ict.Petra.Client.MReporting.Gui.TFrmUC_Columns.DataLoadingFinished">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.UC_Output">
            <summary>
            This helps to define where the output of the report should go (printing, email, CSV/File export)
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.UC_Output.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.UC_Output.ReadControls(Ict.Petra.Client.MReporting.Logic.TRptCalculator)">
            <summary>
            read the values from the controls and give them to the calculator
            </summary>
            <param name="ACalculator"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.UC_Output.SetControls(Ict.Petra.Shared.MReporting.TParameterList)">
            <summary>
            initialise the controls using the parameters
            </summary>
            <param name="AParameters"></param>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.UC_Output.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.UC_Output.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the control.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.UC_Output.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.UC_Output.PetraUtilsObject">
            <summary>
            utilities for Petra forms
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns">
            auto generated user control
            <summary>
            Description of UC_Columns_ManualCode.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.OnDataLoadingStarted(System.Object,System.EventArgs)">
            to avoid warning CS0067: unused event
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.OnDataLoadingFinished(System.Object,System.EventArgs)">
            to avoid warning CS0067: unused event
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.InitUserControl">
            needs to be called after FMainDS and FPetraUtilsObject have been set
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.RunOnceOnActivation">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.HookupAllControls">
            <summary>
            Adds event handlers for the appropiate onChange event to call a central procedure
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.HookupAllInContainer(System.Windows.Forms.Control)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.CanClose">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.GetPetraUtilsObject">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.ActionEnabledEvent(System.Object,Ict.Petra.Client.App.Core.ActionEventArgs)">
            auto generated
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.FColumnParameters">
            <summary>this holds the currently configured columns</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.FSelectedColumn">
            <summary>this shows which column is currently selected; it is 1 if no column is selected</summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.FDuringApplyOrCancel">
            <summary>helper variable to unselect the column in the grid after cancel or apply</summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.InitialiseData(Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils)">
            <summary>
            Initialisation
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.SetAvailableFunctions(System.Collections.ArrayList)">
            <summary>
            Sets the available functions (fields) that can be used for this report.
            </summary>
            <param name="AAvailableFunctions">List of TColumnFunction</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.ReadControls(Ict.Petra.Client.MReporting.Logic.TRptCalculator,Ict.Petra.Client.MReporting.Gui.TReportActionEnum)">
             <summary>
             Reads the selected values from the controls,
             and stores them into the parameter system of FCalculator
            
             </summary>
             <param name="ACalculator"></param>
             <param name="AReportAction"></param>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.SetControls(Ict.Petra.Shared.MReporting.TParameterList)">
             <summary>
             Sets the selected values in the controls, using the parameters loaded from a file
            
             </summary>
             <param name="AParameters"></param>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.GrdColumns_CellLostFocus(SourceGrid.Selection.SelectionBase,SourceGrid.ChangeActivePositionEventArgs)">
             <summary>
            
             </summary>
             <param name="ASender">sender</param>
             <param name="AEventArgs">event</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.GrdColumns_CellGotFocus(SourceGrid.Selection.SelectionBase,SourceGrid.ChangeActivePositionEventArgs)">
            <summary>
            Select the new column.
            </summary>
            <param name="ASender">sender</param>
            <param name="AEventArgs">event</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.GrdColumns_FocusColumnEntered(System.Object,SourceGrid.ColumnEventArgs)">
            <summary>
            Select the picked column.
            </summary>
            <param name="ASender">sender</param>
            <param name="AEventArgs">event</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.ColumnChanged(System.Int32)">
            <summary>
            This procedure will compare the current settings of the column with the settings stored in FColumnParameters
            </summary>
            <returns>true if the column has changed, ie. the settings are different
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.SelectColumn(System.Int32)">
             <summary>
             This procedure will check if there are no changes to the currently selected column,
             and then will select the new column
            
             </summary>
             <param name="ASelectedColumn">the number of the selected column (starting with 1)
             if it is -1, the edit fields are disabled</param>
             <returns>true if the selection was successful.
             it could fail if there are changed fields in the current selection
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.AddColumn(System.Int32)">
            <summary>
            This procedure will add a new column;
            it will check if the currently selected column can be unselected;
            the new column is selected
            </summary>
            <param name="ASelectedColumn">the new column should be inserted after this column
            if it is -1, the column will be added at the right</param>
            <returns>true if a new column was added
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.ApplyColumnAndUnselect(System.Int32)">
             <summary>
             This procedure will apply the current settings of the column (calling ApplyColumn),
             and then will unselect the column
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.ApplyColumn(System.Int32,System.Boolean)">
             <summary>
             This procedure will apply the current settings of the column,
             and then will unselect the column
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.CancelColumn(System.Int32)">
             <summary>
             This procedure will undo the current settings of the column,
             and then will unselect the column
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.RemoveColumn(System.Int32,System.Boolean)">
             <summary>
             This procedure will remove the currently selected column,
             and after that no column is selected
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.MoveColumn(System.Int32,System.Int32)">
             <summary>
             This procedure will switch the two columns
             and after that the column in the new position is selected
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.FillColumnGrid">
             <summary>
             Fills the column choice datagrid with the current values,
             that are stored in the local column parameters
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.GetFunction(System.String)">
            <summary>
            get the function object of the given calculation string
            </summary>
            <returns>nil if the function cannot be found
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.GetFunction(System.String,Ict.Petra.Shared.MReporting.TParameterList,System.Int32)">
            <summary>
            get the function object of the given calculation string
            </summary>
            <returns>nil if the function cannot be found
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.GetColumnHeadings">
            get the content and the width for the columns
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.PetraUtilsObject">
            helper object for the whole screen
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.MainDS">
            dataset for the whole screen
        </member>
        <member name="E:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.DataLoadingStarted">
            <summary>todoComment</summary>
        </member>
        <member name="E:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerColumns.DataLoadingFinished">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection">
            auto generated user control
            <summary>
            Description of UC_PartnerSelection.ManualCode.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.OnDataLoadingStarted(System.Object,System.EventArgs)">
            to avoid warning CS0067: unused event
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.OnDataLoadingFinished(System.Object,System.EventArgs)">
            to avoid warning CS0067: unused event
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.InitUserControl">
            needs to be called after FMainDS and FPetraUtilsObject have been set
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.RunOnceOnActivation">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.HookupAllControls">
            <summary>
            Adds event handlers for the appropiate onChange event to call a central procedure
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.HookupAllInContainer(System.Windows.Forms.Control)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.CanClose">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.GetPetraUtilsObject">
            auto generated
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.InitialiseData(Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils)">
            <summary>
            Initialisation
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.SetAvailableFunctions(System.Collections.ArrayList)">
            <summary>
            set the functions and column names that are available
            </summary>
            <param name="AAvailableFunctions"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.ReadControls(Ict.Petra.Client.MReporting.Logic.TRptCalculator,Ict.Petra.Client.MReporting.Gui.TReportActionEnum)">
            <summary>
            read the values from the controls and give them to the calculator
            </summary>
            <param name="ACalculator"></param>
            <param name="AReportAction"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.SetControls(Ict.Petra.Shared.MReporting.TParameterList)">
            <summary>
            initialise the controls using the parameters
            </summary>
            <param name="AParameters"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.rbtSelectionChange(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.ShowAllStaffOption(System.Boolean)">
            <summary>
            Hide / Show the radio button "All Staff"
            </summary>
            <param name="AValue">true = show</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.ShowCurrentStaffOption(System.Boolean)">
            <summary>
            Hide / Show the radio button and date time picker "All current staff"
            </summary>
            <param name="AValue">true = show</param>
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.PetraUtilsObject">
            helper object for the whole screen
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.MainDS">
            dataset for the whole screen
        </member>
        <member name="E:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.DataLoadingStarted">
            <summary>todoComment</summary>
        </member>
        <member name="E:Ict.Petra.Client.MReporting.Gui.TFrmUC_PartnerSelection.DataLoadingFinished">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting">
            auto generated user control
            <summary>
            Description of UC_Sorting_ManualCode.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.NUMBER_SORTBY">
            the number of columns that can be sorted is hard coded at the moment
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.OnDataLoadingStarted(System.Object,System.EventArgs)">
            to avoid warning CS0067: unused event
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.OnDataLoadingFinished(System.Object,System.EventArgs)">
            to avoid warning CS0067: unused event
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.InitUserControl">
            needs to be called after FMainDS and FPetraUtilsObject have been set
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.RunOnceOnActivation">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.HookupAllControls">
            <summary>
            Adds event handlers for the appropiate onChange event to call a central procedure
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.HookupAllInContainer(System.Windows.Forms.Control)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.CanClose">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.GetPetraUtilsObject">
            auto generated
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.FSortByComboboxes">
            this holds the references to the comboboxes, that way it is easier to program a flexible number of comboboxes
        </member>
        <member name="F:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.FAvailableFunctions">
            the functions and column names that should be displayed in the sorting boxes
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.InitialiseData(Ict.Petra.Client.MReporting.Gui.TFrmPetraReportingUtils)">
            <summary>
            Initialisation
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.SetAvailableFunctions(System.Collections.ArrayList)">
            <summary>
            set the functions and column names that are available
            </summary>
            <param name="AAvailableFunctions"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.UpdateSortingDetails(System.Object)">
             This will make the correct options available in the sort comboboxes
            
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.ReadControls(Ict.Petra.Client.MReporting.Logic.TRptCalculator,Ict.Petra.Client.MReporting.Gui.TReportActionEnum)">
            <summary>
            read the values from the controls and give them to the calculator
            </summary>
            <param name="ACalculator"></param>
            <param name="AReportAction"></param>
        </member>
        <member name="M:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.SetControls(Ict.Petra.Shared.MReporting.TParameterList)">
            <summary>
            initialise the controls using the parameters
            </summary>
            <param name="AParameters"></param>
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.PetraUtilsObject">
            helper object for the whole screen
        </member>
        <member name="P:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.MainDS">
            dataset for the whole screen
        </member>
        <member name="E:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.DataLoadingStarted">
            <summary>todoComment</summary>
        </member>
        <member name="E:Ict.Petra.Client.MReporting.Gui.TFrmUC_Sorting.DataLoadingFinished">
            <summary>todoComment</summary>
        </member>
    </members>
</doc>
