<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ict.Petra.Client.CommonForms</name>
    </assembly>
    <members>
        <member name="T:Ict.Petra.Client.CommonForms.CancelSaveException">
            <summary>
            This Exception shall be used to cancel a file save. In this case no warning and
            additional error Message is shown ...
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.TFrmPetraUtils">
            <summary>
            this class provides some useful methods for a Petra form
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraUtils.FStatusBar">
            <summary>
            will set the help text for each control, when it gets the focus
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraUtils.FTheForm">
            <summary>
            This is a reference to the WinForm that contains this Petra object
            this object implements the IFrmPetra interface
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraUtils.FWinForm">
            <summary>
            points to the same object as FTheForm, but already casted to a WinForm
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraUtils.FFormActivatedForFirstTime">
            Tells whether the Form is activated for the first time (after loading the Form) or not
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraUtils.FNoAutoHookupOfAllControls">
            Set this to true to prevent the automatic hookup of change Events of all Controls on the Form
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraUtils.FAllControls">
            This will hold a reference to ALL controls on the screen  even if they are buried in groub boxes, panels, or tab pages
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.#ctor(System.IntPtr,Ict.Petra.Client.CommonForms.IFrmPetra,Ict.Common.Controls.TExtStatusBarHelp)">
            <summary>
            constructor
            </summary>
            <param name="ACallerWindowHandle">the int handle of the form that has opened this window; needed for focusing when this window is closed later</param>
            <param name="ATheForm"></param>
            <param name="AStatusBar"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.TFrmPetra_Activated(System.Object,System.EventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.Close">
            <summary>
            just call this function to clean up when closing the form
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.LocalRunOnceOnActivation">
            used to allow subforms to initialise
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.RunOnceOnActivation">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.EnumerateControls(System.Windows.Forms.Control)">
            used to iterate through the controls on the form
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.HookupAllControls">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.HookupAllInContainer(System.Windows.Forms.Control)">
            <summary>
            todoComment
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.EnableAction(System.String,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="AActionName"></param>
            <param name="enable"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.IsEnabled(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="AActionName"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.InitActionState">
            useful for initialising actions, eg based on permissions
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.Form_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.Mni_Click(System.Object,System.EventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.ExecuteAction(Ict.Petra.Client.CommonForms.TItemTag)">
            <summary>
            todoComment
            </summary>
            <param name="ATag"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.ExecuteAction(Ict.Petra.Client.CommonForms.eActionId)">
            <summary>
            todoComment
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.TFrmPetra_Load(System.Object,System.EventArgs)">
            <summary>
            add the form to the forms list
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.TFrmPetra_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
             Event Handler that is invoked when the Form is about to close - no matter
             how the closing was invoked (by calling Form.Close, a Close button, the
             x Button of a Form, etc).
            
             @param sender Event sender
             @param e EventArgs that allow cancelling of the closing
            
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.WriteToStatusBar(System.String)">
             This function can be used to write to the StatusBar.
            
             TLogging can use it as a callback procedure, so it does not need to know
             about the StatusBar itself
            
             @param s the text to be displayed in the StatusBar
            
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.CanClose">
             This function tells the caller whether the window can be closed.
             It can be used to find out if something is still edited, for example.
            
             @return true if window can be closed
            
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.SetStatusBarText(System.Windows.Forms.Control,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="AControl"></param>
            <param name="AHelpText"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.AddComboBoxHistory(System.Object,Ict.Common.Controls.TAcceptNewEntryEventArgs)">
            <summary>
            add new value of combobox to the user defaults, or move existing value to the front;
            limits the number of values to MAX_COMBOBOX_HISTORY
            </summary>
            <param name="Sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraUtils.LoadComboBoxHistory(Ict.Common.Controls.TCmbAutoComplete)">
            <summary>
            load the history of a combobox for auto completion from the user defaults
            </summary>
            <param name="AComboBox"></param>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFrmPetraUtils.NoAutoHookupOfAllControls">
            Set this to true to prevent the automatic hookup of change Events of all Controls on the Form
        </member>
        <member name="E:Ict.Petra.Client.CommonForms.TFrmPetraUtils.ActionEnablingEvent">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFrmPetraUtils.FormActivatedForFirstTime">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.StrFormCaptionPrefixNew">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.StrFormCaptionPrefixReadonly">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FScreenMode">
            Tells which mode the screen should be opened in
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FMainDS">
            Holds the DataSet that contains most data that is used on the screen
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FHasChanges">
            Tells whether the Screen has changes that are not yet saved
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FHasNewData">
            Tells whether the Screen is working with new data (is not editing existing data)
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FCloseFormCheckRun">
            Tells whether the check if the Form can be closed has already been run
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FDetailEditMode">
            Tells whether a Detail of a list of Items is currently beeing edited
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FDetailProtectedMode">
            Tells whether a Detail of a list of Items is in protected mode (readonly)
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FVerificationResultCollection">
            Used for keeping track of data verification errors
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FNoAutoEnableOfSaving">
            Set this to true to prevent the Save button and MenuItem beeing autoenabled when data changes in the form
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FFormLoadedTime">
            Nasty hack to detect whether a form has "just loaded"
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FSuppressChangeDetection">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.#ctor(System.IntPtr,Ict.Petra.Client.CommonForms.IFrmPetraEdit,Ict.Common.Controls.TExtStatusBarHelp)">
            <summary>
            constructor
            </summary>
            <param name="ACallerWindowHandle">the int handle of the form that has opened this window; needed for focusing when this window is closed later</param>
            <param name="ATheForm"></param>
            <param name="AStatusBar"></param>"
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.HookupAllInContainer(System.Windows.Forms.Control)">
            Adds event handlers for the appropiate onChange event to call a central procedure
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.HookupAllControls">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.HookupSomeControls">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.ControlValueChanged">
            This is available for the child form to respond to by overriding
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.LocalControlValueChanged">
            This responds to the fact data has changed at this level
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.MultiEventHandler(System.Object,System.EventArgs)">
            Event handlers for all controls
            this one is for all controls which have the standard sender : Object, e EventArgs
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.TFrmPetraEditUtils_DateChanged(System.Object,Ict.Petra.Client.CommonControls.TPetraDateChangedEventArgs)">
            <summary>
            Event Handler for the TtxtPetraDate Control. Simply calls <see cref="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.MultiEventHandler(System.Object,System.EventArgs)"/>
            so we get an Event that the Control's value has changed.
            </summary>
            <param name="Sender">Sending Object.</param>
            <param name="e">Event Arguments (not used).</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.MniEdit_Click(System.Object,System.EventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.OnAnyDataColumnChanging(System.Object,System.Data.DataColumnChangeEventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.OnAnyDataRowChanging(System.Object,System.Data.DataRowChangeEventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.OnDataSaved(System.Object,Ict.Common.TDataSavedEventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.OnDataSavingStart(System.Object,System.EventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.HookupDataChangeEvents">
             Hook events that enable the 'Save' ToolBarButton and File/Save menu entry
            
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.EnableDataChangedEvent">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.DisableDataChangedEvent">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.SetChangedFlag">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.InitActionState">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.DisableSaveButton">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FormDataSaved(System.Object,Ict.Common.TDataSavedEventArgs)">
             This Procedure will get called from the SaveChanges procedure whenever a
             Save operation is finished (successful or unsuccesful).
            
             @param sender The Object that throws this Event
             @param e Event Arguments. Success property is true if saving was successful,
             otherwise false.
            
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.FormDataSavingStarted(System.Object,System.EventArgs)">
             This Procedure will get called from the SaveChanges procedure before it
             actually performs any saving operation.
            
             @param sender The Object that throws this Event
             @param e Event Arguments.
            
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.CanClose">
             This function checks whether the window can be closed.
            
             It can be used to find out e.g. if something is still beeing edited and
             unsaved or whether a particular screen won't allow closing for other reasons.
            
             @return true if window can be closed
            
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.CloseFormCheck">
            <summary>
            don't close window when the details are being edited;
            if there are changes, ask the user what to do:
            save and close, discard and close, or cancel closing
            </summary>
            <returns>returns false if the form cannot be closed</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.TFrmPetra_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
             Event Handler that is invoked when the Form is about to close - no matter
             how the closing was invoked (by calling Form.Close, a Close button, the
             x Button of a Form, etc).
            
             @param sender Event sender
             @param e EventArgs that allow cancelling of the closing
            
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.InDetailEditMode">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.SetScreenCaption">
            <summary>todoComment</summary>
        </member>
        <member name="E:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.DataSavingStarted">
            <summary>todoComment</summary>
        </member>
        <member name="E:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.DataSaved">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.VerificationResultCollection">
            Used for keeping track of data verification errors
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.SuppressChangeDetection">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.NoAutoEnableOfSaving">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.HasChanges">
            Tells whether the Screen has changes that are not yet saved
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.CloseFormCheckRun">
            <summary>
            Tells whether the check if the Form can be closed has already been run
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.ScreenMode">
            Tells which mode the screen should be opened in
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.DetailEditMode">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFrmPetraEditUtils.DetailProtectedMode">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.PetraEditForm">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.PetraEditForm.FORM_CHANGEDDATAINDICATOR">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.IFrmPetraEdit">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.IFrmPetra">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.IFrmPetra.RunOnceOnActivation">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.IFrmPetra.CanClose">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.IFrmPetra.GetPetraUtilsObject">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.IFrmPetraEdit.SaveChanges">
            <summary>Save the changes</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.ActionEventHandler">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.eActionId">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.eActionId.eHelp">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.eActionId.eAbout">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.eActionId.eClose">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.eActionId.eHelpDevelopmentTeam">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.eActionId.eHelpAbout">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.eActionId.eBugReport">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.TItemTag">
            <summary>
            this is a helper class to identify menu items and toolbar buttons
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TItemTag.#ctor(Ict.Petra.Client.CommonForms.eActionId)">
            <summary>
            constructor
            </summary>
            <param name="AId">identifier for the type of menu item</param>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TItemTag.Id">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.PetraForm">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.PetraForm.AUTOSCALEBASESIZEWIDTHFOR96DPI">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils">
            <summary>
            utility class for the Petra Main screen and the Petra Module Main screens
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils.AddModuleWindow(System.Type)">
            <summary>
            because of dependency cycle, we cannot directly reference the module windows
            therefore they need to be added by the main program, and will be generated with reflection
            </summary>
            <param name="AWindowType"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils.#ctor(System.IntPtr,Ict.Petra.Client.CommonForms.IFrmPetra,Ict.Common.Controls.TExtStatusBarHelp)">
            <summary>
            constructor
            </summary>
            <param name="ACallerWindowHandle">the int handle of the form that has opened this window; needed for focusing when this window is closed later</param>
            <param name="ATheForm"></param>
            <param name="AStatusBar"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils.OpenMainScreen(System.Object,System.EventArgs)">
            <summary>
            switch to main screen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils.OpenFinanceModule(System.Object,System.EventArgs)">
            <summary>
            switch to the finance screen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils.OpenConferenceModule(System.Object,System.EventArgs)">
            <summary>
            switch to the conference screen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils.OpenFinDevModule(System.Object,System.EventArgs)">
            <summary>
            switch to the Financial Development screen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils.OpenPartnerModule(System.Object,System.EventArgs)">
            <summary>
            switch to the partner screen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils.OpenPersonnelModule(System.Object,System.EventArgs)">
            <summary>
            switch to the personnel screen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils.OpenSysManModule(System.Object,System.EventArgs)">
            <summary>
            switch to the System Manager screen
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFrmPetraModuleUtils.InitActionState">
             <summary>
             Checks the Module Access Permissions for the current user and disables or
             enables the 'Petra' Menue items and the Module Buttons according to the
             permissions.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.TFormsList">
             <summary>
             manages a list of open Petra Forms and Petra Dialogs.
            
             @Comment Managing such a list is necessary for (1) being able to check at
               application close time whether any forms are still open that have unsaved
               data, (2) to manage whether multiple or only a single instance of a form
               should be allowed to be opened.
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFormsList.WindowRelationship">
            <summary>Key: child; value: parent; both can be either Delphi or Progress windows</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TFormsList.GFormsList">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.OnInsert(System.Object,System.Object)">
            <summary>
            Type checking events
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.OnSet(System.Object,System.Object,System.Object)">
            <summary>
            todoComment
            </summary>
            <param name="AKey"></param>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.OnValidate(System.Object,System.Object)">
            <summary>
            todoComment
            </summary>
            <param name="AKey"></param>
            <param name="AValue"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.Add(System.Windows.Forms.Form)">
            <summary>
            todoComment
            </summary>
            <param name="AValue"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.Remove(System.Windows.Forms.Form)">
            <summary>
            todoComment
            </summary>
            <param name="AValue"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.CanCloseAll(System.Collections.Specialized.StringCollection@,System.String@)">
            <summary>
            todoComment
            </summary>
            <param name="ANonClosableForms"></param>
            <param name="AFirstNonCloseableFormKey"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.CloseAll">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.CloseAllExceptOne(System.Windows.Forms.Form)">
            <summary>
            todoComment
            </summary>
            <param name="ADontCloseForm"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.Contains(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="AFormName"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.Contains(System.Windows.Forms.Form)">
            <summary>
            todoComment
            </summary>
            <param name="AValue"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.OpenForms">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.GetFormByTitle(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ATitle"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.GetFormByHandle(System.IntPtr)">
            <summary>
            todoComment
            </summary>
            <param name="AWindowHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.ShowForm(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="AFormName"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.NotifyWindowClose(System.IntPtr)">
            <summary>
            todoComment
            </summary>
            <param name="AClosingWindowHandle"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TFormsList.NotifyWindowOpened(System.IntPtr,System.IntPtr)">
            <summary>
            todoComment
            </summary>
            <param name="ACallerWindowHandle"></param>
            <param name="ANewWindowHandle"></param>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFormsList.Item(System.String)">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFormsList.Keys">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TFormsList.Values">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm">
            <summary>Imlements TPetraShepherdForm (and therefore becomes a WinForm)
             and handles the GUI behaviour of a Shepherd. Utilises
             TPetraShepherdFormLogic for the base Shepherd Logic.</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.TPetraShepherdForm">
            <summary>
            The base GUI for all Petra Shepherd Forms: elements will be present in every Shepherd Page
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdForm.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdForm.BtnFinishClick(System.Object,System.EventArgs)">
            <summary>
            Virtual function: implementor should handle action for Finish button click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdForm.BtnNextClick(System.Object,System.EventArgs)">
            <summary>
            Virtual function: implementor should handle action for Next button click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdForm.BtnBackClick(System.Object,System.EventArgs)">
            <summary>
            Virtual function: implementor should handle action for Back button click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdForm.BtnCancelClick(System.Object,System.EventArgs)">
            <summary>
            Virtual function: implementor should handle action for Cancel button click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdForm.BtnHelpClick(System.Object,System.EventArgs)">
            <summary>
            Virtual function: implementor should handle action for Help button click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdForm.Form_Load(System.Object,System.EventArgs)">
            <summary>
            Virtual function: implementor should handle the loading of the current form
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdForm.TextBox1TextChanged(System.Object,System.EventArgs)">
            <summary>
            TODO: This is a temporary Action: we are using this to test the page switching functionality
            of the shepherd.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraShepherdForm.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdForm.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdForm.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.FPetraUtilsObject">
            <summary>Helper object for Edit screens.</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.FMainDS">
            <summary>Holds the DataSet that contains most data that is used on the screen.</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.FYamlFile">
            <summary>Name of the YAML file that contains the definition of the Shepherd Pages and the Shepherd overall</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.ShepherdTitle">
            <summary>Name of the Shepherd that will be imported. It has to be a global variable because it has to bounce from </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.FLogic">
            <summary>Instance of base Shepherd Logic.</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.FShepherdNavigationHelper">
            <summary>Instance of helper Class for navigation purposes</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.#ctor(System.IntPtr)">
            <summary>Constructor</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.BtnFinishClick(System.Object,System.EventArgs)">
            <summary>
            Overwrites virtual function in PetraShepherdForm.cs,
            calls function in PetraShepherdConcreteForm.cs in logic namespace to handle action
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.BtnNextClick(System.Object,System.EventArgs)">
            <summary>
            Overwrites virtual function in PetraShepherdForm.cs,
            calls function in PetraShepherdConcreteForm.cs in logic namespace to handle action
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.BtnBackClick(System.Object,System.EventArgs)">
            <summary>
            Overwrites virtual function in PetraShepherdForm.cs,
            calls function in PetraShepherdConcreteForm.cs in logic namespace to handle action
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.BtnCancelClick(System.Object,System.EventArgs)">
            <summary>
            Overwrites virtual function in PetraShepherdForm.cs,
            calls function in PetraShepherdConcreteForm.cs in logic namespace to handle action
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.BtnHelpClick(System.Object,System.EventArgs)">
            <summary>
            Overwrites virtual function in PetraShepherdForm.cs,
            calls function in PetraShepherdConcreteForm.cs in logic namespace to handle action
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.Form_Load(System.Object,System.EventArgs)">
            <summary>
            Gets called when the Form is shown but before it's painted
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.UpdateNavigation">
            <summary>Update navigation buttons and navigation panel</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.ShowCurrentPage">
            <summary>Displays the 'current' Shepherd Page and updates the navigation buttons and Navigation Panel</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.CancelShepherd">
            <summary>Closes the Shepherd without any further ado and without saving</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.SaveChanges(System.Data.DataSet@)">
            <summary>
            Determines the changes in the screen's dataset and submits them to the
            Server.
            </summary>
            <param name="AInspectDS">The screen's dataset
            </param>
            <returns>True if saving of data succeeded, otherwise false.</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.RunOnceOnActivation">
            TODO
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.HookupAllControls">
            <summary>
            Adds event handlers for the appropiate onChange event to call a central procedure
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.HookupAllInContainer(System.Windows.Forms.Control)">
            TODO
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.CanClose">
            TODO
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.GetPetraUtilsObject">
            TODO
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraShepherdConcreteForm.SaveChanges">
            <summary>
            Calls the internal SaveChanges Method.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.TPetraUserControl">
             <summary>
             This UserControl is the Base UserControl for all Petra UserControls.
            
             It contains a StatusBarTextProvider and some default variables and properties.
            
             @Comment All UserControls that are used in Petra should inherit from this
               UserControl!
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraUserControl.FMainDS">
            <summary>Holds the DataSet that contains most data that is used in the UserControl</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraUserControl.FVerificationResultCollection">
            <summary>Used for keeping track of data verification errors</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraUserControl.FDataMode">
            <summary>Used for storing the current DataMode (Browse, Edit, Add, ...)</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraUserControl.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraUserControl.DataSavingStartedEventFired">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraUserControl.DataSavedEventFired(System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="ASuccess"></param>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TPetraUserControl.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraUserControl.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TPetraUserControl.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TPetraUserControl.MainDS">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TPetraUserControl.VerificationResultCollection">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TPetraUserControl.InDesignMode">
            <summary>
            Special property to determine whether our code is running in the WinForms Designer.
            The result of this property is correct even if InitializeComponent() wasn't run yet
            (.NET's DesignMode property returns false in that case)!
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.IPetraUserControl">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.IPetraUserControl.PetraUtilsObject">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.IPetraEditUserControl">
            <summary>
            this interface is needed to let the user control know about the utils object
            the user control can subscribe to action enabling events etc
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.IPetraEditUserControl.PetraUtilsObject">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage">
            auto generated user control
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.OnDataLoadingStarted(System.Object,System.EventArgs)">
            to avoid warning CS0067: unused event
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.OnDataLoadingFinished(System.Object,System.EventArgs)">
            to avoid warning CS0067: unused event
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.InitUserControl">
            needs to be called after FMainDS and FPetraUtilsObject have been set
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.RunOnceOnActivation">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.HookupAllControls">
            <summary>
            Adds event handlers for the appropiate onChange event to call a central procedure
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.HookupAllInContainer(System.Windows.Forms.Control)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.CanClose">
            auto generated
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.GetPetraUtilsObject">
            auto generated
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.PetraUtilsObject">
            helper object for the whole screen
        </member>
        <member name="E:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.DataLoadingStarted">
            <summary>todoComment</summary>
        </member>
        <member name="E:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.DataLoadingFinished">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.SummaryText1">
            <summary>
            Summary Text #1
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.SummaryText2">
            <summary>
            Summary Text #2
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.FurtherActionOnFinishCheckBoxVisible">
            <summary>
            Determines whether the 'Further action on finish' CheckBox is shown (not shown by default).
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.FurtherActionOnFinishText">
            <summary>
            Text displayed for the 'Further action on finish' CheckBox.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonForms.TUC_PetraShepherdFinishPage.FurtherActionOnFinishChecked">
            <summary>
            Determines the Checked state of the 'Further action on finish' CheckBox (not Checked by default).
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonForms.WindowHandling">
            <summary>
            Contains Windows API (WinAPI) calls that are necessary for getting window positions right
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.WindowHandling.SW_HIDE">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.WindowHandling.SW_SHOWNORMAL">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.WindowHandling.SW_SHOW">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonForms.WindowHandling.SW_RESTORE">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.WindowHandling.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            todoComment
            </summary>
            <param name="hwnd"></param>
            <param name="nCmdShow"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.WindowHandling.ShowWindowWrapper(System.IntPtr,System.Int32)">
            <summary>
            this is a wrapper around the win32 function ShowWindow
            </summary>
            <param name="hwnd"></param>
            <param name="nCmdShow"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.WindowHandling.SetForegroundWindow(System.IntPtr)">
             The SetForegroundWindow function puts the thread that created the
            specified window into the foreground and activates the window
        </member>
        <member name="M:Ict.Petra.Client.CommonForms.WindowHandling.SetForegroundWindowWrapper(System.IntPtr)">
            <summary>
            this is a wrapper around the win32 function SetForegroundWindow
            </summary>
            <param name="hwnd"></param>
            <returns></returns>
        </member>
    </members>
</doc>
