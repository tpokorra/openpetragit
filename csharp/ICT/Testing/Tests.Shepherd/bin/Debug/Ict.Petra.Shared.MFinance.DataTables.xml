<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ict.Petra.Shared.MFinance.DataTables</name>
    </assembly>
    <members>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable">
            This contains the settings for one specific bank account
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnBankingDetailsKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnImportfilePathId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnExportfilePathId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnPluginFilenameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnPluginParametersId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnConfidentialGiftFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnTaxDeductableId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnMotivationGroupCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnMotivationDetailCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnBankingDetailsKey">
            The bank account whose settings are defined here
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnLedgerNumber">
            The bank account has to be assigned to a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnAccountCode">
            The GL account for the bank account
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnImportfilePath">
            This tells the plugin where to find the statement files for this bank account
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnExportfilePath">
            This tells the plugin where to write any generated files for this bank account
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnPluginFilename">
            This can be either the name of an executable or a DLL that is able to process the country (or bank) specific bank statements
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnPluginParameters">
            Other parameters for the plugin can be stored here
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnConfidentialGiftFlag">
            if this is true, all gifts to this bank account get this flag set
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnTaxDeductable">
            Whether the gifts to this bank account are tax deductable
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnMotivationGroupCode">
            This defines a default motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnMotivationDetailCode">
            This defines a default motivation detail within a motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetBankingDetailsKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetBankingDetailsKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetImportfilePathDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetImportfilePathLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetExportfilePathDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetExportfilePathLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetPluginFilenameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetPluginFilenameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetPluginParametersDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetPluginParametersLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetConfidentialGiftFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetConfidentialGiftFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetTaxDeductableDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetTaxDeductableLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetMotivationGroupCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetMotivationGroupCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetMotivationDetailCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetMotivationDetailCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow">
            This contains the settings for one specific bank account
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsBankingDetailsKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetBankingDetailsKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsImportfilePathNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetImportfilePathNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsExportfilePathNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetExportfilePathNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsPluginFilenameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetPluginFilenameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsPluginParametersNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetPluginParametersNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsConfidentialGiftFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetConfidentialGiftFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsTaxDeductableNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetTaxDeductableNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsMotivationGroupCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetMotivationGroupCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsMotivationDetailCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetMotivationDetailCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.BankingDetailsKey">
            The bank account whose settings are defined here
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.LedgerNumber">
            The bank account has to be assigned to a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.AccountCode">
            The GL account for the bank account
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.ImportfilePath">
            This tells the plugin where to find the statement files for this bank account
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.ExportfilePath">
            This tells the plugin where to write any generated files for this bank account
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.PluginFilename">
            This can be either the name of an executable or a DLL that is able to process the country (or bank) specific bank statements
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.PluginParameters">
            Other parameters for the plugin can be stored here
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.ConfidentialGiftFlag">
            if this is true, all gifts to this bank account get this flag set
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.TaxDeductable">
            Whether the gifts to this bank account are tax deductable
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.MotivationGroupCode">
            This defines a default motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.MotivationDetailCode">
            This defines a default motivation detail within a motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpAccountRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable">
            List of recently imported bank statements
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnStatementKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnBankAccountKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnBankAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnIdFromBankId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnFilenameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnEndBalanceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnStatementKey">
            auto generated unique identifier for bank statements
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnBankAccountKey">
            this is the bank account that this statement is for; this is necessary because you can have several accounts at the same bank
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnLedgerNumber">
            The four digit ledger number of the gift.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnBankAccountCode">
            The bank account for creating GL transactions against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnDate">
            The date of this statement
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnIdFromBank">
            This is the ID that the bank uses for this statement; it can be used to find the paper version of the bank statement
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnFilename">
            This is the name of the file that this statement was read from; this can be used to prevent duplicate import of bank statements
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnEndBalance">
            The end balance of the bank account after the statement
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnCurrencyCode">
            This defines the currency of the transactions on this statement
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetStatementKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetStatementKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetBankAccountKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetBankAccountKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetBankAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetBankAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetIdFromBankDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetIdFromBankLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetFilenameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetFilenameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetEndBalanceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetEndBalanceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow">
            List of recently imported bank statements
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsStatementKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetStatementKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsBankAccountKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetBankAccountKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsBankAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetBankAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsIdFromBankNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetIdFromBankNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsFilenameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetFilenameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsEndBalanceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetEndBalanceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.StatementKey">
            auto generated unique identifier for bank statements
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.BankAccountKey">
            this is the bank account that this statement is for; this is necessary because you can have several accounts at the same bank
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.LedgerNumber">
            The four digit ledger number of the gift.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.BankAccountCode">
            The bank account for creating GL transactions against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.Date">
            The date of this statement
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.IdFromBank">
            This is the ID that the bank uses for this statement; it can be used to find the paper version of the bank statement
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.Filename">
            This is the name of the file that this statement was read from; this can be used to prevent duplicate import of bank statements
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.EndBalance">
            The end balance of the bank account after the statement
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.CurrencyCode">
            This defines the currency of the transactions on this statement
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpStatementRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable">
            the matches that can be used to identify recurring gift or GL transactions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnEpMatchKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMatchTextId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnDetailId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnActionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnRecentMatchId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnRecipientLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMotivationGroupCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMotivationDetailCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnCommentOneTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnGiftCommentOneId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnConfidentialGiftFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnTaxDeductableId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnRecipientKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnChargeFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMailingCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnCommentTwoTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnGiftCommentTwoId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnCommentThreeTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnGiftCommentThreeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnGiftTransactionAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnHomeAdminChargesFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnIltAdminChargesFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnReceiptLetterCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMethodOfGivingCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMethodOfPaymentCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnDonorKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnAdminChargeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnNarrativeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnDonorShortNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnRecipientShortNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnRestrictedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnKeyMinistryKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnEpMatchKey">
            this is a sequence to easily identify which transaction has been matched and how
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMatchText">
            this is a separated list of all the recurring details of a_ep_transaction (ie. name, bank account, sort code, IBAN, amount, description)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnDetail">
            the match can be applied to split gifts as well
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnAction">
            What to do with this match: gift, GL, or discard
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnRecentMatch">
            The date when this match was recently applied; useful for purging old entries
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnLedgerNumber">
            The four digit ledger number of the gift.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnRecipientLedgerNumber">
            The partner key of the commitment field (the unit) of the recipient of the gift.  This is not the ledger number but rather the partner key of the unit associated with the ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMotivationGroupCode">
            This defines a motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMotivationDetailCode">
            This defines the motivation detail within a motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnCommentOneType">
            Used to decide whose reports will see this comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnGiftCommentOne">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnConfidentialGiftFlag">
            Defines whether the donor wishes the recipient to know who gave the gift
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnTaxDeductable">
            Whether this gift is tax deductable
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnRecipientKey">
            The partner key of the recipient of the gift.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnChargeFlag">
            To determine whether an admin fee on the transaction should be overwritten if it normally has a charge associated with it. Used for both local and ilt transaction.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMailingCode">
            Mailing Code of the mailing that the gift was a response to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnCommentTwoType">
            Used to decide whose reports will see this comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnGiftCommentTwo">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnCommentThreeType">
            Used to decide whose reports will see this comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnGiftCommentThree">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnGiftTransactionAmount">
            This is a number of currency units in the entered Currency
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnHomeAdminChargesFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnIltAdminChargesFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnReceiptLetterCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMethodOfGivingCode">
            Defines how a gift is given.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnMethodOfPaymentCode">
            This is how the partner paid. Eg cash, Cheque etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnDonorKey">
            This is the partner key of the donor.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnAdminCharge">
            NOT USED AT ALL
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnNarrative">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnReference">
            Reference number/code for the transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnDonorShortName">
            short name of the donor; will be used for generating export files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnRecipientShortName">
            short name of recipient
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnRestricted">
            Indicates whether or not the gift has restricted access. If it does then the access will be controlled by s_group_gift
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnKeyMinistryKey">
            Key ministry to which this transaction applies (just for fund transfers)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetEpMatchKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetEpMatchKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMatchTextDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMatchTextLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetDetailDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetDetailLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetActionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetActionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetRecentMatchDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetRecentMatchLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetRecipientLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetRecipientLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMotivationGroupCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMotivationGroupCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMotivationDetailCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMotivationDetailCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetCommentOneTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetCommentOneTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetGiftCommentOneDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetGiftCommentOneLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetConfidentialGiftFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetConfidentialGiftFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetTaxDeductableDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetTaxDeductableLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetRecipientKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetRecipientKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetChargeFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetChargeFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMailingCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMailingCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetCommentTwoTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetCommentTwoTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetGiftCommentTwoDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetGiftCommentTwoLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetCommentThreeTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetCommentThreeTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetGiftCommentThreeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetGiftCommentThreeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetGiftTransactionAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetGiftTransactionAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetHomeAdminChargesFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetHomeAdminChargesFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetIltAdminChargesFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetIltAdminChargesFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetReceiptLetterCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetReceiptLetterCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMethodOfGivingCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMethodOfGivingCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMethodOfPaymentCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetMethodOfPaymentCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetDonorKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetDonorKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetAdminChargeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetAdminChargeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetNarrativeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetNarrativeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetDonorShortNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetDonorShortNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetRecipientShortNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetRecipientShortNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetRestrictedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetRestrictedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetKeyMinistryKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetKeyMinistryKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow">
            the matches that can be used to identify recurring gift or GL transactions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsEpMatchKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetEpMatchKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsMatchTextNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetMatchTextNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsDetailNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetDetailNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsActionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetActionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsRecentMatchNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetRecentMatchNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsRecipientLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetRecipientLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsMotivationGroupCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetMotivationGroupCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsMotivationDetailCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetMotivationDetailCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsCommentOneTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetCommentOneTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsGiftCommentOneNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetGiftCommentOneNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsConfidentialGiftFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetConfidentialGiftFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsTaxDeductableNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetTaxDeductableNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsRecipientKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetRecipientKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsChargeFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetChargeFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsMailingCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetMailingCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsCommentTwoTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetCommentTwoTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsGiftCommentTwoNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetGiftCommentTwoNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsCommentThreeTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetCommentThreeTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsGiftCommentThreeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetGiftCommentThreeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsGiftTransactionAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetGiftTransactionAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsHomeAdminChargesFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetHomeAdminChargesFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsIltAdminChargesFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetIltAdminChargesFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsReceiptLetterCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetReceiptLetterCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsMethodOfGivingCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetMethodOfGivingCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsMethodOfPaymentCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetMethodOfPaymentCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsDonorKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetDonorKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsAdminChargeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetAdminChargeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsNarrativeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetNarrativeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsDonorShortNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetDonorShortNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsRecipientShortNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetRecipientShortNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsRestrictedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetRestrictedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsKeyMinistryKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetKeyMinistryKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.EpMatchKey">
            this is a sequence to easily identify which transaction has been matched and how
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.MatchText">
            this is a separated list of all the recurring details of a_ep_transaction (ie. name, bank account, sort code, IBAN, amount, description)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.Detail">
            the match can be applied to split gifts as well
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.Action">
            What to do with this match: gift, GL, or discard
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.RecentMatch">
            The date when this match was recently applied; useful for purging old entries
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.LedgerNumber">
            The four digit ledger number of the gift.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.RecipientLedgerNumber">
            The partner key of the commitment field (the unit) of the recipient of the gift.  This is not the ledger number but rather the partner key of the unit associated with the ledger.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.MotivationGroupCode">
            This defines a motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.MotivationDetailCode">
            This defines the motivation detail within a motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.CommentOneType">
            Used to decide whose reports will see this comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.GiftCommentOne">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.ConfidentialGiftFlag">
            Defines whether the donor wishes the recipient to know who gave the gift
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.TaxDeductable">
            Whether this gift is tax deductable
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.RecipientKey">
            The partner key of the recipient of the gift.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.ChargeFlag">
            To determine whether an admin fee on the transaction should be overwritten if it normally has a charge associated with it. Used for both local and ilt transaction.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.CostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.MailingCode">
            Mailing Code of the mailing that the gift was a response to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.CommentTwoType">
            Used to decide whose reports will see this comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.GiftCommentTwo">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.CommentThreeType">
            Used to decide whose reports will see this comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.GiftCommentThree">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.GiftTransactionAmount">
            This is a number of currency units in the entered Currency
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.HomeAdminChargesFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.IltAdminChargesFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.ReceiptLetterCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.MethodOfGivingCode">
            Defines how a gift is given.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.MethodOfPaymentCode">
            This is how the partner paid. Eg cash, Cheque etc
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.DonorKey">
            This is the partner key of the donor.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.AdminCharge">
            NOT USED AT ALL
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.Narrative">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.Reference">
            Reference number/code for the transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.DonorShortName">
            short name of the donor; will be used for generating export files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.RecipientShortName">
            short name of recipient
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.Restricted">
            Indicates whether or not the gift has restricted access. If it does then the access will be controlled by s_group_gift
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.KeyMinistryKey">
            Key ministry to which this transaction applies (just for fund transfers)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpMatchRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable">
            the transactions from the recently imported bank statements; they should help to identify the other party of the transaction (donor, etc) and the purpose of the transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnStatementKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnOrderId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnDetailKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnNumberOnPaperStatementId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnMatchTextId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnAccountNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnTitleId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnFirstNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnMiddleNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnLastNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnBranchCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnBicId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnBankAccountNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnIbanId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnTransactionTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnTransactionAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnDateEffectiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnEpMatchKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnStatementKey">
            this transaction belongs to that statement
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnOrder">
            to complete the primary key
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnDetailKey">
            a transaction can be split in order to support mixed GL and Gift records
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnNumberOnPaperStatement">
            can be different from order, since the paper statements can have different order than the electronic statement
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnMatchText">
            this is a calculated text that uniquely identifies this transaction so that it can be recognised next month. TODO: should have a link table a_ep_match between a_ep_transaction and a_ep_match_detail
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnAccountName">
            This can be a summary of title, first name, last name etc. of the other party
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnTitle">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnFirstName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnMiddleName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnLastName">
            the name of the other party
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnBranchCode">
            The bank code/branch code/sort code of the other party.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnBic">
            BIC (Bank Identifier Code)/SWIFT code of the other party
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnBankAccountNumber">
            The account number in the bank of the other party
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnIban">
            The IBAN (International Bank Account Number) of the other party.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnTransactionTypeCode">
            This can be recurring income, recurring payment, income, payment, direct debit, etc.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnTransactionAmount">
            The amount in the currency of the bank account
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnDescription">
            This description was given when the transfer was initiated
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnDateEffective">
            The date when this transaction became valid or available
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnEpMatchKey">
            set this value to the match (either new match or set automatically)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetStatementKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetStatementKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetOrderDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetOrderLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetDetailKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetDetailKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetNumberOnPaperStatementDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetNumberOnPaperStatementLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetMatchTextDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetMatchTextLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetAccountNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetAccountNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetTitleDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetTitleLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetFirstNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetFirstNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetMiddleNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetMiddleNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetLastNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetLastNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetBranchCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetBranchCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetBicDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetBicLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetBankAccountNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetBankAccountNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetIbanDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetIbanLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetTransactionTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetTransactionTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetTransactionAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetTransactionAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetDateEffectiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetDateEffectiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetEpMatchKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetEpMatchKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow">
            the transactions from the recently imported bank statements; they should help to identify the other party of the transaction (donor, etc) and the purpose of the transaction
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsStatementKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetStatementKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsOrderNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetOrderNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsDetailKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetDetailKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsNumberOnPaperStatementNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetNumberOnPaperStatementNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsMatchTextNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetMatchTextNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsAccountNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetAccountNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsTitleNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetTitleNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsFirstNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetFirstNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsMiddleNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetMiddleNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsLastNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetLastNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsBranchCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetBranchCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsBicNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetBicNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsBankAccountNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetBankAccountNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsIbanNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetIbanNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsTransactionTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetTransactionTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsTransactionAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetTransactionAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsDateEffectiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetDateEffectiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsEpMatchKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetEpMatchKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.StatementKey">
            this transaction belongs to that statement
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.Order">
            to complete the primary key
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.DetailKey">
            a transaction can be split in order to support mixed GL and Gift records
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.NumberOnPaperStatement">
            can be different from order, since the paper statements can have different order than the electronic statement
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.MatchText">
            this is a calculated text that uniquely identifies this transaction so that it can be recognised next month. TODO: should have a link table a_ep_match between a_ep_transaction and a_ep_match_detail
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.AccountName">
            This can be a summary of title, first name, last name etc. of the other party
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.Title">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.FirstName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.MiddleName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.LastName">
            the name of the other party
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.BranchCode">
            The bank code/branch code/sort code of the other party.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.Bic">
            BIC (Bank Identifier Code)/SWIFT code of the other party
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.BankAccountNumber">
            The account number in the bank of the other party
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.Iban">
            The IBAN (International Bank Account Number) of the other party.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.TransactionTypeCode">
            This can be recurring income, recurring payment, income, payment, direct debit, etc.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.TransactionAmount">
            The amount in the currency of the bank account
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.Description">
            This description was given when the transfer was initiated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.DateEffective">
            The date when this transaction became valid or available
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.EpMatchKey">
            set this value to the match (either new match or set automatically)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEpTransactionRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable">
            Subsystems to the general ledger which can be added and removed independantly.  Eg GL, AP, AR, GR
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnSubSystemCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnSubSystemNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnSetupSubSystemProcessId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnSubSystemToCallId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnSubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnSubSystemName">
            Name of a sub system
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnSetupSubSystemProcess">
            The filename of the process to call
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnSubSystemToCall">
            The filename of the process to call
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetSubSystemCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetSubSystemCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetSubSystemNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetSubSystemNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetSetupSubSystemProcessDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetSetupSubSystemProcessLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetSubSystemToCallDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetSubSystemToCallLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow">
            Subsystems to the general ledger which can be added and removed independantly.  Eg GL, AP, AR, GR
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.IsSubSystemCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SetSubSystemCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.IsSubSystemNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SetSubSystemNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.IsSetupSubSystemProcessNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SetSetupSubSystemProcessNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.IsSubSystemToCallNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SetSubSystemToCallNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SubSystemName">
            Name of a sub system
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SetupSubSystemProcess">
            The filename of the process to call
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.SubSystemToCall">
            The filename of the process to call
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASubSystemRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable">
            Basic information for each general ledger on the system. Also counters for ledger-specific variables (such as last receipt number).
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLedgerNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLedgerStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastRecurringBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastGiftNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastApInvNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastHeaderRNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastPoNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastSoNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnMaxGiftAidAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnMinGiftAidAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnNumberOfGiftsToDisplayId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnIltGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnProfitLossGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCurrentAccountingPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnNumberOfAccountingPeriodsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCountryCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnBaseCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTransactionAccountFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnYearEndFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnForexGainsLossesAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnSystemInterfaceFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnSuspenseAccountFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnBankAccountsFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDeleteLedgerFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnNewFinancialYearFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnRecalculateGlMasterFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnInstallationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnBudgetControlFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnBudgetDataRetentionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCostOfSalesGlAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCreditorGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCurrentFinancialYearId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCurrentPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDateCrDrBalancesId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDebtorGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnFaDepreciationGlAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnFaGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnFaPlOnSaleGlAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnFaProvForDepnGlAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnIltAccountFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastApDnNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastPoRetNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastSoDelNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastSoRetNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastSpecialGiftNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnNumberFwdPostingPeriodsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnPeriodsPerFinancialYearId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDiscountAllowedPctId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDiscountReceivedPctId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnPoAccrualGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnProvisionalYearEndFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnPurchaseGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnRetEarningsGlAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnSalesGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnSoAccrualGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnStockAccrualGlAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnStockAdjGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnStockGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxExclInclId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxExclInclIndicatorId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxInputGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxInputGlCcCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxOutputGlAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTermsOfPaymentCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastPoRecNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxGlAccountNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnActualsDataRetentionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnPartnerKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCalendarModeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnYearEndProcessStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastHeaderPNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnIltProcessingCentreId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastGiftBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnIntlCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastRecGiftBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnGiftDataRetentionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnRecalculateAllPeriodsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastIchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnBranchProcessingId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnConsolidationLedgerId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files .It is created from the first 4 digits of a partner key of type ""ledger"".
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLedgerName">
            This is the ledger name
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLedgerStatus">
            Defines if the ledger is in use
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastBatchNumber">
            This is the last batch number used within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastRecurringBatchNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastGiftNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastApInvNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastHeaderRNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastPoNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastSoNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnMaxGiftAidAmount">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnMinGiftAidAmount">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnNumberOfGiftsToDisplay">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnIltGlAccountCode">
            The account for inter-ledger transfers.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnProfitLossGlAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCurrentAccountingPeriod">
            deprecated; not used at the moment; please use a_current_period_i
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnNumberOfAccountingPeriods">
            This defines which accounting period is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCountryCode">
            This identifies a country. It uses the ISO 3166-1-alpha-2 code elements.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnBaseCurrency">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTransactionAccountFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnYearEndFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnForexGainsLossesAccount">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnSystemInterfaceFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnSuspenseAccountFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnBankAccountsFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDeleteLedgerFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnNewFinancialYearFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnRecalculateGlMasterFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnInstallationId">
            Defines which installation is running on this database
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnBudgetControlFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnBudgetDataRetention">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCostOfSalesGlAccount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCreditorGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCurrentFinancialYear">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCurrentPeriod">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDateCrDrBalances">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDebtorGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnFaDepreciationGlAccount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnFaGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnFaPlOnSaleGlAccount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnFaProvForDepnGlAccount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnIltAccountFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastApDnNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastPoRetNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastSoDelNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastSoRetNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastSpecialGiftNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnNumberFwdPostingPeriods">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnPeriodsPerFinancialYear">
            deprecated; not used at the moment; please use a_number_of_accounting_periods_i
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDiscountAllowedPct">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDiscountReceivedPct">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnPoAccrualGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnProvisionalYearEndFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnPurchaseGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnRetEarningsGlAccount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnSalesGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnSoAccrualGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnStockAccrualGlAccount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnStockAdjGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnStockGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxExclIncl">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxExclInclIndicator">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxInputGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxInputGlCcCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxOutputGlAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTermsOfPaymentCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastPoRecNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnTaxGlAccountNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnActualsDataRetention">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnPartnerKey">
            Partner key which links the ledger to the partner type record where the type is a ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCalendarMode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnYearEndProcessStatus">
            How far along is the year end process.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastHeaderPNumber">
            last used cashbook payment header number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnIltProcessingCentre">
            Is this ledger an ILT processing centre (ie, clearinghouse status)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastGiftBatchNumber">
            The number of the last gift batch to be created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnIntlCurrency">
            This defines which currency to use as a second ('international') base currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastRecGiftBatchNumber">
            The number of the last gift batch to be created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnGiftDataRetention">
            How many years to retain gift data.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnRecalculateAllPeriods">
            When recalculating the account report structure this indicates that all periods should be recalculated.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnLastIchNumber">
            identifes the Last used ICH process number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnBranchProcessing">
            THis defines whether or not the ledger ha made up of separate branches/departments that are self contained (should balance).
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnConsolidationLedger">
            Indicates whether the ledger is just for storing consolidated accounts (rather than a 'real' ledger).
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLedgerNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLedgerNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLedgerStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLedgerStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastRecurringBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastRecurringBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastGiftNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastGiftNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastApInvNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastApInvNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastHeaderRNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastHeaderRNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastPoNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastPoNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastSoNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastSoNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetMaxGiftAidAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetMaxGiftAidAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetMinGiftAidAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetMinGiftAidAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetNumberOfGiftsToDisplayDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetNumberOfGiftsToDisplayLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetIltGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetIltGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetProfitLossGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetProfitLossGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCurrentAccountingPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCurrentAccountingPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetNumberOfAccountingPeriodsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetNumberOfAccountingPeriodsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCountryCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCountryCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetBaseCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetBaseCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTransactionAccountFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTransactionAccountFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetYearEndFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetYearEndFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetForexGainsLossesAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetForexGainsLossesAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetSystemInterfaceFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetSystemInterfaceFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetSuspenseAccountFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetSuspenseAccountFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetBankAccountsFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetBankAccountsFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDeleteLedgerFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDeleteLedgerFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetNewFinancialYearFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetNewFinancialYearFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetRecalculateGlMasterFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetRecalculateGlMasterFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetInstallationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetInstallationIdLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetBudgetControlFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetBudgetControlFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetBudgetDataRetentionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetBudgetDataRetentionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCostOfSalesGlAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCostOfSalesGlAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCreditorGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCreditorGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCurrentFinancialYearDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCurrentFinancialYearLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCurrentPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCurrentPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDateCrDrBalancesDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDateCrDrBalancesLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDebtorGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDebtorGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetFaDepreciationGlAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetFaDepreciationGlAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetFaGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetFaGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetFaPlOnSaleGlAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetFaPlOnSaleGlAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetFaProvForDepnGlAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetFaProvForDepnGlAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetIltAccountFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetIltAccountFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastApDnNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastApDnNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastPoRetNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastPoRetNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastSoDelNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastSoDelNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastSoRetNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastSoRetNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastSpecialGiftNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastSpecialGiftNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetNumberFwdPostingPeriodsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetNumberFwdPostingPeriodsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetPeriodsPerFinancialYearDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetPeriodsPerFinancialYearLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDiscountAllowedPctDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDiscountAllowedPctLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDiscountReceivedPctDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDiscountReceivedPctLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetPoAccrualGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetPoAccrualGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetProvisionalYearEndFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetProvisionalYearEndFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetPurchaseGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetPurchaseGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetRetEarningsGlAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetRetEarningsGlAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetSalesGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetSalesGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetSoAccrualGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetSoAccrualGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetStockAccrualGlAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetStockAccrualGlAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetStockAdjGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetStockAdjGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetStockGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetStockGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxExclInclDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxExclInclLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxExclInclIndicatorDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxExclInclIndicatorLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxInputGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxInputGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxInputGlCcCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxInputGlCcCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxOutputGlAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxOutputGlAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTermsOfPaymentCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTermsOfPaymentCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastPoRecNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastPoRecNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxGlAccountNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetTaxGlAccountNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetActualsDataRetentionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetActualsDataRetentionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetPartnerKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetPartnerKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCalendarModeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCalendarModeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetYearEndProcessStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetYearEndProcessStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastHeaderPNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastHeaderPNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetIltProcessingCentreDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetIltProcessingCentreLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastGiftBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastGiftBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetIntlCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetIntlCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastRecGiftBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastRecGiftBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetGiftDataRetentionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetGiftDataRetentionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetRecalculateAllPeriodsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetRecalculateAllPeriodsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastIchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetLastIchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetBranchProcessingDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetBranchProcessingLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetConsolidationLedgerDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetConsolidationLedgerLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow">
            Basic information for each general ledger on the system. Also counters for ledger-specific variables (such as last receipt number).
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLedgerNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLedgerNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLedgerStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLedgerStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastRecurringBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastRecurringBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastGiftNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastGiftNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastApInvNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastApInvNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastHeaderRNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastHeaderRNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastPoNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastPoNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastSoNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastSoNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsMaxGiftAidAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetMaxGiftAidAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsMinGiftAidAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetMinGiftAidAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsNumberOfGiftsToDisplayNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetNumberOfGiftsToDisplayNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsTaxTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetTaxTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsIltGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetIltGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsProfitLossGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetProfitLossGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsCurrentAccountingPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetCurrentAccountingPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsNumberOfAccountingPeriodsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetNumberOfAccountingPeriodsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsCountryCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetCountryCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsBaseCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetBaseCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsTransactionAccountFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetTransactionAccountFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsYearEndFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetYearEndFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsForexGainsLossesAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetForexGainsLossesAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsSystemInterfaceFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetSystemInterfaceFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsSuspenseAccountFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetSuspenseAccountFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsBankAccountsFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetBankAccountsFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsDeleteLedgerFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetDeleteLedgerFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsNewFinancialYearFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetNewFinancialYearFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsRecalculateGlMasterFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetRecalculateGlMasterFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsInstallationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetInstallationIdNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsBudgetControlFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetBudgetControlFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsBudgetDataRetentionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetBudgetDataRetentionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsCostOfSalesGlAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetCostOfSalesGlAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsCreditorGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetCreditorGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsCurrentFinancialYearNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetCurrentFinancialYearNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsCurrentPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetCurrentPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsDateCrDrBalancesNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetDateCrDrBalancesNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsDebtorGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetDebtorGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsFaDepreciationGlAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetFaDepreciationGlAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsFaGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetFaGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsFaPlOnSaleGlAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetFaPlOnSaleGlAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsFaProvForDepnGlAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetFaProvForDepnGlAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsIltAccountFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetIltAccountFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastApDnNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastApDnNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastPoRetNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastPoRetNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastSoDelNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastSoDelNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastSoRetNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastSoRetNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastSpecialGiftNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastSpecialGiftNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsNumberFwdPostingPeriodsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetNumberFwdPostingPeriodsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsPeriodsPerFinancialYearNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetPeriodsPerFinancialYearNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsDiscountAllowedPctNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetDiscountAllowedPctNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsDiscountReceivedPctNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetDiscountReceivedPctNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsPoAccrualGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetPoAccrualGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsProvisionalYearEndFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetProvisionalYearEndFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsPurchaseGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetPurchaseGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsRetEarningsGlAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetRetEarningsGlAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsSalesGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetSalesGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsSoAccrualGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetSoAccrualGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsStockAccrualGlAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetStockAccrualGlAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsStockAdjGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetStockAdjGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsStockGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetStockGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsTaxExclInclNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetTaxExclInclNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsTaxExclInclIndicatorNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetTaxExclInclIndicatorNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsTaxInputGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetTaxInputGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsTaxInputGlCcCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetTaxInputGlCcCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsTaxOutputGlAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetTaxOutputGlAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsTermsOfPaymentCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetTermsOfPaymentCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastPoRecNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastPoRecNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsTaxGlAccountNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetTaxGlAccountNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsActualsDataRetentionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetActualsDataRetentionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsPartnerKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetPartnerKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsCalendarModeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetCalendarModeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsYearEndProcessStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetYearEndProcessStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastHeaderPNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastHeaderPNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsIltProcessingCentreNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetIltProcessingCentreNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastGiftBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastGiftBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsIntlCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetIntlCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastRecGiftBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastRecGiftBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsGiftDataRetentionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetGiftDataRetentionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsRecalculateAllPeriodsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetRecalculateAllPeriodsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsLastIchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetLastIchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsBranchProcessingNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetBranchProcessingNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsConsolidationLedgerNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetConsolidationLedgerNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LedgerNumber">
            This is used as a key field in most of the accounting system files .It is created from the first 4 digits of a partner key of type ""ledger"".
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LedgerName">
            This is the ledger name
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LedgerStatus">
            Defines if the ledger is in use
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastBatchNumber">
            This is the last batch number used within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastRecurringBatchNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastGiftNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastApInvNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastHeaderRNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastPoNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastSoNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.MaxGiftAidAmount">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.MinGiftAidAmount">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.NumberOfGiftsToDisplay">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.TaxTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IltGlAccountCode">
            The account for inter-ledger transfers.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.ProfitLossGlAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.CurrentAccountingPeriod">
            deprecated; not used at the moment; please use a_current_period_i
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.NumberOfAccountingPeriods">
            This defines which accounting period is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.CountryCode">
            This identifies a country. It uses the ISO 3166-1-alpha-2 code elements.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.BaseCurrency">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.TransactionAccountFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.YearEndFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.ForexGainsLossesAccount">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SystemInterfaceFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SuspenseAccountFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.BankAccountsFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.DeleteLedgerFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.NewFinancialYearFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.RecalculateGlMasterFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.InstallationId">
            Defines which installation is running on this database
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.BudgetControlFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.BudgetDataRetention">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.CostOfSalesGlAccount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.CreditorGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.CurrentFinancialYear">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.CurrentPeriod">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.DateCrDrBalances">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.DebtorGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.FaDepreciationGlAccount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.FaGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.FaPlOnSaleGlAccount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.FaProvForDepnGlAccount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IltAccountFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastApDnNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastPoRetNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastSoDelNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastSoRetNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastSpecialGiftNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.NumberFwdPostingPeriods">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.PeriodsPerFinancialYear">
            deprecated; not used at the moment; please use a_number_of_accounting_periods_i
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.DiscountAllowedPct">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.DiscountReceivedPct">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.PoAccrualGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.ProvisionalYearEndFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.PurchaseGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.RetEarningsGlAccount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SalesGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.SoAccrualGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.StockAccrualGlAccount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.StockAdjGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.StockGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.TaxExclIncl">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.TaxExclInclIndicator">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.TaxInputGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.TaxInputGlCcCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.TaxOutputGlAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.TermsOfPaymentCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastPoRecNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.TaxGlAccountNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.ActualsDataRetention">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.PartnerKey">
            Partner key which links the ledger to the partner type record where the type is a ledger.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.CalendarMode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.YearEndProcessStatus">
            How far along is the year end process.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastHeaderPNumber">
            last used cashbook payment header number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IltProcessingCentre">
            Is this ledger an ILT processing centre (ie, clearinghouse status)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastGiftBatchNumber">
            The number of the last gift batch to be created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.IntlCurrency">
            This defines which currency to use as a second ('international') base currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastRecGiftBatchNumber">
            The number of the last gift batch to be created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.GiftDataRetention">
            How many years to retain gift data.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.RecalculateAllPeriods">
            When recalculating the account report structure this indicates that all periods should be recalculated.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.LastIchNumber">
            identifes the Last used ICH process number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.BranchProcessing">
            THis defines whether or not the ledger ha made up of separate branches/departments that are self contained (should balance).
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.ConsolidationLedger">
            Indicates whether the ledger is just for storing consolidated accounts (rather than a 'real' ledger).
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable">
            Ledger Init Flags
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnInitOptionNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnLedgerNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnInitOptionName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetInitOptionNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetInitOptionNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow">
            Ledger Init Flags
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.IsInitOptionNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.SetInitOptionNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.LedgerNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.InitOptionName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ALedgerInitFlagRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable">
            Used for initial set up of budgets, for how to calculate amounts for each period.  Some possible types are adhoc,same,percentage of annual.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnBudgetTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnBudgetTypeDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnBudgetProcessToCallId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnBudgetTypeCode">
            The type. Adhoc, Split, Same, Inflate.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnBudgetTypeDescription">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnBudgetProcessToCall">
            The Petra programme filename of the process to call
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetBudgetTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetBudgetTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetBudgetTypeDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetBudgetTypeDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetBudgetProcessToCallDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetBudgetProcessToCallLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow">
            Used for initial set up of budgets, for how to calculate amounts for each period.  Some possible types are adhoc,same,percentage of annual.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.IsBudgetTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.SetBudgetTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.IsBudgetTypeDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.SetBudgetTypeDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.IsBudgetProcessToCallNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.SetBudgetProcessToCallNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.BudgetTypeCode">
            The type. Adhoc, Split, Same, Inflate.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.BudgetTypeDescription">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.BudgetProcessToCall">
            The Petra programme filename of the process to call
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTypeRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable">
            Details about each account code within a ledger. Also holds information on the summary account structure for reporting.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAccountTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAccountCodeLongDescId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAccountCodeShortDescId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnEngAccountCodeShortDescId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnEngAccountCodeLongDescId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnDebitCreditIndicatorId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAccountActiveFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAnalysisAttributeFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnStandardAccountFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnConsolidationAccountFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnIntercompanyAccountFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnBudgetTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnPostingStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnSystemAccountFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnBudgetControlFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnValidCcComboId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnForeignCurrencyFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnForeignCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnBankingDetailsKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAccountType">
            Income, Expense, Asset, Liability, Equity.  Suspense accounts are in a_suspense_account.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAccountCodeLongDesc">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAccountCodeShortDesc">
            This is a short description which is 32 charcters long
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnEngAccountCodeShortDesc">
            This is a short description which is 32 charcters long
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnEngAccountCodeLongDesc">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnDebitCreditIndicator">
            Defines if the the transcation is a debit or credit transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAccountActiveFlag">
            Defines whether the acount is active or not
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnAnalysisAttributeFlag">
            Yes if the account has any analysis attributes.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnStandardAccountFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnConsolidationAccountFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnIntercompanyAccountFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnBudgetTypeCode">
            The type of budget.  See the a_budget_type table.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnPostingStatus">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnSystemAccountFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnBudgetControlFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnValidCcCombo">
            Which type of cost centres may be combined with this account.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnForeignCurrencyFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnForeignCurrencyCode">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnBankingDetailsKey">
            Link to banking details to use for this account - only really used if this account is a bank account
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAccountTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAccountTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAccountCodeLongDescDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAccountCodeLongDescLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAccountCodeShortDescDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAccountCodeShortDescLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetEngAccountCodeShortDescDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetEngAccountCodeShortDescLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetEngAccountCodeLongDescDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetEngAccountCodeLongDescLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetDebitCreditIndicatorDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetDebitCreditIndicatorLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAccountActiveFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAccountActiveFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAnalysisAttributeFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetAnalysisAttributeFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetStandardAccountFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetStandardAccountFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetConsolidationAccountFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetConsolidationAccountFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetIntercompanyAccountFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetIntercompanyAccountFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetBudgetTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetBudgetTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetPostingStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetPostingStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetSystemAccountFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetSystemAccountFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetBudgetControlFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetBudgetControlFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetValidCcComboDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetValidCcComboLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetForeignCurrencyFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetForeignCurrencyFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetForeignCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetForeignCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetBankingDetailsKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetBankingDetailsKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow">
            Details about each account code within a ledger. Also holds information on the summary account structure for reporting.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsAccountTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetAccountTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsAccountCodeLongDescNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetAccountCodeLongDescNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsAccountCodeShortDescNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetAccountCodeShortDescNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsEngAccountCodeShortDescNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetEngAccountCodeShortDescNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsEngAccountCodeLongDescNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetEngAccountCodeLongDescNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsDebitCreditIndicatorNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetDebitCreditIndicatorNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsAccountActiveFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetAccountActiveFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsAnalysisAttributeFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetAnalysisAttributeFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsStandardAccountFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetStandardAccountFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsConsolidationAccountFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetConsolidationAccountFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsIntercompanyAccountFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetIntercompanyAccountFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsBudgetTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetBudgetTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsPostingStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetPostingStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsSystemAccountFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetSystemAccountFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsBudgetControlFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetBudgetControlFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsValidCcComboNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetValidCcComboNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsForeignCurrencyFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetForeignCurrencyFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsForeignCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetForeignCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsBankingDetailsKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetBankingDetailsKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.AccountType">
            Income, Expense, Asset, Liability, Equity.  Suspense accounts are in a_suspense_account.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.AccountCodeLongDesc">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.AccountCodeShortDesc">
            This is a short description which is 32 charcters long
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.EngAccountCodeShortDesc">
            This is a short description which is 32 charcters long
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.EngAccountCodeLongDesc">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.DebitCreditIndicator">
            Defines if the the transcation is a debit or credit transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.AccountActiveFlag">
            Defines whether the acount is active or not
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.AnalysisAttributeFlag">
            Yes if the account has any analysis attributes.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.StandardAccountFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.ConsolidationAccountFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.IntercompanyAccountFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.BudgetTypeCode">
            The type of budget.  See the a_budget_type table.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.PostingStatus">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.SystemAccountFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.BudgetControlFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.ValidCcCombo">
            Which type of cost centres may be combined with this account.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.ForeignCurrencyFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.ForeignCurrencyCode">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.BankingDetailsKey">
            Link to banking details to use for this account - only really used if this account is a bank account
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable">
            Extra properties that might want to be saved with an account can be defined in this table.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnPropertyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnPropertyCode">
            Code for the property
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnDescription">
            Description of this property
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetPropertyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetPropertyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow">
            Extra properties that might want to be saved with an account can be defined in this table.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.IsPropertyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.SetPropertyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.IsDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.SetDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.PropertyCode">
            Code for the property
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.Description">
            Description of this property
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyCodeRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable">
            Properties and optional values for an account can be saved in this table.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnPropertyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnPropertyValueId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnLedgerNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnPropertyCode">
            Code for the property
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnPropertyValue">
            value of this property
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetPropertyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetPropertyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetPropertyValueDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetPropertyValueLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow">
            Properties and optional values for an account can be saved in this table.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.IsPropertyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.SetPropertyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.IsPropertyValueNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.SetPropertyValueNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.LedgerNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.PropertyCode">
            Code for the property
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.PropertyValue">
            value of this property
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountPropertyRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable">
            hierarchy of accounts; what is the root account of the hierarchy
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnAccountHierarchyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnRootAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnLedgerNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnAccountHierarchyCode">
            The code for the hierarchy
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnRootAccountCode">
            The root account of the hierarchy, which is at the top of the hierarchy
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetAccountHierarchyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetAccountHierarchyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetRootAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetRootAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow">
            hierarchy of accounts; what is the root account of the hierarchy
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.IsAccountHierarchyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.SetAccountHierarchyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.IsRootAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.SetRootAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.LedgerNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.AccountHierarchyCode">
            The code for the hierarchy
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.RootAccountCode">
            The root account of the hierarchy, which is at the top of the hierarchy
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable">
            the elements of the hierarchy of accounts; which account is reporting to which other account
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnAccountHierarchyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnReportingAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnAccountCodeToReportToId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnReportOrderId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnLedgerNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnAccountHierarchyCode">
            The code for the hierarchy
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnReportingAccountCode">
            The reporting account
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnAccountCodeToReportTo">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnReportOrder">
            Order to display the account or heading on the Balance Sheet &amp; Income Statement report.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetAccountHierarchyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetAccountHierarchyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetReportingAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetReportingAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetAccountCodeToReportToDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetAccountCodeToReportToLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetReportOrderDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetReportOrderLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow">
            the elements of the hierarchy of accounts; which account is reporting to which other account
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.IsAccountHierarchyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.SetAccountHierarchyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.IsReportingAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.SetReportingAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.IsAccountCodeToReportToNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.SetAccountCodeToReportToNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.IsReportOrderNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.SetReportOrderNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.LedgerNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.AccountHierarchyCode">
            The code for the hierarchy
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.ReportingAccountCode">
            The reporting account
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.AccountCodeToReportTo">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.ReportOrder">
            Order to display the account or heading on the Balance Sheet &amp; Income Statement report.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountHierarchyDetailRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable">
            Stores standard and user-defined cost centre types.  For example: Foreign, Local.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnCostCentreTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnCcDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnDeletableId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnCostCentreType">
            Type of cost centre (Defaults: Foreign or Local)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnCcDescription">
            The description of the cost centre type
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnDeletable">
            Can this cost centre type be deleted by the user?
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetCostCentreTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetCostCentreTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetCcDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetCcDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetDeletableDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetDeletableLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow">
            Stores standard and user-defined cost centre types.  For example: Foreign, Local.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.IsCostCentreTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.SetCostCentreTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.IsCcDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.SetCcDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.IsDeletableNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.SetDeletableNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.CostCentreType">
            Type of cost centre (Defaults: Foreign or Local)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.CcDescription">
            The description of the cost centre type
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.Deletable">
            Can this cost centre type be deleted by the user?
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTypesRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable">
            Master cost centre records which contain details of each cost centre and their relationship to each other; determines the cost centre structure.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCostCentreToReportToId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCostCentreNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnPostingCostCentreFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCostCentreActiveFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnProjectStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnProjectConstraintDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnProjectConstraintAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnSystemCostCentreFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCostCentreTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnKeyFocusAreaId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnLedgerNumber">
            The ledger in which the cost centre is used.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner but reflected as a character rather than a numeric
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCostCentreToReportTo">
            This identifies which cost centre the cost centre summarises to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCostCentreName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnPostingCostCentreFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCostCentreActiveFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnProjectStatus">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnProjectConstraintDate">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnProjectConstraintAmount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnSystemCostCentreFlag">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCostCentreType">
            Type of cost centre (Foreign or Local)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnKeyFocusArea">
            Key Focus Area that this cost centre relates to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCostCentreToReportToDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCostCentreToReportToLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCostCentreNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCostCentreNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetPostingCostCentreFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetPostingCostCentreFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCostCentreActiveFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCostCentreActiveFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetProjectStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetProjectStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetProjectConstraintDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetProjectConstraintDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetProjectConstraintAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetProjectConstraintAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetSystemCostCentreFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetSystemCostCentreFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCostCentreTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCostCentreTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetKeyFocusAreaDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetKeyFocusAreaLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow">
            Master cost centre records which contain details of each cost centre and their relationship to each other; determines the cost centre structure.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsCostCentreToReportToNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetCostCentreToReportToNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsCostCentreNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetCostCentreNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsPostingCostCentreFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetPostingCostCentreFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsCostCentreActiveFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetCostCentreActiveFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsProjectStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetProjectStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsProjectConstraintDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetProjectConstraintDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsProjectConstraintAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetProjectConstraintAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsSystemCostCentreFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetSystemCostCentreFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsCostCentreTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetCostCentreTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsKeyFocusAreaNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetKeyFocusAreaNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.LedgerNumber">
            The ledger in which the cost centre is used.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.CostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner but reflected as a character rather than a numeric
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.CostCentreToReportTo">
            This identifies which cost centre the cost centre summarises to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.CostCentreName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.PostingCostCentreFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.CostCentreActiveFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.ProjectStatus">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.ProjectConstraintDate">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.ProjectConstraintAmount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.SystemCostCentreFlag">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.CostCentreType">
            Type of cost centre (Foreign or Local)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.KeyFocusArea">
            Key Focus Area that this cost centre relates to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACostCentreRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable">
            List of foreign ledgers (eg, other fields) which the local ledger may send transctions to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnPartnerKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnIltProcessingCentreId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnPartnerKey">
            This is the partner key assigned to each partner. It consists of the fund id followed by a computer generated six digit number.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files .It is created from the first 4 digits of a partner key of type ""ledger"".
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnIltProcessingCentre">
            The ledger through which inter ledger transactions are routed for processing.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner but reflected as a character rather than a numeric
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetPartnerKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetPartnerKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetIltProcessingCentreDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetIltProcessingCentreLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow">
            List of foreign ledgers (eg, other fields) which the local ledger may send transctions to.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.IsPartnerKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.SetPartnerKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.IsIltProcessingCentreNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.SetIltProcessingCentreNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.PartnerKey">
            This is the partner key assigned to each partner. It consists of the fund id followed by a computer generated six digit number.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.LedgerNumber">
            This is used as a key field in most of the accounting system files .It is created from the first 4 digits of a partner key of type ""ledger"".
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.IltProcessingCentre">
            The ledger through which inter ledger transactions are routed for processing.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.CostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner but reflected as a character rather than a numeric
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AValidLedgerNumberRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable">
            This defines a certain revision of a budget in a ledger in a year.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnYearId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnRevisionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnYear">
            The year that this budget applies to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnRevision">
            A budget can have several revisions per year
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnDescription">
            A description of this revision of the budget
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetYearDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetYearLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetRevisionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetRevisionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow">
            This defines a certain revision of a budget in a ledger in a year.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.IsYearNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.SetYearNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.IsRevisionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.SetRevisionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.IsDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.SetDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.Year">
            The year that this budget applies to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.Revision">
            A budget can have several revisions per year
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.Description">
            A description of this revision of the budget
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRevisionRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable">
            Budget information for cost centre-account combinations.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnBudgetSequenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnYearId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnRevisionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnBudgetTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnBudgetStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnCommentId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnBudgetSequence">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnYear">
            The year that this budget applies to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnRevision">
            A budget can have several revisions per year
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnBudgetTypeCode">
            See a_budget_type table.  Indicates the method used for creating the budget.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnBudgetStatus">
            Has the budget been ""posted"" to the general ledger master
            and account files.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnComment">
            A comment for this specific budget item and revision
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetBudgetSequenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetBudgetSequenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetYearDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetYearLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetRevisionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetRevisionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetBudgetTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetBudgetTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetBudgetStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetBudgetStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetCommentDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetCommentLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow">
            Budget information for cost centre-account combinations.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsBudgetSequenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetBudgetSequenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsYearNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetYearNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsRevisionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetRevisionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsBudgetTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetBudgetTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsBudgetStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetBudgetStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsCommentNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetCommentNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.BudgetSequence">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.Year">
            The year that this budget applies to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.Revision">
            A budget can have several revisions per year
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.CostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.BudgetTypeCode">
            See a_budget_type table.  Indicates the method used for creating the budget.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.BudgetStatus">
            Has the budget been ""posted"" to the general ledger master
            and account files.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.Comment">
            A comment for this specific budget item and revision
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable">
            This is the budget data for one period (e.g. a month)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnBudgetSequenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnPeriodNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnBudgetBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnBudgetLastYearId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnBudgetThisYearId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnBudgetNextYearId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnBudgetSequence">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnPeriodNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnBudgetBase">
            Budget amount in base currency
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnBudgetLastYear">
            Will cease to be used once a_budget_base_n is used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnBudgetThisYear">
            Will cease to be used once a_budget_base_n is used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnBudgetNextYear">
            Will cease to be used once a_budget_base_n is used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetBudgetSequenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetBudgetSequenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetPeriodNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetPeriodNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetBudgetBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetBudgetBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetBudgetLastYearDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetBudgetLastYearLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetBudgetThisYearDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetBudgetThisYearLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetBudgetNextYearDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetBudgetNextYearLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow">
            This is the budget data for one period (e.g. a month)
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsBudgetSequenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetBudgetSequenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsPeriodNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetPeriodNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsBudgetBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetBudgetBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsBudgetLastYearNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetBudgetLastYearNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsBudgetThisYearNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetBudgetThisYearNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsBudgetNextYearNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetBudgetNextYearNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.BudgetSequence">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.PeriodNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.BudgetBase">
            Budget amount in base currency
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.BudgetLastYear">
            Will cease to be used once a_budget_base_n is used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.BudgetThisYear">
            Will cease to be used once a_budget_base_n is used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.BudgetNextYear">
            Will cease to be used once a_budget_base_n is used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABudgetPeriodRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable">
            Information about each financial period in a ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnAccountingPeriodNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnAccountingPeriodDescId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnPeriodStartDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnPeriodEndDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnEffectiveDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnLedgerNumber">
            The ledger that the period applies to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnAccountingPeriodNumber">
            The accounting period number.  Must be &lt;= 20
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnAccountingPeriodDesc">
            This is a short description which is 32 charcters long
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnPeriodStartDate">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnPeriodEndDate">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnEffectiveDate">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetAccountingPeriodNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetAccountingPeriodNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetAccountingPeriodDescDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetAccountingPeriodDescLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetPeriodStartDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetPeriodStartDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetPeriodEndDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetPeriodEndDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetEffectiveDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetEffectiveDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow">
            Information about each financial period in a ledger.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsAccountingPeriodNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetAccountingPeriodNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsAccountingPeriodDescNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetAccountingPeriodDescNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsPeriodStartDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetPeriodStartDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsPeriodEndDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetPeriodEndDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsEffectiveDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetEffectiveDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.LedgerNumber">
            The ledger that the period applies to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.AccountingPeriodNumber">
            The accounting period number.  Must be &lt;= 20
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.AccountingPeriodDesc">
            This is a short description which is 32 charcters long
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.PeriodStartDate">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.PeriodEndDate">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.EffectiveDate">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingPeriodRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable">
            One record describing the limitations imposed on the accounting system.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnNumberOfAccountingPeriodsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnActualsDataRetentionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnBudgetDataRetentionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnNumberFwdPostingPeriodsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnRecipientGiftStatementTxtId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnRecipientGiftStatementTx2Id">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDonorGiftStatementTxtId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDonorGiftStatementTx2Id">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnHosaStatementTxtId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnHosaStatementTx2Id">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnHosaStatementTx3Id">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnHosaStatementTx4Id">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDonorReceiptTxtId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnStewardshipReportTxtId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnStewardshipReportTx2Id">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDonorYearlyReceiptTxtId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnGiftDataRetentionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDeceasedAddressTextId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnNumberOfAccountingPeriods">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnActualsDataRetention">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnBudgetDataRetention">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnNumberFwdPostingPeriods">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnLedgerNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnRecipientGiftStatementTxt">
            Recipient gift statement text
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnRecipientGiftStatementTx2">
            Recipient gift statement text 2
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDonorGiftStatementTxt">
            Donor gift statement text
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDonorGiftStatementTx2">
            Donor gift statement text 2
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnHosaStatementTxt">
            Hosa statement text
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnHosaStatementTx2">
            Hosa (Home Office Statement of Accounts) statement text 2
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnHosaStatementTx3">
            Hosa statement text 3
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnHosaStatementTx4">
            Hosa statement text 4
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDonorReceiptTxt">
            Text for the donor receipt heading.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnStewardshipReportTxt">
            Stewardship Report  text
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnStewardshipReportTx2">
            Stewardship Report  text
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDonorYearlyReceiptTxt">
            Text for the yearly donor receipt heading.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnGiftDataRetention">
            How many years to retain gift data.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDeceasedAddressText">
            Text to put on receipt when addressing a deceased donor
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetNumberOfAccountingPeriodsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetNumberOfAccountingPeriodsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetActualsDataRetentionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetActualsDataRetentionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetBudgetDataRetentionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetBudgetDataRetentionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetNumberFwdPostingPeriodsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetNumberFwdPostingPeriodsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetRecipientGiftStatementTxtDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetRecipientGiftStatementTxtLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetRecipientGiftStatementTx2DBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetRecipientGiftStatementTx2Length">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDonorGiftStatementTxtDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDonorGiftStatementTxtLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDonorGiftStatementTx2DBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDonorGiftStatementTx2Length">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetHosaStatementTxtDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetHosaStatementTxtLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetHosaStatementTx2DBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetHosaStatementTx2Length">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetHosaStatementTx3DBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetHosaStatementTx3Length">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetHosaStatementTx4DBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetHosaStatementTx4Length">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDonorReceiptTxtDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDonorReceiptTxtLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetStewardshipReportTxtDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetStewardshipReportTxtLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetStewardshipReportTx2DBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetStewardshipReportTx2Length">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDonorYearlyReceiptTxtDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDonorYearlyReceiptTxtLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetGiftDataRetentionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetGiftDataRetentionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDeceasedAddressTextDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDeceasedAddressTextLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow">
            One record describing the limitations imposed on the accounting system.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsNumberOfAccountingPeriodsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetNumberOfAccountingPeriodsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsActualsDataRetentionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetActualsDataRetentionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsBudgetDataRetentionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetBudgetDataRetentionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsNumberFwdPostingPeriodsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetNumberFwdPostingPeriodsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsRecipientGiftStatementTxtNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetRecipientGiftStatementTxtNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsRecipientGiftStatementTx2Null">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetRecipientGiftStatementTx2Null">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsDonorGiftStatementTxtNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetDonorGiftStatementTxtNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsDonorGiftStatementTx2Null">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetDonorGiftStatementTx2Null">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsHosaStatementTxtNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetHosaStatementTxtNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsHosaStatementTx2Null">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetHosaStatementTx2Null">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsHosaStatementTx3Null">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetHosaStatementTx3Null">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsHosaStatementTx4Null">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetHosaStatementTx4Null">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsDonorReceiptTxtNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetDonorReceiptTxtNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsStewardshipReportTxtNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetStewardshipReportTxtNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsStewardshipReportTx2Null">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetStewardshipReportTx2Null">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsDonorYearlyReceiptTxtNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetDonorYearlyReceiptTxtNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsGiftDataRetentionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetGiftDataRetentionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsDeceasedAddressTextNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetDeceasedAddressTextNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.NumberOfAccountingPeriods">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.ActualsDataRetention">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.BudgetDataRetention">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.NumberFwdPostingPeriods">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.LedgerNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.RecipientGiftStatementTxt">
            Recipient gift statement text
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.RecipientGiftStatementTx2">
            Recipient gift statement text 2
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.DonorGiftStatementTxt">
            Donor gift statement text
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.DonorGiftStatementTx2">
            Donor gift statement text 2
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.HosaStatementTxt">
            Hosa statement text
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.HosaStatementTx2">
            Hosa (Home Office Statement of Accounts) statement text 2
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.HosaStatementTx3">
            Hosa statement text 3
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.HosaStatementTx4">
            Hosa statement text 4
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.DonorReceiptTxt">
            Text for the donor receipt heading.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.StewardshipReportTxt">
            Stewardship Report  text
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.StewardshipReportTx2">
            Stewardship Report  text
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.DonorYearlyReceiptTxt">
            Text for the yearly donor receipt heading.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.GiftDataRetention">
            How many years to retain gift data.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.DeceasedAddressText">
            Text to put on receipt when addressing a deceased donor
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAccountingSystemParameterRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable">
            List of tables in the financial system, meant to be used with analysis attributes. Not available.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnStoreNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnStoreName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetStoreNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetStoreNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow">
            List of tables in the financial system, meant to be used with analysis attributes. Not available.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.IsStoreNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.SetStoreNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.StoreName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisStoreTableRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable">
            Types of analysis attributes.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnAnalysisTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnAnalysisTypeDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnAnalysisModeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnAnalysisStoreId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnAnalysisElementId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnSystemAnalysisTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnAnalysisTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnAnalysisTypeDescription">
            This is a short description which is 32 charcters long
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnAnalysisMode">
            Shows what type of analysis attribute it is
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnAnalysisStore">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnAnalysisElement">
            The name of the field within a table which will be used as the analysis attribute
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnSystemAnalysisType">
            To indicate whether the user or system has set up the analysis type.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetAnalysisTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetAnalysisTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetAnalysisTypeDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetAnalysisTypeDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetAnalysisModeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetAnalysisModeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetAnalysisStoreDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetAnalysisStoreLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetAnalysisElementDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetAnalysisElementLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetSystemAnalysisTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetSystemAnalysisTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow">
            Types of analysis attributes.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsAnalysisTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetAnalysisTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsAnalysisTypeDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetAnalysisTypeDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsAnalysisModeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetAnalysisModeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsAnalysisStoreNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetAnalysisStoreNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsAnalysisElementNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetAnalysisElementNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsSystemAnalysisTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetSystemAnalysisTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.AnalysisTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.AnalysisTypeDescription">
            This is a short description which is 32 charcters long
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.AnalysisMode">
            Shows what type of analysis attribute it is
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.AnalysisStore">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.AnalysisElement">
            The name of the field within a table which will be used as the analysis attribute
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.SystemAnalysisType">
            To indicate whether the user or system has set up the analysis type.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisTypeRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable">
            Indicates which accounts use analysis attributes and what attribute types may be used with the account.   Analysis attributes are user-definable extra information to be stored against an account.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnAnalysisTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnActiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnLedgerNumber">
            The number of the ledger in which the analysis attribute is used.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnAnalysisTypeCode">
            A code indicating the type of analysis.  Valid analysis types are stored in the a_analysis_type table.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnAccountCode">
            This identifies the account the financial transaction analysis information must be stored against.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnCostCentreCode">
            Cost Centre to which the attribute relates
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnActive">
            Analysis attributes cannot be deleted, because they are needed for existing transaction analysis attributes. But they can be deactivated.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetAnalysisTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetAnalysisTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetActiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetActiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow">
            Indicates which accounts use analysis attributes and what attribute types may be used with the account.   Analysis attributes are user-definable extra information to be stored against an account.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.IsAnalysisTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.SetAnalysisTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.IsActiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.SetActiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.LedgerNumber">
            The number of the ledger in which the analysis attribute is used.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.AnalysisTypeCode">
            A code indicating the type of analysis.  Valid analysis types are stored in the a_analysis_type table.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.AccountCode">
            This identifies the account the financial transaction analysis information must be stored against.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.CostCentreCode">
            Cost Centre to which the attribute relates
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.Active">
            Analysis attributes cannot be deleted, because they are needed for existing transaction analysis attributes. But they can be deactivated.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AAnalysisAttributeRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable">
            Hold (monthly) corporate rates.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnFromCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnToCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnRateOfExchangeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnDateEffectiveFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnTimeEffectiveFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnFromCurrencyCode">
            Defines the currency being exchanged
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnToCurrencyCode">
            Defines which currency is being changed to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnRateOfExchange">
            The rate of exchange
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnDateEffectiveFrom">
            Date the exchange rate becomes effective
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnTimeEffectiveFrom">
            System generated time stamp.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetFromCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetFromCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetToCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetToCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetRateOfExchangeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetRateOfExchangeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetDateEffectiveFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetDateEffectiveFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetTimeEffectiveFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetTimeEffectiveFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow">
            Hold (monthly) corporate rates.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.IsFromCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.SetFromCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.IsToCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.SetToCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.IsRateOfExchangeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.SetRateOfExchangeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.IsDateEffectiveFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.SetDateEffectiveFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.IsTimeEffectiveFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.SetTimeEffectiveFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.FromCurrencyCode">
            Defines the currency being exchanged
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.ToCurrencyCode">
            Defines which currency is being changed to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.RateOfExchange">
            The rate of exchange
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.DateEffectiveFrom">
            Date the exchange rate becomes effective
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.TimeEffectiveFrom">
            System generated time stamp.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACorporateExchangeRateRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable">
            Ad hoc exchange rates.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnFromCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnToCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnRateOfExchangeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnDateEffectiveFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnTimeEffectiveFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnFromCurrencyCode">
            Defines the currency being exchanged
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnToCurrencyCode">
            Defines which currency is being changed to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnRateOfExchange">
            The rate of exchange
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnDateEffectiveFrom">
            Date the exchange rate becomes effective
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnTimeEffectiveFrom">
            The date and time
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetFromCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetFromCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetToCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetToCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetRateOfExchangeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetRateOfExchangeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetDateEffectiveFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetDateEffectiveFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetTimeEffectiveFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetTimeEffectiveFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow">
            Ad hoc exchange rates.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.IsFromCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.SetFromCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.IsToCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.SetToCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.IsRateOfExchangeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.SetRateOfExchangeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.IsDateEffectiveFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.SetDateEffectiveFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.IsTimeEffectiveFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.SetTimeEffectiveFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.FromCurrencyCode">
            Defines the currency being exchanged
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.ToCurrencyCode">
            Defines which currency is being changed to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.RateOfExchange">
            The rate of exchange
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.DateEffectiveFrom">
            Date the exchange rate becomes effective
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.TimeEffectiveFrom">
            The date and time
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ADailyExchangeRateRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable">
            email addresses of our organisation
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnEmailAddressId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnValidId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnDeletableId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnEmailAddress">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnDescription">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnValid">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnDeletable">
            This defines if the email code can be deleted.
            This can only be updated by the system manager.
            At the risk of serious operational integrity.
            Default to Yes
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetEmailAddressDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetEmailAddressLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetValidDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetValidLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetDeletableDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetDeletableLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.PEmailTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow">
            email addresses of our organisation
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.IsEmailAddressNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.SetEmailAddressNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.IsDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.SetDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.IsValidNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.SetValidNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.IsDeletableNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.SetDeletableNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.EmailAddress">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.Description">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.Valid">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.Deletable">
            This defines if the email code can be deleted.
            This can only be updated by the system manager.
            At the risk of serious operational integrity.
            Default to Yes
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.PEmailRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable">
            Where Petra supports it a cross reference between a file and destination can be established for automatic distribution.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnFileCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnConditionalValueId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnPartnerKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnEmailAddressId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnFileCode">
            A code to describe the file which is to be distributed via email.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnConditionalValue">
            If this value matches that in the email program then use the partner kay associated with this value.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnPartnerKey">
            This is the partner key assigned to each partner. It consists of the fund id followed by a computer generated six digit number.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnEmailAddress">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetFileCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetFileCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetConditionalValueDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetConditionalValueLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetPartnerKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetPartnerKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetEmailAddressDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetEmailAddressLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow">
            Where Petra supports it a cross reference between a file and destination can be established for automatic distribution.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.IsFileCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.SetFileCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.IsConditionalValueNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.SetConditionalValueNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.IsPartnerKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.SetPartnerKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.IsEmailAddressNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.SetEmailAddressNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.FileCode">
            A code to describe the file which is to be distributed via email.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.ConditionalValue">
            If this value matches that in the email program then use the partner kay associated with this value.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.PartnerKey">
            This is the partner key assigned to each partner. It consists of the fund id followed by a computer generated six digit number.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.EmailAddress">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AEmailDestinationRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable">
            Fees owed to another ledger. (e.g. admin grant)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnFeeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnChargeOptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnChargePercentageId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnChargeAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnFeeDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnDrAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnFeeCode">
            Identifies a specific fee.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnChargeOption">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnChargePercentage">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnChargeAmount">
            This is a the max or min amount charged dependent on the charge option.  The value is the number of currency units.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner but reflected as a character rather than a numeric
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnFeeDescription">
            explain what this fee is for.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnDrAccountCode">
            This identifies the account for the DR side of the financial transaction.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetFeeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetFeeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetChargeOptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetChargeOptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetChargePercentageDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetChargePercentageLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetChargeAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetChargeAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetFeeDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetFeeDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetDrAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetDrAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow">
            Fees owed to another ledger. (e.g. admin grant)
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsFeeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetFeeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsChargeOptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetChargeOptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsChargePercentageNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetChargePercentageNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsChargeAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetChargeAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsFeeDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetFeeDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsDrAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetDrAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.FeeCode">
            Identifies a specific fee.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.ChargeOption">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.ChargePercentage">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.ChargeAmount">
            This is a the max or min amount charged dependent on the charge option.  The value is the number of currency units.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.CostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner but reflected as a character rather than a numeric
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.FeeDescription">
            explain what this fee is for.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.DrAccountCode">
            This identifies the account for the DR side of the financial transaction.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesPayableRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable">
            Charges to collect from other ledgers. (e.g. office admin fee)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnFeeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnChargeOptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnChargePercentageId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnChargeAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnFeeDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnDrAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnFeeCode">
            Identifies a specific fee.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnChargeOption">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnChargePercentage">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnChargeAmount">
            This is a the max or min amount charged dependent on the charge option in number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner but reflected as a character rather than a numeric
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnFeeDescription">
            Description of what this admin charge is for.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnDrAccountCode">
            This identifies the account for the DR side of the financial transaction.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetFeeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetFeeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetChargeOptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetChargeOptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetChargePercentageDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetChargePercentageLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetChargeAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetChargeAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetFeeDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetFeeDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetDrAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetDrAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow">
            Charges to collect from other ledgers. (e.g. office admin fee)
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsFeeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetFeeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsChargeOptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetChargeOptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsChargePercentageNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetChargePercentageNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsChargeAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetChargeAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsFeeDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetFeeDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsDrAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetDrAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.FeeCode">
            Identifies a specific fee.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.ChargeOption">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.ChargePercentage">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.ChargeAmount">
            This is a the max or min amount charged dependent on the charge option in number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.CostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner but reflected as a character rather than a numeric
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.FeeDescription">
            Description of what this admin charge is for.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.DrAccountCode">
            This identifies the account for the DR side of the financial transaction.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFeesReceivableRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFormTable">
            The form description for user definable forms such as receipts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnFormCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnFormNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnFormDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnFormTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnNumberOfDetailsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnPrintInBoldId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnLinesOnPageId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnMinimumAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnOptionsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnFormCode">
            The code which defines the type of form described in the table
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnFormName">
            The name of the form being created for the form code.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnFormDescription">
            Description of the form
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnFormTypeCode">
            If there are several types of form then it can be specified here.  Eg an annual receipt and an individual receipt.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnNumberOfDetails">
            The number of repeating lines that will be displayed on each page of a form.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnPrintInBold">
            Is the report to be formatted to print in bold or not.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnLinesOnPage">
            The total number of lines that can be displayed on the page
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnMinimumAmount">
            The minimum amount that is acceptable on a receipt
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnOptions">
            Allows the exclusion of certain records from a report
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetFormCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetFormCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetFormNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetFormNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetFormDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetFormDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetFormTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetFormTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetNumberOfDetailsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetNumberOfDetailsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetPrintInBoldDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetPrintInBoldLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetLinesOnPageDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetLinesOnPageLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetMinimumAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetMinimumAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetOptionsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetOptionsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFormRow">
            The form description for user definable forms such as receipts
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsFormCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetFormCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsFormNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetFormNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsFormDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetFormDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsFormTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetFormTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsNumberOfDetailsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetNumberOfDetailsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsPrintInBoldNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetPrintInBoldNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsLinesOnPageNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetLinesOnPageNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsMinimumAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetMinimumAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsOptionsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetOptionsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.FormCode">
            The code which defines the type of form described in the table
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.FormName">
            The name of the form being created for the form code.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.FormDescription">
            Description of the form
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.FormTypeCode">
            If there are several types of form then it can be specified here.  Eg an annual receipt and an individual receipt.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.NumberOfDetails">
            The number of repeating lines that will be displayed on each page of a form.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.PrintInBold">
            Is the report to be formatted to print in bold or not.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.LinesOnPage">
            The total number of lines that can be displayed on the page
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.MinimumAmount">
            The minimum amount that is acceptable on a receipt
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.Options">
            Allows the exclusion of certain records from a report
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable">
            The element types that are available for placing in forms.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnFormCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnFormElementTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnFormElementTypeDescId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnDefaultLengthId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnFormCode">
            The code which defines the type of form described in the table
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnFormElementTypeCode">
            The code of an element type that can be positioned for use on a form.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnFormElementTypeDesc">
            Description of Element Type
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnDefaultLength">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetFormCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetFormCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetFormElementTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetFormElementTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetFormElementTypeDescDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetFormElementTypeDescLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetDefaultLengthDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetDefaultLengthLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow">
            The element types that are available for placing in forms.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.IsFormCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.SetFormCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.IsFormElementTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.SetFormElementTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.IsFormElementTypeDescNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.SetFormElementTypeDescNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.IsDefaultLengthNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.SetDefaultLengthNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.FormCode">
            The code which defines the type of form described in the table
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.FormElementTypeCode">
            The code of an element type that can be positioned for use on a form.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.FormElementTypeDesc">
            Description of Element Type
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.DefaultLength">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTypeRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable">
            Each element that can be displayed on a form is defined on this table.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnFormCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnFormNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnFormSequenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnFormElementTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnColumnId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnRowId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnLengthId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnSkipId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnWhenPrintId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnLiteralTextId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnFormCode">
            The code which defines the type of form described in the table
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnFormName">
            The name of the form being created for the form code.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnFormSequence">
            Unique identifier of each form element within a form
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnFormElementTypeCode">
            The code of an element type that can be possitioned for use on a form.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnColumn">
            The column that the element is to be displayed at on the form.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnRow">
            The row on the page that the element is to be displayed at.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnLength">
            The display length for the element.  e.g. it may be necessary to truncate fields.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnSkip">
            This stores the number of characters to skip prior to printing.  It can be used to spread a description over two lines.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnWhenPrint">
            Indicates when the element is printed.  This would indicate detail lines, first, last page etc.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnLiteralText">
            Text to be displayed if the element is defined as a literal.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetFormCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetFormCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetFormNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetFormNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetFormSequenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetFormSequenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetFormElementTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetFormElementTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetColumnDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetColumnLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetRowDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetRowLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetLengthDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetLengthLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetSkipDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetSkipLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetWhenPrintDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetWhenPrintLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetLiteralTextDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetLiteralTextLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow">
            Each element that can be displayed on a form is defined on this table.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsFormCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetFormCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsFormNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetFormNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsFormSequenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetFormSequenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsFormElementTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetFormElementTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsColumnNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetColumnNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsRowNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetRowNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsLengthNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetLengthNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsSkipNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetSkipNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsWhenPrintNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetWhenPrintNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsLiteralTextNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetLiteralTextNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.FormCode">
            The code which defines the type of form described in the table
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.FormName">
            The name of the form being created for the form code.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.FormSequence">
            Unique identifier of each form element within a form
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.FormElementTypeCode">
            The code of an element type that can be possitioned for use on a form.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.Column">
            The column that the element is to be displayed at on the form.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.Row">
            The row on the page that the element is to be displayed at.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.Length">
            The display length for the element.  e.g. it may be necessary to truncate fields.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.Skip">
            This stores the number of characters to skip prior to printing.  It can be used to spread a description over two lines.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.WhenPrint">
            Indicates when the element is printed.  This would indicate detail lines, first, last page etc.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.LiteralText">
            Text to be displayed if the element is defined as a literal.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFormElementRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable">
            Available analysis values that may be given to a transaction for each analysis type.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnAnalysisTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnAnalysisValueId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnActiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnAnalysisTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnAnalysisValue">
            Value of analysis code
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnLedgerNumber">
            Ledger Number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnActive">
            Analysis attribute values cannot be deleted, because they are needed for existing transaction analysis attributes. But they can be deactivated.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetAnalysisTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetAnalysisTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetAnalysisValueDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetAnalysisValueLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetActiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetActiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow">
            Available analysis values that may be given to a transaction for each analysis type.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.IsAnalysisTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.SetAnalysisTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.IsAnalysisValueNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.SetAnalysisValueNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.IsActiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.SetActiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.AnalysisTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.AnalysisValue">
            Value of analysis code
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.LedgerNumber">
            Ledger Number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.Active">
            Analysis attribute values cannot be deleted, because they are needed for existing transaction analysis attributes. But they can be deactivated.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AFreeformAnalysisRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable">
            All balances on accounts, including summary information is stored here.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnGlmSequenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnYearId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnYtdActualBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnClosingPeriodActualBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnStartBalanceBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnYtdActualIntlId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnClosingPeriodActualIntlId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnStartBalanceIntlId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnYtdActualForeignId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnStartBalanceForeignId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnGlmSequence">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnYear">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnYtdActualBase">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnClosingPeriodActualBase">
            Special period for the year end close journal.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnStartBalanceBase">
            Starting Balance in the ledger currency
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnYtdActualIntl">
            Total for the current year, 2nd (int'l) base currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnClosingPeriodActualIntl">
            Special period for the year end close journal.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnStartBalanceIntl">
            Starting Balance (Int'l)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnYtdActualForeign">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnStartBalanceForeign">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetGlmSequenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetGlmSequenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetYearDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetYearLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetYtdActualBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetYtdActualBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetClosingPeriodActualBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetClosingPeriodActualBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetStartBalanceBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetStartBalanceBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetYtdActualIntlDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetYtdActualIntlLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetClosingPeriodActualIntlDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetClosingPeriodActualIntlLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetStartBalanceIntlDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetStartBalanceIntlLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetYtdActualForeignDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetYtdActualForeignLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetStartBalanceForeignDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetStartBalanceForeignLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow">
            All balances on accounts, including summary information is stored here.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsGlmSequenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetGlmSequenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsYearNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetYearNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsYtdActualBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetYtdActualBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsClosingPeriodActualBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetClosingPeriodActualBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsStartBalanceBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetStartBalanceBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsYtdActualIntlNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetYtdActualIntlNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsClosingPeriodActualIntlNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetClosingPeriodActualIntlNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsStartBalanceIntlNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetStartBalanceIntlNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsYtdActualForeignNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetYtdActualForeignNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsStartBalanceForeignNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetStartBalanceForeignNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.GlmSequence">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.Year">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.CostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.YtdActualBase">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.ClosingPeriodActualBase">
            Special period for the year end close journal.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.StartBalanceBase">
            Starting Balance in the ledger currency
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.YtdActualIntl">
            Total for the current year, 2nd (int'l) base currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.ClosingPeriodActualIntl">
            Special period for the year end close journal.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.StartBalanceIntl">
            Starting Balance (Int'l)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.YtdActualForeign">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.StartBalanceForeign">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable">
            The General Ledger Master data for one period (e.g. a month)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnGlmSequenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnPeriodNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnActualBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnBudgetBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnActualIntlId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnBudgetIntlId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnActualForeignId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnGlmSequence">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnPeriodNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnActualBase">
            This is a number of ledger currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnBudgetBase">
            This is a number of ledger currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnActualIntl">
            Total for the specified period, 2nd (int'l) base currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnBudgetIntl">
            Total for the specified period, 2nd (int'l) base currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnActualForeign">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetGlmSequenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetGlmSequenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetPeriodNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetPeriodNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetActualBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetActualBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetBudgetBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetBudgetBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetActualIntlDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetActualIntlLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetBudgetIntlDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetBudgetIntlLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetActualForeignDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetActualForeignLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow">
            The General Ledger Master data for one period (e.g. a month)
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsGlmSequenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetGlmSequenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsPeriodNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetPeriodNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsActualBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetActualBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsBudgetBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetBudgetBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsActualIntlNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetActualIntlNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsBudgetIntlNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetBudgetIntlNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsActualForeignNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetActualForeignNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.GlmSequence">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.PeriodNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.ActualBase">
            This is a number of ledger currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.BudgetBase">
            This is a number of ledger currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.ActualIntl">
            Total for the specified period, 2nd (int'l) base currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.BudgetIntl">
            Total for the specified period, 2nd (int'l) base currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.ActualForeign">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AGeneralLedgerMasterPeriodRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable">
            Contains the calculation for the stewardship for a particular run.  Files and reports can be recreated from this.  ICH = International Clearing House (Handles transfering of funds and admin grant fees among offices.)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnPeriodNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnIchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnDateProcessedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnIncomeAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnExpenseAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnDirectXferAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnIncomeAmountIntlId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnExpenseAmountIntlId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnDirectXferAmountIntlId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnPeriodNumber">
            This defines which accounting period is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnIchNumber">
            identifes the ICH process number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner but reflected as a character rather than a numeric
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnDateProcessed">
            This is the date the stewardship was processed.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnIncomeAmount">
            Income amount for foreign cost centre's stewardship
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnExpenseAmount">
            Expense amount for foreign cost centre's stewardship
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnDirectXferAmount">
            Direct Transfer amount for foreign cost centre's stewardship
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnIncomeAmountIntl">
            Income amount for foreign cost centre's stewardship in International Currency
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnExpenseAmountIntl">
            Expense amount for foreign cost centre's stewardship in international currency
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnDirectXferAmountIntl">
            Direct Transfer amount for foreign cost centre's stewardship in international currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetPeriodNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetPeriodNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetIchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetIchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetDateProcessedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetDateProcessedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetIncomeAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetIncomeAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetExpenseAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetExpenseAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetDirectXferAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetDirectXferAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetIncomeAmountIntlDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetIncomeAmountIntlLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetExpenseAmountIntlDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetExpenseAmountIntlLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetDirectXferAmountIntlDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetDirectXferAmountIntlLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow">
            Contains the calculation for the stewardship for a particular run.  Files and reports can be recreated from this.  ICH = International Clearing House (Handles transfering of funds and admin grant fees among offices.)
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsPeriodNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetPeriodNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsIchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetIchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsDateProcessedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetDateProcessedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsIncomeAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetIncomeAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsExpenseAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetExpenseAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsDirectXferAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetDirectXferAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsIncomeAmountIntlNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetIncomeAmountIntlNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsExpenseAmountIntlNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetExpenseAmountIntlNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsDirectXferAmountIntlNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetDirectXferAmountIntlNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.PeriodNumber">
            This defines which accounting period is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IchNumber">
            identifes the ICH process number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.CostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner but reflected as a character rather than a numeric
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.DateProcessed">
            This is the date the stewardship was processed.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IncomeAmount">
            Income amount for foreign cost centre's stewardship
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.ExpenseAmount">
            Expense amount for foreign cost centre's stewardship
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.DirectXferAmount">
            Direct Transfer amount for foreign cost centre's stewardship
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.IncomeAmountIntl">
            Income amount for foreign cost centre's stewardship in International Currency
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.ExpenseAmountIntl">
            Expense amount for foreign cost centre's stewardship in international currency
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.DirectXferAmountIntl">
            Direct Transfer amount for foreign cost centre's stewardship in international currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AIchStewardshipRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable">
            Special payment programs the donor may give money through. (ie, Gift Aid in the UK). Currently not used in Petra release 1.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnMethodOfGivingCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnMethodOfGivingDescId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnTrustFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnTaxRebateFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnRecurringMethodFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnActiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnMethodOfGivingCode">
            Defines how a gift is given
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnMethodOfGivingDesc">
            This is a short description which is 32 charcters long
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnTrustFlag">
            Shows if the method of giving involves a trust
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnTaxRebateFlag">
            Shows if this method of giving involves a tax rebate
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnRecurringMethodFlag">
            Shows if this method of giving is used by recurring gifts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnActive">
            Shows whether this code is active
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetMethodOfGivingCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetMethodOfGivingCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetMethodOfGivingDescDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetMethodOfGivingDescLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetTrustFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetTrustFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetTaxRebateFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetTaxRebateFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetRecurringMethodFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetRecurringMethodFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetActiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetActiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow">
            Special payment programs the donor may give money through. (ie, Gift Aid in the UK). Currently not used in Petra release 1.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsMethodOfGivingCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetMethodOfGivingCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsMethodOfGivingDescNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetMethodOfGivingDescNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsTrustFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetTrustFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsTaxRebateFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetTaxRebateFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsRecurringMethodFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetRecurringMethodFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsActiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetActiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.MethodOfGivingCode">
            Defines how a gift is given
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.MethodOfGivingDesc">
            This is a short description which is 32 charcters long
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.TrustFlag">
            Shows if the method of giving involves a trust
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.TaxRebateFlag">
            Shows if this method of giving involves a tax rebate
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.RecurringMethodFlag">
            Shows if this method of giving is used by recurring gifts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.Active">
            Shows whether this code is active
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AMethodOfGivingRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable">
            Various ways a transaction may originate, depending on the subsystem.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnSubSystemCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnTransactionTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnDebitAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnCreditAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnLastJournalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnLastRecurringJournalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnTransactionTypeDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnBalancingAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnSpecialTransactionTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnSubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnTransactionTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnDebitAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnCreditAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnLastJournal">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnLastRecurringJournal">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnTransactionTypeDescription">
            This is a short description which is 32 charcters long
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnBalancingAccountCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnSpecialTransactionType">
            Is this transaction type a special transaction type or not?
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetSubSystemCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetSubSystemCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetTransactionTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetTransactionTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetDebitAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetDebitAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetCreditAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetCreditAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetLastJournalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetLastJournalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetLastRecurringJournalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetLastRecurringJournalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetTransactionTypeDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetTransactionTypeDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetBalancingAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetBalancingAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetSpecialTransactionTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetSpecialTransactionTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow">
            Various ways a transaction may originate, depending on the subsystem.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsSubSystemCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetSubSystemCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsTransactionTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetTransactionTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsDebitAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetDebitAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsCreditAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetCreditAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsLastJournalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetLastJournalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsLastRecurringJournalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetLastRecurringJournalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsTransactionTypeDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetTransactionTypeDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsBalancingAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetBalancingAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsSpecialTransactionTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetSpecialTransactionTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.TransactionTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.DebitAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.CreditAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.LastJournal">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.LastRecurringJournal">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.TransactionTypeDescription">
            This is a short description which is 32 charcters long
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.BalancingAccountCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.SpecialTransactionType">
            Is this transaction type a special transaction type or not?
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTypeRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable">
            GL batches from the previous financial year.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchControlTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchRunningTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchDebitTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchCreditTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchYearId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnDateEffectiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnDateOfEntryId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnLastJournalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnLedgerNumber">
            The ledger that the batch belongs to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchControlTotal">
            Raw total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.  Entered by the user.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchRunningTotal">
            Running total amount of the batch calculated as transactions are enterd.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchDebitTotal">
            Raw debit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchCreditTotal">
            Raw credit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchPeriod">
            The accounting period that the batch belongs to.  Must be &lt;= 20.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchYear">
            The financial year that the batch belongs to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnDateEffective">
            Date the  batch comes into effect
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnDateOfEntry">
            Date the  batch comes into effect
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnBatchStatus">
            Has this batch been posted yet?
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnLastJournal">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchControlTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchControlTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchRunningTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchRunningTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchDebitTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchDebitTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchCreditTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchCreditTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchYearDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchYearLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetDateEffectiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetDateEffectiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetDateOfEntryDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetDateOfEntryLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetBatchStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetLastJournalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetLastJournalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow">
            GL batches from the previous financial year.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsBatchDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetBatchDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsBatchControlTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetBatchControlTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsBatchRunningTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetBatchRunningTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsBatchDebitTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetBatchDebitTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsBatchCreditTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetBatchCreditTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsBatchPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetBatchPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsBatchYearNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetBatchYearNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsDateEffectiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetDateEffectiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsDateOfEntryNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetDateOfEntryNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsBatchStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetBatchStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsLastJournalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetLastJournalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.LedgerNumber">
            The ledger that the batch belongs to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.BatchDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.BatchControlTotal">
            Raw total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.  Entered by the user.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.BatchRunningTotal">
            Running total amount of the batch calculated as transactions are enterd.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.BatchDebitTotal">
            Raw debit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.BatchCreditTotal">
            Raw credit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.BatchPeriod">
            The accounting period that the batch belongs to.  Must be &lt;= 20.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.BatchYear">
            The financial year that the batch belongs to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.DateEffective">
            Date the  batch comes into effect
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.DateOfEntry">
            Date the  batch comes into effect
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.BatchStatus">
            Has this batch been posted yet?
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.LastJournal">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearBatchRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable">
            GL journals from the previous financial year.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalDebitTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalCreditTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnDateEffectiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnTransactionTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnLastTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnSubSystemCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnTransactionCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnBaseCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnExchangeRateToBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnExchangeRateTimeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnReversedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalDebitTotal">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalCreditTotal">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalPeriod">
            This defines which accounting period is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnDateEffective">
            Date the  batch comes into effect
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnTransactionTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnLastTransactionNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnSubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnJournalStatus">
            Has a journal been posted yet
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnTransactionCurrency">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnBaseCurrency">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnExchangeRateToBase">
            The rate of exchange from the journal currency (in a_transaction_currency_c) to the ledger base currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnExchangeRateTime">
            The date and time
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnReversed">
            Indicates whether or not a journal has been reversed.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalDebitTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalDebitTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalCreditTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalCreditTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetDateEffectiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetDateEffectiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetTransactionTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetTransactionTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetLastTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetLastTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetSubSystemCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetSubSystemCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetJournalStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetTransactionCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetTransactionCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetBaseCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetBaseCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetExchangeRateToBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetExchangeRateToBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetExchangeRateTimeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetExchangeRateTimeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetReversedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetReversedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow">
            GL journals from the previous financial year.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsJournalDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetJournalDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsJournalDebitTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetJournalDebitTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsJournalCreditTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetJournalCreditTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsJournalPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetJournalPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsDateEffectiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetDateEffectiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsTransactionTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetTransactionTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsLastTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetLastTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsSubSystemCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetSubSystemCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsJournalStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetJournalStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsTransactionCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetTransactionCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsBaseCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetBaseCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsExchangeRateToBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetExchangeRateToBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsExchangeRateTimeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetExchangeRateTimeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsReversedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetReversedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.JournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.JournalDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.JournalDebitTotal">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.JournalCreditTotal">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.JournalPeriod">
            This defines which accounting period is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.DateEffective">
            Date the  batch comes into effect
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.TransactionTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.LastTransactionNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.SubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.JournalStatus">
            Has a journal been posted yet
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.TransactionCurrency">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.BaseCurrency">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.ExchangeRateToBase">
            The rate of exchange from the journal currency (in a_transaction_currency_c) to the ledger base currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.ExchangeRateTime">
            The date and time
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.Reversed">
            Indicates whether or not a journal has been reversed.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearJournalRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable">
            GL transactions from the previous financial year.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnPrimaryAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnPrimaryCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnTransactionDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnTransactionAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnAmountInBaseCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnAnalysisIndicatorId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnReconciledStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnNarrativeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnDebitCreditIndicatorId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnTransactionStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnHeaderNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnSubTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnToIltFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnSourceFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnSourceReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnSystemGeneratedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnAmountInIntlCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnJournalNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnPrimaryAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnPrimaryCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnTransactionDate">
            Date the transaction took place
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnTransactionAmount">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnAmountInBaseCurrency">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnAnalysisIndicator">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnReconciledStatus">
            Shows if the transaction has been reconciled or not
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnNarrative">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnDebitCreditIndicator">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnTransactionStatus">
            Has a transaction been posted yet
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnHeaderNumber">
            The header (eg, cashbook #) that the transaction is associated with.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnDetailNumber">
            The detail (within the header) that the transaction is associated with.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnSubType">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnToIltFlag">
            Indicates whether the ILT transaction has been transferred to transaction for ILT file.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnSourceFlag">
            To flag a transaction as having come from a source ledger and been processed in an ilt processing centre
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnReference">
            Reference number/code for the transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnSourceReference">
            Transaction key which initiated an ILT transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnSystemGenerated">
            Was this transaction generated automatically by the system?
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnAmountInIntlCurrency">
            The transaction amount in the second base currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetPrimaryAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetPrimaryAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetPrimaryCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetPrimaryCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetTransactionDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetTransactionDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetTransactionAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetTransactionAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetAmountInBaseCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetAmountInBaseCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetAnalysisIndicatorDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetAnalysisIndicatorLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetReconciledStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetReconciledStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetNarrativeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetNarrativeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetDebitCreditIndicatorDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetDebitCreditIndicatorLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetTransactionStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetTransactionStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetHeaderNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetHeaderNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetSubTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetSubTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetToIltFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetToIltFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetSourceFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetSourceFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetSourceReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetSourceReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetSystemGeneratedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetSystemGeneratedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetAmountInIntlCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetAmountInIntlCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow">
            GL transactions from the previous financial year.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsPrimaryAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetPrimaryAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsPrimaryCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetPrimaryCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsTransactionDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetTransactionDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsTransactionAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetTransactionAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsAmountInBaseCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetAmountInBaseCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsAnalysisIndicatorNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetAnalysisIndicatorNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsReconciledStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetReconciledStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsNarrativeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetNarrativeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsDebitCreditIndicatorNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetDebitCreditIndicatorNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsTransactionStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetTransactionStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsHeaderNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetHeaderNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsSubTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetSubTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsToIltFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetToIltFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsSourceFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetSourceFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsSourceReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetSourceReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsSystemGeneratedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetSystemGeneratedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsAmountInIntlCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetAmountInIntlCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.JournalNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.TransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.PrimaryAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.CostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.PrimaryCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.TransactionDate">
            Date the transaction took place
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.TransactionAmount">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.AmountInBaseCurrency">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.AnalysisIndicator">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.ReconciledStatus">
            Shows if the transaction has been reconciled or not
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.Narrative">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.DebitCreditIndicator">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.TransactionStatus">
            Has a transaction been posted yet
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.HeaderNumber">
            The header (eg, cashbook #) that the transaction is associated with.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.DetailNumber">
            The detail (within the header) that the transaction is associated with.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SubType">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.ToIltFlag">
            Indicates whether the ILT transaction has been transferred to transaction for ILT file.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SourceFlag">
            To flag a transaction as having come from a source ledger and been processed in an ilt processing centre
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.Reference">
            Reference number/code for the transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SourceReference">
            Transaction key which initiated an ILT transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.SystemGenerated">
            Was this transaction generated automatically by the system?
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.AmountInIntlCurrency">
            The transaction amount in the second base currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APreviousYearTransactionRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable">
            GL transaction Analysis Attributes from the previous financial year.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnAnalysisTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnAnalysisAttributeValueId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnJournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnCostCentreCode">
            Cost Centre to which the attribute relates
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnAnalysisTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnAnalysisAttributeValue">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetAnalysisTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetAnalysisTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetAnalysisAttributeValueDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetAnalysisAttributeValueLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow">
            GL transaction Analysis Attributes from the previous financial year.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsAnalysisTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetAnalysisTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsAnalysisAttributeValueNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetAnalysisAttributeValueNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.JournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.TransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.CostCentreCode">
            Cost Centre to which the attribute relates
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.AnalysisTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.AnalysisAttributeValue">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearTransAnalAttribRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable">
            Old rates no longer in use.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnFromCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnToCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnRateOfExchangeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnDateEffectiveFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnTimeEffectiveFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnFromCurrencyCode">
            Defines the currency being exchanged
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnToCurrencyCode">
            Defines which currency is being changed to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnRateOfExchange">
            The rate of exchange
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnDateEffectiveFrom">
            Date the exchange rate becomes effective
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnTimeEffectiveFrom">
            System generated date/time stamp.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetFromCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetFromCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetToCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetToCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetRateOfExchangeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetRateOfExchangeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetDateEffectiveFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetDateEffectiveFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetTimeEffectiveFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetTimeEffectiveFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow">
            Old rates no longer in use.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.IsFromCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.SetFromCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.IsToCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.SetToCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.IsRateOfExchangeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.SetRateOfExchangeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.IsDateEffectiveFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.SetDateEffectiveFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.IsTimeEffectiveFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.SetTimeEffectiveFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.FromCurrencyCode">
            Defines the currency being exchanged
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.ToCurrencyCode">
            Defines which currency is being changed to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.RateOfExchange">
            The rate of exchange
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.DateEffectiveFrom">
            Date the exchange rate becomes effective
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.TimeEffectiveFrom">
            System generated date/time stamp.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.APrevYearCorpExRateRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable">
            GL batches from previous periods in the current financial year.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchControlTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchRunningTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchDebitTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchCreditTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnDateEffectiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnDateOfEntryId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnLastJournalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnLedgerNumber">
            The ledger that the batch belongs to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchControlTotal">
            Raw total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.  Entered by the user.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchRunningTotal">
            Running total amount of the batch calculated as transactions are enterd.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchDebitTotal">
            Raw debit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchCreditTotal">
            Raw credit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchPeriod">
            The accounting period that the batch belongs to.  Must be &lt;= 20.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnDateEffective">
            Date the  batch comes into effect
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnDateOfEntry">
            Date the  batch comes into effect
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnBatchStatus">
            Has this batch been posted yet?
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnLastJournal">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchControlTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchControlTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchRunningTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchRunningTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchDebitTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchDebitTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchCreditTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchCreditTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetDateEffectiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetDateEffectiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetDateOfEntryDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetDateOfEntryLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetBatchStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetLastJournalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetLastJournalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow">
            GL batches from previous periods in the current financial year.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsBatchDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetBatchDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsBatchControlTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetBatchControlTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsBatchRunningTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetBatchRunningTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsBatchDebitTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetBatchDebitTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsBatchCreditTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetBatchCreditTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsBatchPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetBatchPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsDateEffectiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetDateEffectiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsDateOfEntryNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetDateOfEntryNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsBatchStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetBatchStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsLastJournalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetLastJournalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.LedgerNumber">
            The ledger that the batch belongs to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.BatchDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.BatchControlTotal">
            Raw total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.  Entered by the user.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.BatchRunningTotal">
            Running total amount of the batch calculated as transactions are enterd.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.BatchDebitTotal">
            Raw debit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.BatchCreditTotal">
            Raw credit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.BatchPeriod">
            The accounting period that the batch belongs to.  Must be &lt;= 20.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.DateEffective">
            Date the  batch comes into effect
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.DateOfEntry">
            Date the  batch comes into effect
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.BatchStatus">
            Has this batch been posted yet?
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.LastJournal">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldBatchRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable">
            GL journals from previous periods in the current financial year.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalDebitTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalCreditTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnDateEffectiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnTransactionTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnLastTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnSubSystemCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnTransactionCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnBaseCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnExchangeRateToBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnExchangeRateTimeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnReversedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalDebitTotal">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalCreditTotal">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalPeriod">
            This defines which accounting period is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnDateEffective">
            Date the  batch comes into effect
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnTransactionTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnLastTransactionNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnSubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnJournalStatus">
            Has a journal been posted yet
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnTransactionCurrency">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnBaseCurrency">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnExchangeRateToBase">
            The rate of exchange
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnExchangeRateTime">
            The date and time
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnReversed">
            Indicates whether or not a journal has been reversed.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalDebitTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalDebitTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalCreditTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalCreditTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetDateEffectiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetDateEffectiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetTransactionTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetTransactionTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetLastTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetLastTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetSubSystemCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetSubSystemCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetJournalStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetTransactionCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetTransactionCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetBaseCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetBaseCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetExchangeRateToBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetExchangeRateToBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetExchangeRateTimeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetExchangeRateTimeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetReversedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetReversedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow">
            GL journals from previous periods in the current financial year.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsJournalDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetJournalDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsJournalDebitTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetJournalDebitTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsJournalCreditTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetJournalCreditTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsJournalPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetJournalPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsDateEffectiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetDateEffectiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsTransactionTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetTransactionTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsLastTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetLastTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsSubSystemCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetSubSystemCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsJournalStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetJournalStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsTransactionCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetTransactionCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsBaseCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetBaseCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsExchangeRateToBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetExchangeRateToBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsExchangeRateTimeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetExchangeRateTimeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsReversedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetReversedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.JournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.JournalDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.JournalDebitTotal">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.JournalCreditTotal">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.JournalPeriod">
            This defines which accounting period is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.DateEffective">
            Date the  batch comes into effect
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.TransactionTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.LastTransactionNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.SubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.JournalStatus">
            Has a journal been posted yet
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.TransactionCurrency">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.BaseCurrency">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.ExchangeRateToBase">
            The rate of exchange
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.ExchangeRateTime">
            The date and time
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.Reversed">
            Indicates whether or not a journal has been reversed.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldJournalRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable">
            GL transactions from previous periods in the current financial year.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnPrimaryAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnPrimaryCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnTransactionDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnTransactionAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnAmountInBaseCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnAnalysisIndicatorId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnReconciledStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnNarrativeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnDebitCreditIndicatorId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnTransactionStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnHeaderNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnSubTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnToIltFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnSourceFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnSourceReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnSystemGeneratedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnAmountInIntlCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnIchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnJournalNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnPrimaryAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnPrimaryCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnTransactionDate">
            Date the transaction took place
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnTransactionAmount">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnAmountInBaseCurrency">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnAnalysisIndicator">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnReconciledStatus">
            Shows if the transaction has been reconciled or not
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnNarrative">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnDebitCreditIndicator">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnTransactionStatus">
            Has a transaction been posted yet
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnHeaderNumber">
            The header (eg, cashbook #) that the transaction is associated with.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnDetailNumber">
            The detail (within the header) that the transaction is associated with.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnSubType">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnToIltFlag">
            Indicates whether the ILT transaction has been transferred to transaction for ILT file.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnSourceFlag">
            To flag a transaction as having come from a source ledger and been processed in an ilt processing centre
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnReference">
            Reference number/code for the transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnSourceReference">
            Transaction key which initiated an ILT transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnSystemGenerated">
            Was this transaction generated automatically by the system?
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnAmountInIntlCurrency">
            The transaction amount in the second base currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnIchNumber">
            identifes the ICH process number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetPrimaryAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetPrimaryAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetPrimaryCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetPrimaryCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetTransactionDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetTransactionDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetTransactionAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetTransactionAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetAmountInBaseCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetAmountInBaseCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetAnalysisIndicatorDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetAnalysisIndicatorLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetReconciledStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetReconciledStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetNarrativeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetNarrativeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetDebitCreditIndicatorDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetDebitCreditIndicatorLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetTransactionStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetTransactionStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetHeaderNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetHeaderNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetSubTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetSubTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetToIltFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetToIltFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetSourceFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetSourceFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetSourceReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetSourceReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetSystemGeneratedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetSystemGeneratedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetAmountInIntlCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetAmountInIntlCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetIchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetIchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow">
            GL transactions from previous periods in the current financial year.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsPrimaryAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetPrimaryAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsPrimaryCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetPrimaryCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsTransactionDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetTransactionDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsTransactionAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetTransactionAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsAmountInBaseCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetAmountInBaseCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsAnalysisIndicatorNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetAnalysisIndicatorNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsReconciledStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetReconciledStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsNarrativeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetNarrativeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsDebitCreditIndicatorNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetDebitCreditIndicatorNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsTransactionStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetTransactionStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsHeaderNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetHeaderNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsSubTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetSubTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsToIltFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetToIltFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsSourceFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetSourceFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsSourceReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetSourceReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsSystemGeneratedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetSystemGeneratedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsAmountInIntlCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetAmountInIntlCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsIchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetIchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.JournalNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.TransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.PrimaryAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.CostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.PrimaryCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.TransactionDate">
            Date the transaction took place
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.TransactionAmount">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.AmountInBaseCurrency">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.AnalysisIndicator">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.ReconciledStatus">
            Shows if the transaction has been reconciled or not
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.Narrative">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.DebitCreditIndicator">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.TransactionStatus">
            Has a transaction been posted yet
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.HeaderNumber">
            The header (eg, cashbook #) that the transaction is associated with.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.DetailNumber">
            The detail (within the header) that the transaction is associated with.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SubType">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.ToIltFlag">
            Indicates whether the ILT transaction has been transferred to transaction for ILT file.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SourceFlag">
            To flag a transaction as having come from a source ledger and been processed in an ilt processing centre
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.Reference">
            Reference number/code for the transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SourceReference">
            Transaction key which initiated an ILT transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.SystemGenerated">
            Was this transaction generated automatically by the system?
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.AmountInIntlCurrency">
            The transaction amount in the second base currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.IchNumber">
            identifes the ICH process number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisYearOldTransactionRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable">
            GL transaction Analysis Attributes from previous periods in the current financial year.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnAnalysisTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnAnalysisAttributeValueId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnJournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnCostCentreCode">
            Cost Centre to which the attribute relates
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnAnalysisTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnAnalysisAttributeValue">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetAnalysisTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetAnalysisTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetAnalysisAttributeValueDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetAnalysisAttributeValueLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow">
            GL transaction Analysis Attributes from previous periods in the current financial year.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsAnalysisTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetAnalysisTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsAnalysisAttributeValueNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetAnalysisAttributeValueNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.JournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.TransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.CostCentreCode">
            Cost Centre to which the attribute relates
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.AnalysisTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.AnalysisAttributeValue">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AThisyearoldTransAnalAttribRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable">
            Templates of general ledger batches which can be copied into the ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchControlTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchRunningTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchDebitTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchCreditTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnDateEffectiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnUserIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnDateOfEntryId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnFrequencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnDateBatchLastRunId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnLastJournalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchControlTotal">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchStatus">
            identifies the status of a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchRunningTotal">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchDebitTotal">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchCreditTotal">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnBatchPeriod">
            This defines which accounting period is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnDateEffective">
            Date the  batch comes into effect
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnUserId">
            This identifies who the current user is
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnDateOfEntry">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnFrequencyCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnDateBatchLastRun">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnLastJournal">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchControlTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchControlTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchRunningTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchRunningTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchDebitTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchDebitTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchCreditTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchCreditTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetBatchPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetDateEffectiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetDateEffectiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetUserIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetUserIdLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetDateOfEntryDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetDateOfEntryLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetFrequencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetFrequencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetDateBatchLastRunDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetDateBatchLastRunLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetLastJournalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetLastJournalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow">
            Templates of general ledger batches which can be copied into the ledger.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsBatchDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetBatchDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsBatchControlTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetBatchControlTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsBatchStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetBatchStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsBatchRunningTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetBatchRunningTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsBatchDebitTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetBatchDebitTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsBatchCreditTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetBatchCreditTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsBatchPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetBatchPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsDateEffectiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetDateEffectiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsUserIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetUserIdNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsDateOfEntryNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetDateOfEntryNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsFrequencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetFrequencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsDateBatchLastRunNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetDateBatchLastRunNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsLastJournalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetLastJournalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.BatchDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.BatchControlTotal">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.BatchStatus">
            identifies the status of a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.BatchRunningTotal">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.BatchDebitTotal">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.BatchCreditTotal">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.BatchPeriod">
            This defines which accounting period is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.DateEffective">
            Date the  batch comes into effect
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.UserId">
            This identifies who the current user is
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.DateOfEntry">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.FrequencyCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.DateBatchLastRun">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.LastJournal">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringBatchRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable">
            Templates of general ledger journals which are copied into the ledger with recurring general ledger batches.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalDebitTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalCreditTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnDateEffectiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnTransactionTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnMethodOfPaymentCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnLastTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnSubSystemCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnExchangeRateToBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnTransactionCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalStatus">
            identifies the status of a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalDebitTotal">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalCreditTotal">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnJournalPeriod">
            This defines which accounting period is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnDateEffective">
            Date the  batch comes into effect
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnTransactionTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnMethodOfPaymentCode">
            This is how the partner paid. Eg cash, Cheque etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnLastTransactionNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnSubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnExchangeRateToBase">
            The rate of exchange
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnTransactionCurrency">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalDebitTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalDebitTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalCreditTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalCreditTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetJournalPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetDateEffectiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetDateEffectiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetTransactionTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetTransactionTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetMethodOfPaymentCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetMethodOfPaymentCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetLastTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetLastTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetSubSystemCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetSubSystemCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetExchangeRateToBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetExchangeRateToBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetTransactionCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetTransactionCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow">
            Templates of general ledger journals which are copied into the ledger with recurring general ledger batches.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsJournalDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetJournalDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsJournalStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetJournalStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsJournalDebitTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetJournalDebitTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsJournalCreditTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetJournalCreditTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsJournalPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetJournalPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsDateEffectiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetDateEffectiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsTransactionTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetTransactionTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsMethodOfPaymentCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetMethodOfPaymentCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsLastTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetLastTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsSubSystemCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetSubSystemCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsExchangeRateToBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetExchangeRateToBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsTransactionCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetTransactionCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.JournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.JournalDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.JournalStatus">
            identifies the status of a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.JournalDebitTotal">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.JournalCreditTotal">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.JournalPeriod">
            This defines which accounting period is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.DateEffective">
            Date the  batch comes into effect
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.TransactionTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.MethodOfPaymentCode">
            This is how the partner paid. Eg cash, Cheque etc
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.LastTransactionNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.SubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.ExchangeRateToBase">
            The rate of exchange
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.TransactionCurrency">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringJournalRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable">
            Templates of general ledger transactions which are copied into the ledger with general ledger batches.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnBaseCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnExchangeRateToBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnAmountInBaseCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnAnalysisIndicatorId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnMethodOfPaymentCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnPeriodNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnReconciledFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnSubSystemCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnNarrativeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnDateOfEntryId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnUserIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnDebitCreditIndicatorId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnHeaderNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnSubTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnJournalNumber">
            Journal  number that transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionDate">
            Date the transaction took place
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionCurrency">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionAmount">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnBaseCurrency">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnExchangeRateToBase">
            The rate of exchange
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnAmountInBaseCurrency">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnAnalysisIndicator">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnMethodOfPaymentCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnPeriodNumber">
            This defines which accounting period is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnReconciledFlag">
            Shows if the transaction has been reconciled or not
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnSubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnNarrative">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnReference">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnDateOfEntry">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnUserId">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnDebitCreditIndicator">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnTransactionStatus">
            Has a transaction been posted yet
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnHeaderNumber">
            The header (eg, cashbook #) that the transaction is associated with.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnDetailNumber">
            The detail (within the header) that the transaction is associated with.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnSubType">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetBaseCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetBaseCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetExchangeRateToBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetExchangeRateToBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetAmountInBaseCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetAmountInBaseCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetAnalysisIndicatorDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetAnalysisIndicatorLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetMethodOfPaymentCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetMethodOfPaymentCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetPeriodNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetPeriodNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetReconciledFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetReconciledFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetSubSystemCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetSubSystemCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetNarrativeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetNarrativeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetDateOfEntryDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetDateOfEntryLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetUserIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetUserIdLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetDebitCreditIndicatorDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetDebitCreditIndicatorLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetTransactionStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetHeaderNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetHeaderNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetSubTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetSubTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow">
            Templates of general ledger transactions which are copied into the ledger with general ledger batches.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsTransactionDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetTransactionDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsTransactionCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetTransactionCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsTransactionAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetTransactionAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsBaseCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetBaseCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsExchangeRateToBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetExchangeRateToBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsAmountInBaseCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetAmountInBaseCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsAnalysisIndicatorNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetAnalysisIndicatorNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsMethodOfPaymentCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetMethodOfPaymentCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsPeriodNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetPeriodNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsReconciledFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetReconciledFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsSubSystemCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetSubSystemCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsTransactionTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetTransactionTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsNarrativeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetNarrativeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsDateOfEntryNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetDateOfEntryNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsUserIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetUserIdNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsDebitCreditIndicatorNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetDebitCreditIndicatorNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsTransactionStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetTransactionStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsHeaderNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetHeaderNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsSubTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetSubTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.JournalNumber">
            Journal  number that transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.TransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.CostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.TransactionDate">
            Date the transaction took place
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.TransactionCurrency">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.TransactionAmount">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.BaseCurrency">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.ExchangeRateToBase">
            The rate of exchange
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.AmountInBaseCurrency">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.AnalysisIndicator">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.MethodOfPaymentCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.PeriodNumber">
            This defines which accounting period is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.ReconciledFlag">
            Shows if the transaction has been reconciled or not
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.TransactionTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.Narrative">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.Reference">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.DateOfEntry">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.UserId">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.DebitCreditIndicator">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.TransactionStatus">
            Has a transaction been posted yet
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.HeaderNumber">
            The header (eg, cashbook #) that the transaction is associated with.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.DetailNumber">
            The detail (within the header) that the transaction is associated with.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.SubType">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransactionRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable">
            Detailed analysis information stored along with the recurring transaction template.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnAnalysisTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnAnalysisAttributeValueId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnJournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnCostCentreCode">
            Cost Centre to which the attribute relates
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnAnalysisTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnAnalysisAttributeValue">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetAnalysisTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetAnalysisTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetAnalysisAttributeValueDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetAnalysisAttributeValueLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow">
            Detailed analysis information stored along with the recurring transaction template.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsAnalysisTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetAnalysisTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsAnalysisAttributeValueNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetAnalysisAttributeValueNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.JournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.TransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.CostCentreCode">
            Cost Centre to which the attribute relates
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.AnalysisTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.AnalysisAttributeValue">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ARecurringTransAnalAttribRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable">
            Store current and forward period general ledger batches for a ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchControlTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchRunningTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchDebitTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchCreditTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnDateEffectiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnDateOfEntryId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnLastJournalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnLedgerNumber">
            The ledger that the batch belongs to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchNumber">
            Identifies the batch.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchControlTotal">
            Raw total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.  Entered by the user.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchRunningTotal">
            Running total amount of the batch calculated as transactions are enterd.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchDebitTotal">
            Raw debit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchCreditTotal">
            Raw credit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchPeriod">
            This identifies which accounting period that the batch belongs to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnDateEffective">
            Date the  batch comes into effect
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnDateOfEntry">
            Date the  batch was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnBatchStatus">
            Has this batch been posted yet?
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnLastJournal">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchControlTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchControlTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchRunningTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchRunningTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchDebitTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchDebitTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchCreditTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchCreditTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetDateEffectiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetDateEffectiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetDateOfEntryDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetDateOfEntryLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetBatchStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetLastJournalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetLastJournalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow">
            Store current and forward period general ledger batches for a ledger.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsBatchDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetBatchDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsBatchControlTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetBatchControlTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsBatchRunningTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetBatchRunningTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsBatchDebitTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetBatchDebitTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsBatchCreditTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetBatchCreditTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsBatchPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetBatchPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsDateEffectiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetDateEffectiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsDateOfEntryNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetDateOfEntryNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsBatchStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetBatchStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsLastJournalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetLastJournalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.LedgerNumber">
            The ledger that the batch belongs to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.BatchNumber">
            Identifies the batch.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.BatchDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.BatchControlTotal">
            Raw total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.  Entered by the user.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.BatchRunningTotal">
            Running total amount of the batch calculated as transactions are enterd.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.BatchDebitTotal">
            Raw debit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.BatchCreditTotal">
            Raw credit total amount of the batch.  If the journals within the batch have different currencies, this is just a raw numeric sum of all the journal amounts.  It does not reflect a monetary value in a specific currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.BatchPeriod">
            This identifies which accounting period that the batch belongs to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.DateEffective">
            Date the  batch comes into effect
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.DateOfEntry">
            Date the  batch was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.BatchStatus">
            Has this batch been posted yet?
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.LastJournal">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ABatchRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable">
            Holds details of each general ledger journal, which contains a group of transactions.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalDebitTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalCreditTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnDateEffectiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnTransactionTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnLastTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnSubSystemCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnTransactionCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnExchangeRateToBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnExchangeRateTimeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnDateOfEntryId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnReversedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnLedgerNumber">
            The journal belongs to this ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnBatchNumber">
            identifes which batch the journal belongs to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalDebitTotal">
            This is a number of currency units in the currency of the transaction.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalCreditTotal">
            This is the number of currency units in the currency of the transaction.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalPeriod">
            This defines which accounting period is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnDateEffective">
            Date the journal comes into effect.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnTransactionTypeCode">
            Which type of journal is this?  Eg. STD, ALLOC, REALLOC, REVAL.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnLastTransactionNumber">
            The number of the last transaction within the journal.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnSubSystemCode">
            Indicates the sub system of accounts that the journal belongs to.  Eg. GL, AP, GR
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnJournalStatus">
            Has a journal been posted yet
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnTransactionCurrency">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnExchangeRateToBase">
            The rate of exchange from the transaction currency (in a_transaction_currency_c) to the ledger base currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnExchangeRateTime">
            The time component of the exchange rate.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnDateOfEntry">
            Date the journal was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnReversed">
            Indicates whether or not a journal has been reversed.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalDebitTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalDebitTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalCreditTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalCreditTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetDateEffectiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetDateEffectiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetTransactionTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetTransactionTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetLastTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetLastTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetSubSystemCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetSubSystemCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetJournalStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetTransactionCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetTransactionCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetExchangeRateToBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetExchangeRateToBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetExchangeRateTimeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetExchangeRateTimeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetDateOfEntryDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetDateOfEntryLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetReversedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetReversedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow">
            Holds details of each general ledger journal, which contains a group of transactions.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsJournalDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetJournalDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsJournalDebitTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetJournalDebitTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsJournalCreditTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetJournalCreditTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsJournalPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetJournalPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsDateEffectiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetDateEffectiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsTransactionTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetTransactionTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsLastTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetLastTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsSubSystemCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetSubSystemCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsJournalStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetJournalStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsTransactionCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetTransactionCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsExchangeRateToBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetExchangeRateToBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsExchangeRateTimeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetExchangeRateTimeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsDateOfEntryNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetDateOfEntryNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsReversedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetReversedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.LedgerNumber">
            The journal belongs to this ledger.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.BatchNumber">
            identifes which batch the journal belongs to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.JournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.JournalDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.JournalDebitTotal">
            This is a number of currency units in the currency of the transaction.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.JournalCreditTotal">
            This is the number of currency units in the currency of the transaction.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.JournalPeriod">
            This defines which accounting period is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.DateEffective">
            Date the journal comes into effect.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.TransactionTypeCode">
            Which type of journal is this?  Eg. STD, ALLOC, REALLOC, REVAL.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.LastTransactionNumber">
            The number of the last transaction within the journal.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.SubSystemCode">
            Indicates the sub system of accounts that the journal belongs to.  Eg. GL, AP, GR
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.JournalStatus">
            Has a journal been posted yet
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.TransactionCurrency">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.ExchangeRateToBase">
            The rate of exchange from the transaction currency (in a_transaction_currency_c) to the ledger base currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.ExchangeRateTime">
            The time component of the exchange rate.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.DateOfEntry">
            Date the journal was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.Reversed">
            Indicates whether or not a journal has been reversed.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AJournalRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable">
            Detailed information for each debit and credit in a general ledger journal.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnPrimaryAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnPrimaryCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnTransactionDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnTransactionAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnAmountInBaseCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnAnalysisIndicatorId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnReconciledStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnNarrativeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnDebitCreditIndicatorId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnTransactionStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnHeaderNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnSubTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnToIltFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnSourceFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnSourceReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnSystemGeneratedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnAmountInIntlCurrencyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnIchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnKeyMinistryKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnJournalNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnPrimaryAccountCode">
            This identifies the account the financial transaction must be stored against [NOT USED]
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnPrimaryCostCentreCode">
            This identifies which cost centre an account is applied to [NOT USED]
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnTransactionDate">
            Date the transaction took place
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnTransactionAmount">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnAmountInBaseCurrency">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnAnalysisIndicator">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnReconciledStatus">
            shows if the transaction has been reconciled or not
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnNarrative">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnDebitCreditIndicator">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnTransactionStatus">
            Has a transaction been posted yet
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnHeaderNumber">
            The header (eg, cashbook #) that the transaction is associated with. [NOT USED]
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnDetailNumber">
            The detail (within the header) that the transaction is associated with. [NOT USED]
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnSubType">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnToIltFlag">
            Indicates whether the ILT transaction has been transferred to transaction for ILT file.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnSourceFlag">
            To flag a transaction as having come from a source ledger and been processed in an ilt processing centre
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnReference">
            Reference number/code for the transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnSourceReference">
            Transaction key which initiated an ILT transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnSystemGenerated">
            Was this transaction generated automatically by the system?
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnAmountInIntlCurrency">
            The transaction amount in the second base currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnIchNumber">
            identifes the ICH process number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnKeyMinistryKey">
            Key ministry to which this transaction applies (just for fund transfers)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetPrimaryAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetPrimaryAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetPrimaryCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetPrimaryCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetTransactionDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetTransactionDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetTransactionAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetTransactionAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetAmountInBaseCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetAmountInBaseCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetAnalysisIndicatorDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetAnalysisIndicatorLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetReconciledStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetReconciledStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetNarrativeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetNarrativeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetDebitCreditIndicatorDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetDebitCreditIndicatorLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetTransactionStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetTransactionStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetHeaderNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetHeaderNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetSubTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetSubTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetToIltFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetToIltFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetSourceFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetSourceFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetSourceReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetSourceReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetSystemGeneratedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetSystemGeneratedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetAmountInIntlCurrencyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetAmountInIntlCurrencyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetIchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetIchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetKeyMinistryKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetKeyMinistryKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow">
            Detailed information for each debit and credit in a general ledger journal.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsPrimaryAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetPrimaryAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsPrimaryCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetPrimaryCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsTransactionDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetTransactionDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsTransactionAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetTransactionAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsAmountInBaseCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetAmountInBaseCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsAnalysisIndicatorNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetAnalysisIndicatorNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsReconciledStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetReconciledStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsNarrativeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetNarrativeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsDebitCreditIndicatorNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetDebitCreditIndicatorNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsTransactionStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetTransactionStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsHeaderNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetHeaderNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsSubTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetSubTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsToIltFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetToIltFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsSourceFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetSourceFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsSourceReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetSourceReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsSystemGeneratedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetSystemGeneratedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsAmountInIntlCurrencyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetAmountInIntlCurrencyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsIchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetIchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsKeyMinistryKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetKeyMinistryKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.JournalNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.TransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.PrimaryAccountCode">
            This identifies the account the financial transaction must be stored against [NOT USED]
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.CostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.PrimaryCostCentreCode">
            This identifies which cost centre an account is applied to [NOT USED]
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.TransactionDate">
            Date the transaction took place
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.TransactionAmount">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.AmountInBaseCurrency">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.AnalysisIndicator">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.ReconciledStatus">
            shows if the transaction has been reconciled or not
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.Narrative">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.DebitCreditIndicator">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.TransactionStatus">
            Has a transaction been posted yet
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.HeaderNumber">
            The header (eg, cashbook #) that the transaction is associated with. [NOT USED]
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.DetailNumber">
            The detail (within the header) that the transaction is associated with. [NOT USED]
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SubType">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.ToIltFlag">
            Indicates whether the ILT transaction has been transferred to transaction for ILT file.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SourceFlag">
            To flag a transaction as having come from a source ledger and been processed in an ilt processing centre
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.Reference">
            Reference number/code for the transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SourceReference">
            Transaction key which initiated an ILT transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.SystemGenerated">
            Was this transaction generated automatically by the system?
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.AmountInIntlCurrency">
            The transaction amount in the second base currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.IchNumber">
            identifes the ICH process number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.KeyMinistryKey">
            Key ministry to which this transaction applies (just for fund transfers)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransactionRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable">
            Analysis information entered by the user for a general ledger transaction.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnJournalNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnAnalysisTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnAnalysisAttributeValueId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnJournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnCostCentreCode">
            Cost Centre to which the attribute relates
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnAnalysisTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnAnalysisAttributeValue">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetJournalNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetJournalNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetAnalysisTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetAnalysisTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetAnalysisAttributeValueDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetAnalysisAttributeValueLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow">
            Analysis information entered by the user for a general ledger transaction.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsJournalNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetJournalNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsAnalysisTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetAnalysisTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsAnalysisAttributeValueNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetAnalysisAttributeValueNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.JournalNumber">
            Identifies a journal within a batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.TransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.CostCentreCode">
            Cost Centre to which the attribute relates
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.AnalysisTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.AnalysisAttributeValue">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ATransAnalAttribRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable">
            Lists the suspense accounts of each ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnSuspenseAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnSuspenseAccountCode">
            This identifies an account which will be treated as a suspense account.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetSuspenseAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetSuspenseAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow">
            Lists the suspense accounts of each ledger.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.IsSuspenseAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.SetSuspenseAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.SuspenseAccountCode">
            This identifies an account which will be treated as a suspense account.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASuspenseAccountRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable">
            Transaction types which have special processing. Eg. Allocation, Reallocation, Gift, Revaluation.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnSubSystemCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnTransactionTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnTransactionTypeDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnSpecTransProcessToCallId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnSpecTransUndoProcessId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnSubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnTransactionTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnTransactionTypeDescription">
            This is a short description which is 32 charcters long
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnSpecTransProcessToCall">
            The filename of the process to call
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnSpecTransUndoProcess">
            Process to call to undo the work of the special transaction process, if needed
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetSubSystemCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetSubSystemCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetTransactionTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetTransactionTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetTransactionTypeDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetTransactionTypeDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetSpecTransProcessToCallDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetSpecTransProcessToCallLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetSpecTransUndoProcessDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetSpecTransUndoProcessLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow">
            Transaction types which have special processing. Eg. Allocation, Reallocation, Gift, Revaluation.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.IsSubSystemCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SetSubSystemCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.IsTransactionTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SetTransactionTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.IsTransactionTypeDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SetTransactionTypeDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.IsSpecTransProcessToCallNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SetSpecTransProcessToCallNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.IsSpecTransUndoProcessNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SetSpecTransUndoProcessNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.TransactionTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.TransactionTypeDescription">
            This is a short description which is 32 charcters long
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SpecTransProcessToCall">
            The filename of the process to call
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.SpecTransUndoProcess">
            Process to call to undo the work of the special transaction process, if needed
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASpecialTransTypeRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable">
            Shows which systems are interfaced (have been added) to each general ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnSubSystemCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnSetUpCompleteId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnSubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnSetUpComplete">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetSubSystemCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetSubSystemCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetSetUpCompleteDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetSetUpCompleteLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow">
            Shows which systems are interfaced (have been added) to each general ledger.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.IsSubSystemCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.SetSubSystemCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.IsSetUpCompleteNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.SetSetUpCompleteNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.SubSystemCode">
            Defines a sub system of accounts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.SetUpComplete">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ASystemInterfaceRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable">
            Describes what is to be displayed for a currency and language combination when displaying the amount as text.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnLanguageCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnUnitLabelSingularId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnUnitLabelPluralId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnSpecialCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnDecimalOptionsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnDecimalLabelSingularId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnDecimalLabelPluralId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnCurrencyCode">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnLanguageCode">
            This is the code used to identify a language.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnUnitLabelSingular">
            The currency unit label when the amount is 1
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnUnitLabelPlural">
            The currency unit label when the amount is &gt; 1
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnSpecialCode">
            This is needed to determine the gender in some languages.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnDecimalOptions">
            Describes what to do with the decimal when representing it as text.  Not to display, display as text or as a numeric
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnDecimalLabelSingular">
            The currency decimal label when the amount is 1
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnDecimalLabelPlural">
            The currency decimal label when the amount is &gt; 1
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetLanguageCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetLanguageCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetUnitLabelSingularDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetUnitLabelSingularLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetUnitLabelPluralDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetUnitLabelPluralLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetSpecialCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetSpecialCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetDecimalOptionsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetDecimalOptionsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetDecimalLabelSingularDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetDecimalLabelSingularLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetDecimalLabelPluralDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetDecimalLabelPluralLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow">
            Describes what is to be displayed for a currency and language combination when displaying the amount as text.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsLanguageCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetLanguageCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsUnitLabelSingularNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetUnitLabelSingularNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsUnitLabelPluralNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetUnitLabelPluralNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsSpecialCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetSpecialCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsDecimalOptionsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetDecimalOptionsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsDecimalLabelSingularNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetDecimalLabelSingularNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsDecimalLabelPluralNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetDecimalLabelPluralNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.CurrencyCode">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.LanguageCode">
            This is the code used to identify a language.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.UnitLabelSingular">
            The currency unit label when the amount is 1
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.UnitLabelPlural">
            The currency unit label when the amount is &gt; 1
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.SpecialCode">
            This is needed to determine the gender in some languages.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.DecimalOptions">
            Describes what to do with the decimal when representing it as text.  Not to display, display as text or as a numeric
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.DecimalLabelSingular">
            The currency decimal label when the amount is 1
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.DecimalLabelPlural">
            The currency decimal label when the amount is &gt; 1
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.ACurrencyLanguageRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable">
            Lookup table for Key Focus Areas
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnKeyFocusAreaId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnKeyFocusAreaCommentId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnKeyFocusArea">
            Name of Key Focus Area
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnKeyFocusAreaComment">
            Comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetKeyFocusAreaDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetKeyFocusAreaLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetKeyFocusAreaCommentDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetKeyFocusAreaCommentLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow">
            Lookup table for Key Focus Areas
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.IsKeyFocusAreaNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.SetKeyFocusAreaNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.IsKeyFocusAreaCommentNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.SetKeyFocusAreaCommentNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.KeyFocusArea">
            Name of Key Focus Area
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.KeyFocusAreaComment">
            Comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Account.Data.AKeyFocusAreaRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable">
            This table defines the concept of a supplier in the AP system and is the centre of the AP system.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnPartnerKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnPreferredScreenDisplayId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultBankAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnPaymentTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultApAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultCreditTermsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultDiscountPercentageId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultDiscountDaysId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnSupplierTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultExpAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultCostCentreId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnPartnerKey">
            Reference to the partner key for this supplier
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnPreferredScreenDisplay">
            Number of months to display invoices and credit notes
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultBankAccount">
            Reference to default bank account to use to pay supplier with.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnPaymentType">
            The default type of payment to use when paying this supplier.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnCurrencyCode">
            The currency code to use for this supplier.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultApAccount">
            The default AP Account to use when paying this supplier.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultCreditTerms">
            Default credit terms to use for invoices from this supplier.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultDiscountPercentage">
            Default percentage discount to receive for early payments.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultDiscountDays">
            Default number of days in which the discount percentage has effect.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnSupplierType">
            What type of supplier this is - normal, credit card, maybe something else.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultExpAccount">
            Reference to the default expense Account to use for invoice details.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDefaultCostCentre">
            Reference to the default cost centre to use for invoice details.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetPartnerKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetPartnerKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetPreferredScreenDisplayDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetPreferredScreenDisplayLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultBankAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultBankAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetPaymentTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetPaymentTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultApAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultApAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultCreditTermsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultCreditTermsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultDiscountPercentageDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultDiscountPercentageLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultDiscountDaysDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultDiscountDaysLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetSupplierTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetSupplierTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultExpAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultExpAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultCostCentreDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDefaultCostCentreLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow">
            This table defines the concept of a supplier in the AP system and is the centre of the AP system.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsPartnerKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetPartnerKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsPreferredScreenDisplayNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetPreferredScreenDisplayNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsDefaultBankAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetDefaultBankAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsPaymentTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetPaymentTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsDefaultApAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetDefaultApAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsDefaultCreditTermsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetDefaultCreditTermsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsDefaultDiscountPercentageNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetDefaultDiscountPercentageNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsDefaultDiscountDaysNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetDefaultDiscountDaysNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsSupplierTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetSupplierTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsDefaultExpAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetDefaultExpAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsDefaultCostCentreNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetDefaultCostCentreNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.PartnerKey">
            Reference to the partner key for this supplier
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.PreferredScreenDisplay">
            Number of months to display invoices and credit notes
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.DefaultBankAccount">
            Reference to default bank account to use to pay supplier with.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.PaymentType">
            The default type of payment to use when paying this supplier.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.CurrencyCode">
            The currency code to use for this supplier.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.DefaultApAccount">
            The default AP Account to use when paying this supplier.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.DefaultCreditTerms">
            Default credit terms to use for invoices from this supplier.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.DefaultDiscountPercentage">
            Default percentage discount to receive for early payments.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.DefaultDiscountDays">
            Default number of days in which the discount percentage has effect.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.SupplierType">
            What type of supplier this is - normal, credit card, maybe something else.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.DefaultExpAccount">
            Reference to the default expense Account to use for invoice details.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.DefaultCostCentre">
            Reference to the default cost centre to use for invoice details.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApSupplierRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable">
            This is either an invoice or a credit note in the Accounts Payable system.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnApNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnPartnerKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnCreditNoteFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDocumentCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDateIssuedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDateEnteredId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnCreditTermsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnTotalAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnExchangeRateToBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDiscountPercentageId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDiscountDaysId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnApAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnLastDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDocumentStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnLedgerNumber">
            Reference to the ledger for this invoice.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnApNumber">
            A unique key (together with the ledger number) to identify this document.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnPartnerKey">
            Reference to the supplier that sent this invoice.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnCreditNoteFlag">
            A flag to indicate if this document is an invoice or a credit note.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDocumentCode">
            The code given on the document itself (be it invoice or credit note). This will have to be unique for each supplier.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnReference">
            Some kind of other reference needed.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDateIssued">
            The date when this document was issued.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDateEntered">
            The date when this document was entered into the system.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnCreditTerms">
            Credit terms allowed for this invoice.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnTotalAmount">
            The total amount of money that this document is worth.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnExchangeRateToBase">
            The exchange rate to the base currency at the time that the document was issued.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDiscountPercentage">
            The percentage discount you get for early payment of this document in the case that it is an invoice.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDiscountDays">
            The number of days that the discount is valid for (0 for none).
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnApAccount">
            Reference to the AP Account to debit/credit when posting/paying the document.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnLastDetailNumber">
            The number of the last item for this document. This is used simply to quickly get the next number if items are added.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDocumentStatus">
            The current status of the invoice. The value can (for now) be one of: OPEN, APPROVED, POSTED, PARTPAID, or PAID.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetApNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetApNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetPartnerKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetPartnerKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetCreditNoteFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetCreditNoteFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDocumentCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDocumentCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDateIssuedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDateIssuedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDateEnteredDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDateEnteredLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetCreditTermsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetCreditTermsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetTotalAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetTotalAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetExchangeRateToBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetExchangeRateToBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDiscountPercentageDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDiscountPercentageLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDiscountDaysDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDiscountDaysLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetApAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetApAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetLastDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetLastDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDocumentStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDocumentStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow">
            This is either an invoice or a credit note in the Accounts Payable system.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsApNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetApNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsPartnerKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetPartnerKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsCreditNoteFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetCreditNoteFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsDocumentCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetDocumentCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsDateIssuedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetDateIssuedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsDateEnteredNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetDateEnteredNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsCreditTermsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetCreditTermsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsTotalAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetTotalAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsExchangeRateToBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetExchangeRateToBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsDiscountPercentageNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetDiscountPercentageNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsDiscountDaysNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetDiscountDaysNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsApAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetApAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsLastDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetLastDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsDocumentStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetDocumentStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.LedgerNumber">
            Reference to the ledger for this invoice.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.ApNumber">
            A unique key (together with the ledger number) to identify this document.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.PartnerKey">
            Reference to the supplier that sent this invoice.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.CreditNoteFlag">
            A flag to indicate if this document is an invoice or a credit note.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.DocumentCode">
            The code given on the document itself (be it invoice or credit note). This will have to be unique for each supplier.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.Reference">
            Some kind of other reference needed.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.DateIssued">
            The date when this document was issued.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.DateEntered">
            The date when this document was entered into the system.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.CreditTerms">
            Credit terms allowed for this invoice.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.TotalAmount">
            The total amount of money that this document is worth.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.ExchangeRateToBase">
            The exchange rate to the base currency at the time that the document was issued.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.DiscountPercentage">
            The percentage discount you get for early payment of this document in the case that it is an invoice.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.DiscountDays">
            The number of days that the discount is valid for (0 for none).
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.ApAccount">
            Reference to the AP Account to debit/credit when posting/paying the document.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.LastDetailNumber">
            The number of the last item for this document. This is used simply to quickly get the next number if items are added.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.DocumentStatus">
            The current status of the invoice. The value can (for now) be one of: OPEN, APPROVED, POSTED, PARTPAID, or PAID.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable">
            This table receives a new entry when a credit note is applied to an invoice. Since the invoices and credit notes share the same table, we need a way to link the two, and this is the role of this table.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnCreditNoteNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnInvoiceNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnAppliedDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnLedgerNumber">
            Reference to the ledger number.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnCreditNoteNumber">
            Reference to the credit note.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnInvoiceNumber">
            Reference to the invoice.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnAppliedDate">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetCreditNoteNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetCreditNoteNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetInvoiceNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetInvoiceNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetAppliedDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetAppliedDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow">
            This table receives a new entry when a credit note is applied to an invoice. Since the invoices and credit notes share the same table, we need a way to link the two, and this is the role of this table.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.IsCreditNoteNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.SetCreditNoteNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.IsInvoiceNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.SetInvoiceNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.IsAppliedDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.SetAppliedDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.LedgerNumber">
            Reference to the ledger number.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.CreditNoteNumber">
            Reference to the credit note.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.InvoiceNumber">
            Reference to the invoice.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.AppliedDate">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.ACrdtNoteInvoiceLinkRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable">
            An invoice or credit note consists out of several items, or details. This table contains all these details.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnApNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnDetailApprovedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnItemRefId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnNarrativeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnApprovalDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnLedgerNumber">
            Reference to the ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnApNumber">
            Reference to the document
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnDetailNumber">
            A unique number for this detail for its document.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnDetailApproved">
            Indicates if this detail has been approved or not.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnCostCentreCode">
            Reference to the cost centre to use for this detail.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnAccountCode">
            Reference to the account to use for this detail
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnItemRef">
            Some other reference to the item.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnNarrative">
            A narrative about what this is.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnAmount">
            The amount of money this detail is worth.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnApprovalDate">
            The date when this detail was approved.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetApNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetApNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetDetailApprovedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetDetailApprovedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetItemRefDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetItemRefLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetNarrativeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetNarrativeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetApprovalDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetApprovalDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow">
            An invoice or credit note consists out of several items, or details. This table contains all these details.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsApNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetApNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsDetailApprovedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetDetailApprovedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsItemRefNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetItemRefNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsNarrativeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetNarrativeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsApprovalDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetApprovalDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.LedgerNumber">
            Reference to the ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.ApNumber">
            Reference to the document
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.DetailNumber">
            A unique number for this detail for its document.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.DetailApproved">
            Indicates if this detail has been approved or not.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.CostCentreCode">
            Reference to the cost centre to use for this detail.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.AccountCode">
            Reference to the account to use for this detail
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.ItemRef">
            Some other reference to the item.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.Narrative">
            A narrative about what this is.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.Amount">
            The amount of money this detail is worth.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.ApprovalDate">
            The date when this detail was approved.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentDetailRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable">
            Records all payments that have been made against an accounts payable detail.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnPaymentNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnExchangeRateToBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnPaymentDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnUserIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnMethodOfPaymentId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnBankAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnPaymentNumber">
            Unique number to identify each payment batch.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnAmount">
            The amount of money that was paid
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnExchangeRateToBase">
            The exchange rate to the base currency at the time of payment.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnPaymentDate">
            Date that the payment for an accounts payable was made.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnUserId">
            This is the system user id of the person who made the payment.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnMethodOfPayment">
            Method that was used to make the payment - cheque, cash, ep, credit card, etc.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnReference">
            The source or reference for the accounts payable payment.  This could be a cheque number.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnBankAccount">
            Bank account from which to make the payment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetPaymentNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetPaymentNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetExchangeRateToBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetExchangeRateToBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetPaymentDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetPaymentDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetUserIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetUserIdLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetMethodOfPaymentDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetMethodOfPaymentLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetBankAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetBankAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow">
            Records all payments that have been made against an accounts payable detail.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsPaymentNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetPaymentNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsExchangeRateToBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetExchangeRateToBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsPaymentDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetPaymentDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsUserIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetUserIdNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsMethodOfPaymentNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetMethodOfPaymentNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsBankAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetBankAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.PaymentNumber">
            Unique number to identify each payment batch.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.Amount">
            The amount of money that was paid
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.ExchangeRateToBase">
            The exchange rate to the base currency at the time of payment.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.PaymentDate">
            Date that the payment for an accounts payable was made.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.UserId">
            This is the system user id of the person who made the payment.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.MethodOfPayment">
            Method that was used to make the payment - cheque, cash, ep, credit card, etc.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.Reference">
            The source or reference for the accounts payable payment.  This could be a cheque number.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.BankAccount">
            Bank account from which to make the payment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApPaymentRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable">
            This table links the different payments to actual invoices and credit notes.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnApNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnPaymentNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnLedgerNumber">
            The ledger that the attribute value is associated with.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnApNumber">
            Accounts Payable Sequence Number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnPaymentNumber">
            Unique number to identify each payment batch.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnAmount">
            The amount of money that was paid
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetApNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetApNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetPaymentNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetPaymentNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow">
            This table links the different payments to actual invoices and credit notes.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.IsApNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.SetApNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.IsPaymentNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.SetPaymentNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.IsAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.SetAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.LedgerNumber">
            The ledger that the attribute value is associated with.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.ApNumber">
            Accounts Payable Sequence Number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.PaymentNumber">
            Unique number to identify each payment batch.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.Amount">
            The amount of money that was paid
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApDocumentPaymentRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable">
            This table acts as a queue for electronic payments. If an invoice is paid electronically, the payment is added to this table. A EP program will go through this table paying all entries to GL and moving them to the a_ap_payment table.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnPaymentNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnUserIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnBankAccountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnPaymentNumber">
            Unique number to identify each payment batch.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnAmount">
            The amount of money that was paid
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnUserId">
            This is the system user id of the person who made the payment.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnReference">
            The source or reference for the accounts payable payment.  This could be a cheque number.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnBankAccount">
            Bank account from which to make the payment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetPaymentNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetPaymentNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetUserIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetUserIdLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetBankAccountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetBankAccountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow">
            This table acts as a queue for electronic payments. If an invoice is paid electronically, the payment is added to this table. A EP program will go through this table paying all entries to GL and moving them to the a_ap_payment table.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsPaymentNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetPaymentNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsUserIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetUserIdNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsBankAccountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetBankAccountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.PaymentNumber">
            Unique number to identify each payment batch.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.Amount">
            The amount of money that was paid
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.UserId">
            This is the system user id of the person who made the payment.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.Reference">
            The source or reference for the accounts payable payment.  This could be a cheque number.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.BankAccount">
            Bank account from which to make the payment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpPaymentRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable">
            This table links the different EP payments to actual invoices and credit notes.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnApNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnPaymentNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnLedgerNumber">
            The ledger that the attribute value is associated with.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnApNumber">
            Accounts Payable Sequence Number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnPaymentNumber">
            Unique number to identify each payment batch.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnAmount">
            The amount of money that was paid
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetApNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetApNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetPaymentNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetPaymentNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow">
            This table links the different EP payments to actual invoices and credit notes.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.IsApNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.SetApNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.IsPaymentNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.SetPaymentNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.IsAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.SetAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.LedgerNumber">
            The ledger that the attribute value is associated with.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.ApNumber">
            Accounts Payable Sequence Number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.PaymentNumber">
            Unique number to identify each payment batch.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.Amount">
            The amount of money that was paid
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AEpDocumentPaymentRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable">
            Analysis Attributes applied to an AP for posting to the GL.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnApNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnAnalysisTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnAnalysisAttributeValueId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnLedgerNumber">
            The ledger that the attribute value is associated with.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnApNumber">
            Accounts Payable Sequence Number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnDetailNumber">
            The detail number within the invoice/ accounts payable.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnAnalysisTypeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnAnalysisAttributeValue">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetApNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetApNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetAnalysisTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetAnalysisTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetAnalysisAttributeValueDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetAnalysisAttributeValueLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow">
            Analysis Attributes applied to an AP for posting to the GL.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsApNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetApNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsAnalysisTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetAnalysisTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsAnalysisAttributeValueNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetAnalysisAttributeValueNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.LedgerNumber">
            The ledger that the attribute value is associated with.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.ApNumber">
            Accounts Payable Sequence Number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.DetailNumber">
            The detail number within the invoice/ accounts payable.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.AnalysisTypeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.AnalysisAttributeValue">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AApAnalAttribRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable">
            used for invoicing
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnTaxTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnTaxTypeDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnTaxTypeCode">
            This is whether it is GST, VAT
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnTaxTypeDescription">
            This is a short description which is 32 characters long
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetTaxTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetTaxTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetTaxTypeDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetTaxTypeDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow">
            used for invoicing
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.IsTaxTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.SetTaxTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.IsTaxTypeDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.SetTaxTypeDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.TaxTypeCode">
            This is whether it is GST, VAT
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.TaxTypeDescription">
            This is a short description which is 32 characters long
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTypeRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable">
            This is used by the invoicing
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnTaxTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnTaxRateCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnTaxValidFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnTaxRateDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnTaxRateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnActiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnTaxTypeCode">
            The tax type is always the same, e.g. VAT
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnTaxRateCode">
            this describes whether it is e.g. the standard, reduced or zero rate of VAT
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnTaxValidFrom">
            this describes when this particular percentage rate has become valid by law
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnTaxRateDescription">
            This is a short description which is 32 charcters long
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnTaxRate">
            Tax rate
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnActive">
            flag that prevents this rate from being used, e.g. if it has been replaced by another rate
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTaxTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTaxTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTaxRateCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTaxRateCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTaxValidFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTaxValidFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTaxRateDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTaxRateDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTaxRateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetTaxRateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetActiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetActiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow">
            This is used by the invoicing
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsTaxTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetTaxTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsTaxRateCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetTaxRateCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsTaxValidFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetTaxValidFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsTaxRateDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetTaxRateDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsTaxRateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetTaxRateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsActiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetActiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.TaxTypeCode">
            The tax type is always the same, e.g. VAT
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.TaxRateCode">
            this describes whether it is e.g. the standard, reduced or zero rate of VAT
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.TaxValidFrom">
            this describes when this particular percentage rate has become valid by law
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.TaxRateDescription">
            This is a short description which is 32 charcters long
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.TaxRate">
            Tax rate
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.Active">
            flag that prevents this rate from being used, e.g. if it has been replaced by another rate
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.ATaxTableRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable">
            there are several categories that are can use invoicing: catering, hospitality, store and fees
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnArCategoryCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnArDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnArLocalDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnArCategoryCode">
            categories help to specify certain discounts and group articles etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnArDescription">
            description of this category
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnArLocalDescription">
            description of this category in the local language
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetArCategoryCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetArCategoryCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetArDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetArDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetArLocalDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetArLocalDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow">
            there are several categories that are can use invoicing: catering, hospitality, store and fees
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.IsArCategoryCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.SetArCategoryCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.IsArDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.SetArDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.IsArLocalDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.SetArLocalDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.ArCategoryCode">
            categories help to specify certain discounts and group articles etc
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.ArDescription">
            description of this category
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.ArLocalDescription">
            description of this category in the local language
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArCategoryRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable">
            defines an item that can be sold or a service that can be charged for; this can be used for catering, hospitality, store and fees; it can describe a specific book, or a group of equally priced books
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnArArticleCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnArCategoryCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnTaxTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnArSpecificArticleId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnArDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnArLocalDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnArArticleCode">
            code that uniquely identifies the item; can also be a code of a group of equally priced items
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnArCategoryCode">
            this article belongs to a certain category (catering, hospitality, store, fees)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnTaxTypeCode">
            this article falls into a special tax/VAT category
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnArSpecificArticle">
            describes whether this describes a specific item, e.g. book, or a group of equally priced items
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnArDescription">
            description of this article
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnArLocalDescription">
            description of this article in the local language
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetArArticleCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetArArticleCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetArCategoryCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetArCategoryCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetTaxTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetTaxTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetArSpecificArticleDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetArSpecificArticleLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetArDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetArDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetArLocalDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetArLocalDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow">
            defines an item that can be sold or a service that can be charged for; this can be used for catering, hospitality, store and fees; it can describe a specific book, or a group of equally priced books
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsArArticleCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetArArticleCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsArCategoryCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetArCategoryCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsTaxTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetTaxTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsArSpecificArticleNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetArSpecificArticleNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsArDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetArDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsArLocalDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetArLocalDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.ArArticleCode">
            code that uniquely identifies the item; can also be a code of a group of equally priced items
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.ArCategoryCode">
            this article belongs to a certain category (catering, hospitality, store, fees)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.TaxTypeCode">
            this article falls into a special tax/VAT category
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.ArSpecificArticle">
            describes whether this describes a specific item, e.g. book, or a group of equally priced items
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.ArDescription">
            description of this article
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.ArLocalDescription">
            description of this article in the local language
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticleRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable">
            assign a price to an article, which can be updated by time
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnArArticleCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnArDateValidFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnArAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnArArticleCode">
            code that identifies the item to be sold or service to be charged
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnArDateValidFrom">
            date from which this price is valid
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnArAmount">
            the value of the item in base currency
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnCurrencyCode">
            the currency in which the price is given
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetArArticleCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetArArticleCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetArDateValidFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetArDateValidFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetArAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetArAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow">
            assign a price to an article, which can be updated by time
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.IsArArticleCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.SetArArticleCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.IsArDateValidFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.SetArDateValidFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.IsArAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.SetArAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.IsCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.SetCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.ArArticleCode">
            code that identifies the item to be sold or service to be charged
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.ArDateValidFrom">
            date from which this price is valid
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.ArAmount">
            the value of the item in base currency
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.CurrencyCode">
            the currency in which the price is given
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArArticlePriceRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable">
            defines a discount that depends on other conditions or can just be assigned to an invoice or article
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArDiscountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArDateValidFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArAdhocId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnActiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArDiscountPercentageId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArDiscountAbsoluteId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArAbsoluteAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArNumberOfItemsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArMinimumNumberOfItemsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArNumberOfNightsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArMinimumNumberOfNightsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArWholeRoomId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArChildrenId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArEarlyBookingDaysId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArEarlyPaymentDaysId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArArticleCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnPartnerTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArDiscountCode">
            code that identifies the discount
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArDateValidFrom">
            date from which this discount is valid
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArAdhoc">
            this discount has only be created on the fly and should not be reusable elsewhere
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnActive">
            flag that prevents this discount from being used, to avoid too long lists in comboboxes etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArDiscountPercentage">
            discount percentage; can be negative for expensive rooms etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArDiscountAbsolute">
            the absolute discount that is substracted from the article price; can be negative as well
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArAbsoluteAmount">
            the absolute amount that is charged if this discount applies; e.g. 3 books for 5 Pound
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnCurrencyCode">
            the currency in which the absolute discount or amount is given
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArNumberOfItems">
            this discount applies for this number of items that are bought at the same time
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArMinimumNumberOfItems">
            this discount applies for all of the items if at least this number of items is bought at the same time
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArNumberOfNights">
            this discount applies for this number of nights that the individual or group stays; this is needed because 100 people staying for one night do cost more than 50 people staying for 2 nights
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArMinimumNumberOfNights">
            this discount applies for all of the nights if the individual or group stays at least for the given amount of nights; this is needed because 100 people staying for one night do cost more than 50 people staying for 2 nights
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArWholeRoom">
            this discount applies when a whole room is booked rather than just a bed
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArChildren">
            this discount applies for a children (e.g. meals)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArEarlyBookingDays">
            this discount applies when the booking has been done so many days before the stay (using ph_booking.ph_confirmed_d and ph_in_d)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArEarlyPaymentDays">
            this discount applies when the payment has been received within the given number of days after the invoice has been charged
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnArArticleCode">
            this discount applies if the article code matches
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnPartnerTypeCode">
            this discounts applies to partners of this type
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArDiscountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArDiscountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArDateValidFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArDateValidFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArAdhocDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArAdhocLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetActiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetActiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArDiscountPercentageDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArDiscountPercentageLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArDiscountAbsoluteDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArDiscountAbsoluteLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArAbsoluteAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArAbsoluteAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArNumberOfItemsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArNumberOfItemsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArMinimumNumberOfItemsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArMinimumNumberOfItemsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArNumberOfNightsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArNumberOfNightsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArMinimumNumberOfNightsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArMinimumNumberOfNightsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArWholeRoomDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArWholeRoomLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArChildrenDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArChildrenLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArEarlyBookingDaysDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArEarlyBookingDaysLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArEarlyPaymentDaysDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArEarlyPaymentDaysLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArArticleCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetArArticleCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetPartnerTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetPartnerTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow">
            defines a discount that depends on other conditions or can just be assigned to an invoice or article
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArDiscountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArDiscountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArDateValidFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArDateValidFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArAdhocNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArAdhocNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsActiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetActiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArDiscountPercentageNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArDiscountPercentageNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArDiscountAbsoluteNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArDiscountAbsoluteNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArAbsoluteAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArAbsoluteAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArNumberOfItemsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArNumberOfItemsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArMinimumNumberOfItemsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArMinimumNumberOfItemsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArNumberOfNightsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArNumberOfNightsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArMinimumNumberOfNightsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArMinimumNumberOfNightsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArWholeRoomNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArWholeRoomNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArChildrenNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArChildrenNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArEarlyBookingDaysNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArEarlyBookingDaysNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArEarlyPaymentDaysNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArEarlyPaymentDaysNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsArArticleCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetArArticleCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsPartnerTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetPartnerTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArDiscountCode">
            code that identifies the discount
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArDateValidFrom">
            date from which this discount is valid
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArAdhoc">
            this discount has only be created on the fly and should not be reusable elsewhere
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.Active">
            flag that prevents this discount from being used, to avoid too long lists in comboboxes etc
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArDiscountPercentage">
            discount percentage; can be negative for expensive rooms etc
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArDiscountAbsolute">
            the absolute discount that is substracted from the article price; can be negative as well
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArAbsoluteAmount">
            the absolute amount that is charged if this discount applies; e.g. 3 books for 5 Pound
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.CurrencyCode">
            the currency in which the absolute discount or amount is given
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArNumberOfItems">
            this discount applies for this number of items that are bought at the same time
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArMinimumNumberOfItems">
            this discount applies for all of the items if at least this number of items is bought at the same time
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArNumberOfNights">
            this discount applies for this number of nights that the individual or group stays; this is needed because 100 people staying for one night do cost more than 50 people staying for 2 nights
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArMinimumNumberOfNights">
            this discount applies for all of the nights if the individual or group stays at least for the given amount of nights; this is needed because 100 people staying for one night do cost more than 50 people staying for 2 nights
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArWholeRoom">
            this discount applies when a whole room is booked rather than just a bed
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArChildren">
            this discount applies for a children (e.g. meals)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArEarlyBookingDays">
            this discount applies when the booking has been done so many days before the stay (using ph_booking.ph_confirmed_d and ph_in_d)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArEarlyPaymentDays">
            this discount applies when the payment has been received within the given number of days after the invoice has been charged
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ArArticleCode">
            this discount applies if the article code matches
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.PartnerTypeCode">
            this discounts applies to partners of this type
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable">
            defines which discount applies to which category to limit the options in the UI
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnArCategoryCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnArDiscountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnArDateValidFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnArCategoryCode">
            refers to a certain category (catering, hospitality, store, fees)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnArDiscountCode">
            code that identifies the discount
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnArDateValidFrom">
            date is only required for foreign key; this applies to all of that discount code; therefore the primary key of this table does not include the date
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetArCategoryCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetArCategoryCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetArDiscountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetArDiscountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetArDateValidFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetArDateValidFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow">
            defines which discount applies to which category to limit the options in the UI
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.IsArCategoryCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.SetArCategoryCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.IsArDiscountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.SetArDiscountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.IsArDateValidFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.SetArDateValidFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.ArCategoryCode">
            refers to a certain category (catering, hospitality, store, fees)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.ArDiscountCode">
            code that identifies the discount
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.ArDateValidFrom">
            date is only required for foreign key; this applies to all of that discount code; therefore the primary key of this table does not include the date
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDiscountPerCategoryRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable">
            defines which discounts should be applied by default during a certain event or time period to articles from a certain category
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnArCategoryCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnArDiscountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnArDiscountDateValidFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnArDateValidFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnArDateValidToId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnArCategoryCode">
            refers to a certain category (catering, hospitality, store, fees)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnArDiscountCode">
            code that identifies the discount
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnArDiscountDateValidFrom">
            this clearly specifies which version of the discount is meant
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnArDateValidFrom">
            this default discount is only applied during this time period
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnArDateValidTo">
            this default discount is only applied during this time period; can be null for ongoing default discounts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetArCategoryCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetArCategoryCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetArDiscountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetArDiscountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetArDiscountDateValidFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetArDiscountDateValidFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetArDateValidFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetArDateValidFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetArDateValidToDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetArDateValidToLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow">
            defines which discounts should be applied by default during a certain event or time period to articles from a certain category
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.IsArCategoryCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.SetArCategoryCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.IsArDiscountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.SetArDiscountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.IsArDiscountDateValidFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.SetArDiscountDateValidFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.IsArDateValidFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.SetArDateValidFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.IsArDateValidToNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.SetArDateValidToNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.ArCategoryCode">
            refers to a certain category (catering, hospitality, store, fees)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.ArDiscountCode">
            code that identifies the discount
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.ArDiscountDateValidFrom">
            this clearly specifies which version of the discount is meant
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.ArDateValidFrom">
            this default discount is only applied during this time period
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.ArDateValidTo">
            this default discount is only applied during this time period; can be null for ongoing default discounts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArDefaultDiscountRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable">
            the invoice (which is also an offer at a certain stage)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnPartnerKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnDateEffectiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnOfferId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnTaxingId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnSpecialTaxTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnSpecialTaxRateCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnSpecialTaxValidFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnTotalAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnKey">
            Key to uniquely identify invoice
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnStatus">
            an invoice can have these states: OFFER, CHARGED, PARTIALLYPAID, PAID
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnPartnerKey">
            This is the partner who has to pay the bill; can be null for cash payments; could also be another field
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnDateEffective">
            this is the date when the invoice was charged
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnOffer">
            refers to the offer that was created for this invoice; it is basically an archived copy of the invoice, and the invoice might actually be different from the offer (e.g. hospitality: different number of people, etc.); table ph_booking always refers to the invoice, and the invoice refers to the offer; there is no requirement for an offer to exist, it can be null
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnTaxing">
            this defines whether no tax is applied to this invoice (NONE), or if a SPECIAL tax is applied, or if the DEFAULT tax defined for each article; this should work around issues of selling to businesses or customers abroad
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnSpecialTaxTypeCode">
            if a_taxing_c has the value SPECIAL, then this tax applies (defined by tax type code, tax rate code, and date valid from
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnSpecialTaxRateCode">
            this describes whether it is e.g. the standard, reduced or zero rate of VAT
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnSpecialTaxValidFrom">
            this describes when this particular percentage rate has become valid by law
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnTotalAmount">
            The total amount of money that this invoice is worth; this includes all discounts, even the early payment discount; if the early payment discount does not apply anymore at the time of payment, this total amount needs to be updated
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnCurrencyCode">
            the currency of the total amount
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetPartnerKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetPartnerKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetDateEffectiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetDateEffectiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetOfferDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetOfferLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetTaxingDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetTaxingLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetSpecialTaxTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetSpecialTaxTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetSpecialTaxRateCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetSpecialTaxRateCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetSpecialTaxValidFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetSpecialTaxValidFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetTotalAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetTotalAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow">
            the invoice (which is also an offer at a certain stage)
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsPartnerKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetPartnerKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsDateEffectiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetDateEffectiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsOfferNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetOfferNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsTaxingNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetTaxingNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsSpecialTaxTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetSpecialTaxTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsSpecialTaxRateCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetSpecialTaxRateCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsSpecialTaxValidFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetSpecialTaxValidFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsTotalAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetTotalAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.Key">
            Key to uniquely identify invoice
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.Status">
            an invoice can have these states: OFFER, CHARGED, PARTIALLYPAID, PAID
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.PartnerKey">
            This is the partner who has to pay the bill; can be null for cash payments; could also be another field
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.DateEffective">
            this is the date when the invoice was charged
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.Offer">
            refers to the offer that was created for this invoice; it is basically an archived copy of the invoice, and the invoice might actually be different from the offer (e.g. hospitality: different number of people, etc.); table ph_booking always refers to the invoice, and the invoice refers to the offer; there is no requirement for an offer to exist, it can be null
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.Taxing">
            this defines whether no tax is applied to this invoice (NONE), or if a SPECIAL tax is applied, or if the DEFAULT tax defined for each article; this should work around issues of selling to businesses or customers abroad
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SpecialTaxTypeCode">
            if a_taxing_c has the value SPECIAL, then this tax applies (defined by tax type code, tax rate code, and date valid from
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SpecialTaxRateCode">
            this describes whether it is e.g. the standard, reduced or zero rate of VAT
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.SpecialTaxValidFrom">
            this describes when this particular percentage rate has become valid by law
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.TotalAmount">
            The total amount of money that this invoice is worth; this includes all discounts, even the early payment discount; if the early payment discount does not apply anymore at the time of payment, this total amount needs to be updated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.CurrencyCode">
            the currency of the total amount
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable">
            an invoice consists of one or more details
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnInvoiceKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnArArticleCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnArReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnArNumberOfItemId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnArArticlePriceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnCalculatedAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnTaxTypeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnTaxRateCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnTaxValidFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnInvoiceKey">
            this invoice detail belongs to the invoice with this key
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnDetailNumber">
            A unique number for this detail for its invoice.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnArArticleCode">
            code that uniquely identifies the item; can also be a code of a group of equally priced items
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnArReference">
            Reference for this invoice detail; for a non specific article that could give more details (e.g. which book of type small book)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnArNumberOfItem">
            defines the number of the article items that is bought
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnArArticlePrice">
            Reference to the price that should be used for this article in this invoice, by date; without discounts, just for single item
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnCalculatedAmount">
            The total amount of money that this invoice detail is worth; includes the discounts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnCurrencyCode">
            the currency of the total amount
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnTaxTypeCode">
            The tax type is always the same, e.g. VAT
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnTaxRateCode">
            this describes whether it is e.g. the standard, reduced or zero rate of VAT
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnTaxValidFrom">
            we need to be able to pick a rate that was valid in the past or will be valid in the future
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetInvoiceKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetInvoiceKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetArArticleCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetArArticleCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetArReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetArReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetArNumberOfItemDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetArNumberOfItemLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetArArticlePriceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetArArticlePriceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetCalculatedAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetCalculatedAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetTaxTypeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetTaxTypeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetTaxRateCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetTaxRateCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetTaxValidFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetTaxValidFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow">
            an invoice consists of one or more details
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsInvoiceKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetInvoiceKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsArArticleCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetArArticleCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsArReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetArReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsArNumberOfItemNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetArNumberOfItemNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsArArticlePriceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetArArticlePriceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsCalculatedAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetCalculatedAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsTaxTypeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetTaxTypeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsTaxRateCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetTaxRateCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsTaxValidFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetTaxValidFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.InvoiceKey">
            this invoice detail belongs to the invoice with this key
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.DetailNumber">
            A unique number for this detail for its invoice.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.ArArticleCode">
            code that uniquely identifies the item; can also be a code of a group of equally priced items
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.ArReference">
            Reference for this invoice detail; for a non specific article that could give more details (e.g. which book of type small book)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.ArNumberOfItem">
            defines the number of the article items that is bought
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.ArArticlePrice">
            Reference to the price that should be used for this article in this invoice, by date; without discounts, just for single item
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.CalculatedAmount">
            The total amount of money that this invoice detail is worth; includes the discounts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.CurrencyCode">
            the currency of the total amount
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.TaxTypeCode">
            The tax type is always the same, e.g. VAT
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.TaxRateCode">
            this describes whether it is e.g. the standard, reduced or zero rate of VAT
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.TaxValidFrom">
            we need to be able to pick a rate that was valid in the past or will be valid in the future
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable">
            defines which discounts apply directly to the invoice rather than the invoice items; this can depend on the customer etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnInvoiceKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnArDiscountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnArDiscountDateValidFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnInvoiceKey">
            Key to uniquely identify invoice
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnArDiscountCode">
            code that identifies the discount
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnArDiscountDateValidFrom">
            this clearly specifies which version of the discount is meant
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetInvoiceKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetInvoiceKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetArDiscountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetArDiscountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetArDiscountDateValidFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetArDiscountDateValidFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow">
            defines which discounts apply directly to the invoice rather than the invoice items; this can depend on the customer etc
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.IsInvoiceKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.SetInvoiceKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.IsArDiscountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.SetArDiscountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.IsArDiscountDateValidFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.SetArDiscountDateValidFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.InvoiceKey">
            Key to uniquely identify invoice
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.ArDiscountCode">
            code that identifies the discount
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.ArDiscountDateValidFrom">
            this clearly specifies which version of the discount is meant
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDiscountRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable">
            defines which discounts apply one invoice item
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnInvoiceKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnArDiscountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnArDiscountDateValidFromId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnInvoiceKey">
            Key to uniquely identify invoice
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnDetailNumber">
            A unique number for this detail for its invoice.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnArDiscountCode">
            code that identifies the discount
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnArDiscountDateValidFrom">
            this clearly specifies which version of the discount is meant
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetInvoiceKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetInvoiceKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetArDiscountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetArDiscountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetArDiscountDateValidFromDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetArDiscountDateValidFromLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow">
            defines which discounts apply one invoice item
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.IsInvoiceKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.SetInvoiceKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.IsArDiscountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.SetArDiscountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.IsArDiscountDateValidFromNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.SetArDiscountDateValidFromNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.InvoiceKey">
            Key to uniquely identify invoice
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.DetailNumber">
            A unique number for this detail for its invoice.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.ArDiscountCode">
            code that identifies the discount
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.ArDiscountDateValidFrom">
            this clearly specifies which version of the discount is meant
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AR.Data.AArInvoiceDetailDiscountRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable">
            Media"" types of money received.  Eg: Cash, Check Credit Card.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnMethodOfPaymentCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnMethodOfPaymentDescId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnMethodOfPaymentTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnProcessToCallId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnSpecialMethodOfPmtId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnActiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnMethodOfPaymentCode">
            This is how the partner paid. EgCash, Cheque etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnMethodOfPaymentDesc">
            This is a short description which is 32 charcters long
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnMethodOfPaymentType">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnProcessToCall">
            The filename of the process to call
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnSpecialMethodOfPmt">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnActive">
            Shows whether this code is active
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetMethodOfPaymentCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetMethodOfPaymentCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetMethodOfPaymentDescDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetMethodOfPaymentDescLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetMethodOfPaymentTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetMethodOfPaymentTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetProcessToCallDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetProcessToCallLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetSpecialMethodOfPmtDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetSpecialMethodOfPmtLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetActiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetActiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow">
            Media"" types of money received.  Eg: Cash, Check Credit Card.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsMethodOfPaymentCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetMethodOfPaymentCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsMethodOfPaymentDescNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetMethodOfPaymentDescNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsMethodOfPaymentTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetMethodOfPaymentTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsProcessToCallNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetProcessToCallNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsSpecialMethodOfPmtNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetSpecialMethodOfPmtNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsActiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetActiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.MethodOfPaymentCode">
            This is how the partner paid. EgCash, Cheque etc
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.MethodOfPaymentDesc">
            This is a short description which is 32 charcters long
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.MethodOfPaymentType">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.ProcessToCall">
            The filename of the process to call
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.SpecialMethodOfPmt">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.Active">
            Shows whether this code is active
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMethodOfPaymentRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable">
            This is used to track a partner's reason for contacting the organisation/sending money. Divided into Motivation Detail codes.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnMotivationGroupCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnMotivationGroupDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnGroupStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnMotivationGroupDescLocalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnRestrictedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnMotivationGroupCode">
            This defines a motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnMotivationGroupDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnGroupStatus">
            Defines whether the motivation group is still in use
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnMotivationGroupDescLocal">
            This is a long description and is 80 characters long in the local language.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnRestricted">
            Indicates whether or not the motivation has restricted access. If it does then the access will be controlled by s_group_motivation
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetMotivationGroupCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetMotivationGroupCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetMotivationGroupDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetMotivationGroupDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetGroupStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetGroupStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetMotivationGroupDescLocalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetMotivationGroupDescLocalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetRestrictedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetRestrictedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow">
            This is used to track a partner's reason for contacting the organisation/sending money. Divided into Motivation Detail codes.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsMotivationGroupCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetMotivationGroupCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsMotivationGroupDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetMotivationGroupDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsGroupStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetGroupStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsMotivationGroupDescLocalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetMotivationGroupDescLocalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsRestrictedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetRestrictedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.MotivationGroupCode">
            This defines a motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.MotivationGroupDescription">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.GroupStatus">
            Defines whether the motivation group is still in use
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.MotivationGroupDescLocal">
            This is a long description and is 80 characters long in the local language.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.Restricted">
            Indicates whether or not the motivation has restricted access. If it does then the access will be controlled by s_group_motivation
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationGroupRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable">
            Used as a subdvision of motivation group. Details of the reason money has been received, where it is going (cost centre and account), and fees to be charged on it.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationGroupCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationDetailCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationDetailAudienceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationDetailDescId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMailingCostId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnBulkRateFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnNextResponseStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnActivatePartnerFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnNumberSentId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnNumberOfResponsesId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnTargetNumberOfResponsesId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnTargetAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnAmountReceivedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnRecipientKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnAutopopdescId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnReceiptId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnTaxDeductableId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationDetailDescLocalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnShortCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnRestrictedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnExportToIntranetId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationGroupCode">
            This defines a motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationDetailCode">
            This defines the motivation detail within a motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationDetailAudience">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationDetailDesc">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnAccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationStatus">
            Defines whether the motivation code is still in use
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMailingCost">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnBulkRateFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnNextResponseStatus">
            This defines what should happen next
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnActivatePartnerFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnNumberSent">
            The number of items sent out in a mailing
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnNumberOfResponses">
            The number of items returned from a mailing
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnTargetNumberOfResponses">
            The target number of items returned from a mailing
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnTargetAmount">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnAmountReceived">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnRecipientKey">
            This is the partner key assigned to each partner. It consists of the ledger id followed by a computer generated six digit number.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnAutopopdesc">
            A flag to automatically populate the description in the gift comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnReceipt">
            Whether receipts should be printed
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnTaxDeductable">
            Whether this gift is tax deductable
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnMotivationDetailDescLocal">
            This is a long description and is 80 characters long in the local language.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnShortCode">
            A short code for the motivation which can then be used on receipts
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnRestricted">
            Indicates whether or not the motivation has restricted access. If it does then the access will be controlled by s_group_motivation
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnExportToIntranet">
            Whether or not gifts with this motivation should be exported to the worldwide Intranet (to help distinguish non-gifts like sales)
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationGroupCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationGroupCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationDetailCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationDetailCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationDetailAudienceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationDetailAudienceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationDetailDescDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationDetailDescLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMailingCostDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMailingCostLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetBulkRateFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetBulkRateFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetNextResponseStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetNextResponseStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetActivatePartnerFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetActivatePartnerFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetNumberSentDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetNumberSentLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetNumberOfResponsesDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetNumberOfResponsesLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetTargetNumberOfResponsesDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetTargetNumberOfResponsesLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetTargetAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetTargetAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetAmountReceivedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetAmountReceivedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetRecipientKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetRecipientKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetAutopopdescDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetAutopopdescLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetReceiptDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetReceiptLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetTaxDeductableDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetTaxDeductableLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationDetailDescLocalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetMotivationDetailDescLocalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetShortCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetShortCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetRestrictedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetRestrictedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetExportToIntranetDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetExportToIntranetLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow">
            Used as a subdvision of motivation group. Details of the reason money has been received, where it is going (cost centre and account), and fees to be charged on it.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsMotivationGroupCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetMotivationGroupCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsMotivationDetailCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetMotivationDetailCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsMotivationDetailAudienceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetMotivationDetailAudienceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsMotivationDetailDescNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetMotivationDetailDescNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsMotivationStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetMotivationStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsMailingCostNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetMailingCostNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsBulkRateFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetBulkRateFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsNextResponseStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetNextResponseStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsActivatePartnerFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetActivatePartnerFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsNumberSentNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetNumberSentNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsNumberOfResponsesNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetNumberOfResponsesNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsTargetNumberOfResponsesNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetTargetNumberOfResponsesNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsTargetAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetTargetAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsAmountReceivedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetAmountReceivedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsRecipientKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetRecipientKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsAutopopdescNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetAutopopdescNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsReceiptNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetReceiptNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsTaxDeductableNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetTaxDeductableNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsMotivationDetailDescLocalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetMotivationDetailDescLocalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsShortCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetShortCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsRestrictedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetRestrictedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsExportToIntranetNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetExportToIntranetNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.MotivationGroupCode">
            This defines a motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.MotivationDetailCode">
            This defines the motivation detail within a motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.MotivationDetailAudience">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.MotivationDetailDesc">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.AccountCode">
            This identifies the account the financial transaction must be stored against
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.CostCentreCode">
            This identifies which cost centre an account is applied to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.MotivationStatus">
            Defines whether the motivation code is still in use
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.MailingCost">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.BulkRateFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.NextResponseStatus">
            This defines what should happen next
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.ActivatePartnerFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.NumberSent">
            The number of items sent out in a mailing
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.NumberOfResponses">
            The number of items returned from a mailing
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.TargetNumberOfResponses">
            The target number of items returned from a mailing
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.TargetAmount">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.AmountReceived">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.RecipientKey">
            This is the partner key assigned to each partner. It consists of the ledger id followed by a computer generated six digit number.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.Autopopdesc">
            A flag to automatically populate the description in the gift comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.Receipt">
            Whether receipts should be printed
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.TaxDeductable">
            Whether this gift is tax deductable
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.MotivationDetailDescLocal">
            This is a long description and is 80 characters long in the local language.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.ShortCode">
            A short code for the motivation which can then be used on receipts
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.Restricted">
            Indicates whether or not the motivation has restricted access. If it does then the access will be controlled by s_group_motivation
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.ExportToIntranet">
            Whether or not gifts with this motivation should be exported to the worldwide Intranet (to help distinguish non-gifts like sales)
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable">
            motivation details can have several fees
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnMotivationGroupCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnMotivationDetailCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnFeeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnLedgerNumber">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnMotivationGroupCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnMotivationDetailCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnFeeCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetMotivationGroupCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetMotivationGroupCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetMotivationDetailCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetMotivationDetailCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetFeeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetFeeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow">
            motivation details can have several fees
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.IsMotivationGroupCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.SetMotivationGroupCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.IsMotivationDetailCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.SetMotivationDetailCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.IsFeeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.SetFeeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.LedgerNumber">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.MotivationGroupCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.MotivationDetailCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.FeeCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AMotivationDetailFeeRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable">
            Stores administrative fees and grants which have been calculated on gifts.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnFeeCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnPeriodNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnPeriodicAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnGiftTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnProcessedDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnTimestampId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnFeeCode">
            the fee which the calculated amounts are stored against.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnCostCentreCode">
            Cost centre code which the fee will be charged against.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnPeriodNumber">
            Period number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnPeriodicAmount">
            Total Amount of the fee for the given period.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnBatchNumber">
            Number of the gift batch containing this detail.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnGiftTransactionNumber">
            Identifies a gift transaction within a gift batch.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnDetailNumber">
            Identifies a gift detail within a gift transaction.   When a donor gives a donation to multiple recipients (a split gift), a gift detail record is created for each recipient.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnProcessedDate">
            Date ""admin fee calculations"" have been run to fee total has been created as a transaction in the general ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnTimestamp">
            System generated time stamp.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetFeeCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetFeeCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetPeriodNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetPeriodNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetPeriodicAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetPeriodicAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetGiftTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetGiftTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetProcessedDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetProcessedDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetTimestampDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetTimestampLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow">
            Stores administrative fees and grants which have been calculated on gifts.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsFeeCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetFeeCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsPeriodNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetPeriodNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsPeriodicAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetPeriodicAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsGiftTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetGiftTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsProcessedDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetProcessedDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsTimestampNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetTimestampNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.FeeCode">
            the fee which the calculated amounts are stored against.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.CostCentreCode">
            Cost centre code which the fee will be charged against.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.PeriodNumber">
            Period number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.PeriodicAmount">
            Total Amount of the fee for the given period.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.BatchNumber">
            Number of the gift batch containing this detail.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.GiftTransactionNumber">
            Identifies a gift transaction within a gift batch.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.DetailNumber">
            Identifies a gift detail within a gift transaction.   When a donor gives a donation to multiple recipients (a split gift), a gift detail record is created for each recipient.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.ProcessedDate">
            Date ""admin fee calculations"" have been run to fee total has been created as a transaction in the general ledger.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.Timestamp">
            System generated time stamp.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AProcessedFeeRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable">
            Templates of gift batches which can be copied into the gift system.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnBatchDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnHashTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnBatchTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnBankAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnLastGiftNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnBankCostCentreId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnGiftTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnMethodOfPaymentCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnLedgerNumber">
            ledger number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnBatchNumber">
            Gift batch number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnBatchDescription">
            gift batch description
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnHashTotal">
            hash total for the gift batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnBatchTotal">
            total for the gift batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnBankAccountCode">
            bank account code which this batch is for
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnLastGiftNumber">
            last gift number of the batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnCurrencyCode">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnBankCostCentre">
            This identifies which cost centre is applied to the bank
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnGiftType">
            What type of gift is this? a gift or a gift in kind generally
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnMethodOfPaymentCode">
            This is how the partner paid. EgCash, Cheque etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetBatchDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetBatchDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetHashTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetHashTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetBatchTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetBatchTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetBankAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetBankAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetLastGiftNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetLastGiftNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetBankCostCentreDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetBankCostCentreLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetGiftTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetGiftTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetMethodOfPaymentCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetMethodOfPaymentCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow">
            Templates of gift batches which can be copied into the gift system.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsBatchDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetBatchDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsHashTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetHashTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsBatchTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetBatchTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsBankAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetBankAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsLastGiftNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetLastGiftNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsBankCostCentreNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetBankCostCentreNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsGiftTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetGiftTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsMethodOfPaymentCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetMethodOfPaymentCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.LedgerNumber">
            ledger number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.BatchNumber">
            Gift batch number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.BatchDescription">
            gift batch description
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.HashTotal">
            hash total for the gift batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.BatchTotal">
            total for the gift batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.BankAccountCode">
            bank account code which this batch is for
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.LastGiftNumber">
            last gift number of the batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.CurrencyCode">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.BankCostCentre">
            This identifies which cost centre is applied to the bank
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.GiftType">
            What type of gift is this? a gift or a gift in kind generally
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.MethodOfPaymentCode">
            This is how the partner paid. EgCash, Cheque etc
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftBatchRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable">
            Templates of donor gift information which can be copied into the gift system with recurring gift batches.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnGiftTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnReceiptLetterCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnMethodOfGivingCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnMethodOfPaymentCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnDonorKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnLastDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnBankingDetailsKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnChargeStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnLastDebitId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnDebitDayId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnActiveId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnGiftTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnReceiptLetterCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnMethodOfGivingCode">
            Defines how a gift is given
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnMethodOfPaymentCode">
            This is how the partner paid. Eg cash, Cheque etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnDonorKey">
            This is the partner key assigned to each partner. It consists of the fund id followed by a computer generated six digit number.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnLastDetailNumber">
            Identifies the last gift detail entered
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnReference">
            Reference number/code for the transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnBankingDetailsKey">
            Bank or credit card account to use for making this gift transaction.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnChargeStatus">
            Status of the credit card transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnLastDebit">
            The last date that a successfull direct debit or credit card charge occurred for this gift
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnDebitDay">
            The day of the month to make the recurring gift
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnActive">
            Whether the recurring gift should be made
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetGiftTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetGiftTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetReceiptLetterCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetReceiptLetterCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetMethodOfGivingCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetMethodOfGivingCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetMethodOfPaymentCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetMethodOfPaymentCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetDonorKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetDonorKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetLastDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetLastDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetBankingDetailsKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetBankingDetailsKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetChargeStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetChargeStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetLastDebitDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetLastDebitLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetDebitDayDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetDebitDayLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetActiveDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetActiveLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow">
            Templates of donor gift information which can be copied into the gift system with recurring gift batches.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsGiftTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetGiftTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsReceiptLetterCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetReceiptLetterCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsMethodOfGivingCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetMethodOfGivingCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsMethodOfPaymentCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetMethodOfPaymentCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsDonorKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetDonorKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsLastDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetLastDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsBankingDetailsKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetBankingDetailsKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsChargeStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetChargeStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsLastDebitNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetLastDebitNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsDebitDayNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetDebitDayNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsActiveNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetActiveNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.GiftTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.ReceiptLetterCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.MethodOfGivingCode">
            Defines how a gift is given
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.MethodOfPaymentCode">
            This is how the partner paid. Eg cash, Cheque etc
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.DonorKey">
            This is the partner key assigned to each partner. It consists of the fund id followed by a computer generated six digit number.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.LastDetailNumber">
            Identifies the last gift detail entered
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.Reference">
            Reference number/code for the transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.BankingDetailsKey">
            Bank or credit card account to use for making this gift transaction.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.ChargeStatus">
            Status of the credit card transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.LastDebit">
            The last date that a successfull direct debit or credit card charge occurred for this gift
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.DebitDay">
            The day of the month to make the recurring gift
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.Active">
            Whether the recurring gift should be made
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable">
            Store recipient information for the recurring gift.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnGiftTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnRecipientLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnGiftAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnMotivationGroupCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnMotivationDetailCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnCommentOneTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnGiftCommentOneId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnConfidentialGiftFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnTaxDeductableId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnRecipientKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnChargeFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnMailingCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnCommentTwoTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnGiftCommentTwoId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnCommentThreeTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnGiftCommentThreeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnStartDonationsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnEndDonationsId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnBatchNumber">
            Number of the gift batch containing this detail.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnGiftTransactionNumber">
            Identifies a gift transaction within a gift batch.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnDetailNumber">
            Identifies a gift
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnRecipientLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnGiftAmount">
            This is a number of currency units
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnMotivationGroupCode">
            This defines a motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnMotivationDetailCode">
            This defines the motivation detail within a motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnCommentOneType">
            Used to decide whose reports will see this comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnGiftCommentOne">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnConfidentialGiftFlag">
            Defines whether the donor wishes the recipient to know who gave the gift
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnTaxDeductable">
            Whether this gift is tax deductable
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnRecipientKey">
            This is the partner key assigned to each partner. It consists of the fund id followed by a computer generated six digit number.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnChargeFlag">
            To determine whether an admin fee on the transaction should be overwritten if it normally has a charge associated with it. Used for both local and ilt transaction.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnMailingCode">
            Mailing Code
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnCommentTwoType">
            Used to decide whose reports will see this comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnGiftCommentTwo">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnCommentThreeType">
            Used to decide whose reports will see this comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnGiftCommentThree">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnStartDonations">
            Date that donor wants to begin giving this recurring donation
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnEndDonations">
            Date that donor wants to stop giving this recurring donation
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetGiftTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetGiftTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetRecipientLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetRecipientLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetGiftAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetGiftAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetMotivationGroupCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetMotivationGroupCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetMotivationDetailCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetMotivationDetailCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetCommentOneTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetCommentOneTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetGiftCommentOneDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetGiftCommentOneLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetConfidentialGiftFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetConfidentialGiftFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetTaxDeductableDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetTaxDeductableLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetRecipientKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetRecipientKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetChargeFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetChargeFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetMailingCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetMailingCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetCommentTwoTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetCommentTwoTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetGiftCommentTwoDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetGiftCommentTwoLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetCommentThreeTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetCommentThreeTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetGiftCommentThreeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetGiftCommentThreeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetStartDonationsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetStartDonationsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetEndDonationsDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetEndDonationsLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow">
            Store recipient information for the recurring gift.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsGiftTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetGiftTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsRecipientLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetRecipientLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsGiftAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetGiftAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsMotivationGroupCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetMotivationGroupCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsMotivationDetailCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetMotivationDetailCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsCommentOneTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetCommentOneTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsGiftCommentOneNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetGiftCommentOneNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsConfidentialGiftFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetConfidentialGiftFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsTaxDeductableNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetTaxDeductableNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsRecipientKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetRecipientKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsChargeFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetChargeFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsMailingCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetMailingCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsCommentTwoTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetCommentTwoTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsGiftCommentTwoNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetGiftCommentTwoNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsCommentThreeTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetCommentThreeTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsGiftCommentThreeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetGiftCommentThreeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsStartDonationsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetStartDonationsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsEndDonationsNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetEndDonationsNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.LedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.BatchNumber">
            Number of the gift batch containing this detail.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.GiftTransactionNumber">
            Identifies a gift transaction within a gift batch.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.DetailNumber">
            Identifies a gift
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.RecipientLedgerNumber">
            This is used as a key field in most of the accounting system files
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.GiftAmount">
            This is a number of currency units
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.MotivationGroupCode">
            This defines a motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.MotivationDetailCode">
            This defines the motivation detail within a motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.CommentOneType">
            Used to decide whose reports will see this comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.GiftCommentOne">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.ConfidentialGiftFlag">
            Defines whether the donor wishes the recipient to know who gave the gift
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.TaxDeductable">
            Whether this gift is tax deductable
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.RecipientKey">
            This is the partner key assigned to each partner. It consists of the fund id followed by a computer generated six digit number.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.ChargeFlag">
            To determine whether an admin fee on the transaction should be overwritten if it normally has a charge associated with it. Used for both local and ilt transaction.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.MailingCode">
            Mailing Code
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.CommentTwoType">
            Used to decide whose reports will see this comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.GiftCommentTwo">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.CommentThreeType">
            Used to decide whose reports will see this comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.GiftCommentThree">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.StartDonations">
            Date that donor wants to begin giving this recurring donation
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.EndDonations">
            Date that donor wants to stop giving this recurring donation
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.ARecurringGiftDetailRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable">
            Information describing groups (batches) of gifts.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnModificationDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnHashTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchTotalId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBankAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnLastGiftNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchPeriodId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchYearId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnGlEffectiveDateId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnExchangeRateToBaseId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBankCostCentreId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnGiftTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnMethodOfPaymentCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnLedgerNumber">
            ledger number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchNumber">
            Gift batch number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchDescription">
            gift batch description
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnModificationDate">
            date of user entry or last modification.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnHashTotal">
            hash total for the gift batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchTotal">
            total for the gift batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBankAccountCode">
            bank account code which this batch is for
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnLastGiftNumber">
            last gift number of the batch
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchStatus">
            Status of a gift batch: unposted, posted, cancelled.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchPeriod">
            The accounting period that the batch belongs to.  Must be &lt;= 20.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBatchYear">
            The financial year that the batch belongs to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnGlEffectiveDate">
            Effective date when posted to the general ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnCurrencyCode">
            This defines which currency is being used
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnExchangeRateToBase">
            The rate of exchange
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnBankCostCentre">
            This identifies which cost centre is applied to the bank
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnGiftType">
            What type of gift is this? a gift or a gift in kind generally
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnMethodOfPaymentCode">
            This is how the partner paid. EgCash, Cheque etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetModificationDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetModificationDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetHashTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetHashTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchTotalDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchTotalLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBankAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBankAccountCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetLastGiftNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetLastGiftNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchPeriodDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchPeriodLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchYearDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBatchYearLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetGlEffectiveDateDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetGlEffectiveDateLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetExchangeRateToBaseDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetExchangeRateToBaseLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBankCostCentreDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetBankCostCentreLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetGiftTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetGiftTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetMethodOfPaymentCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetMethodOfPaymentCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow">
            Information describing groups (batches) of gifts.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsBatchDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetBatchDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsModificationDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetModificationDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsHashTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetHashTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsBatchTotalNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetBatchTotalNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsBankAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetBankAccountCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsLastGiftNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetLastGiftNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsBatchStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetBatchStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsBatchPeriodNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetBatchPeriodNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsBatchYearNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetBatchYearNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsGlEffectiveDateNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetGlEffectiveDateNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsExchangeRateToBaseNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetExchangeRateToBaseNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsBankCostCentreNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetBankCostCentreNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsGiftTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetGiftTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsMethodOfPaymentCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetMethodOfPaymentCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.LedgerNumber">
            ledger number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.BatchNumber">
            Gift batch number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.BatchDescription">
            gift batch description
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.ModificationDate">
            date of user entry or last modification.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.HashTotal">
            hash total for the gift batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.BatchTotal">
            total for the gift batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.BankAccountCode">
            bank account code which this batch is for
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.LastGiftNumber">
            last gift number of the batch
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.BatchStatus">
            Status of a gift batch: unposted, posted, cancelled.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.BatchPeriod">
            The accounting period that the batch belongs to.  Must be &lt;= 20.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.BatchYear">
            The financial year that the batch belongs to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.GlEffectiveDate">
            Effective date when posted to the general ledger.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.CurrencyCode">
            This defines which currency is being used
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.ExchangeRateToBase">
            The rate of exchange
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.BankCostCentre">
            This identifies which cost centre is applied to the bank
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.GiftType">
            What type of gift is this? a gift or a gift in kind generally
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.MethodOfPaymentCode">
            This is how the partner paid. EgCash, Cheque etc
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftBatchRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable">
            Information on the donor's giving. Points to the gift detail records.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnGiftTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnGiftStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnDateEnteredId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnHomeAdminChargesFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnIltAdminChargesFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnReceiptLetterCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnMethodOfGivingCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnMethodOfPaymentCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnDonorKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnAdminChargeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnReceiptNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnLastDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnReferenceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnFirstTimeGiftId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnReceiptPrintedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnRestrictedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnBankingDetailsKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnLedgerNumber">
            This is used as a key field in most of the accounting system files.  The four digit ledger number of the gift.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnBatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnGiftTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnGiftStatus">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnDateEntered">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnHomeAdminChargesFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnIltAdminChargesFlag">
            Used to get a yes no response from the user
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnReceiptLetterCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnMethodOfGivingCode">
            Defines how a gift is given.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnMethodOfPaymentCode">
            This is how the partner paid. Eg cash, Cheque etc
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnDonorKey">
            This is the partner key of the donor.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnAdminCharge">
            NOT USED AT ALL
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnReceiptNumber">
            Gift Receipt Number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnLastDetailNumber">
            Identifies the last gift detail entered
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnReference">
            Reference number/code for the transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnFirstTimeGift">
            Flag to indicate Donors first gift
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnReceiptPrinted">
            Indicates whether or not the receipt has been printed for this gift
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnRestricted">
            Indicates whether or not the gift has restricted access. If it does then the access will be controlled by s_group_gift
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnBankingDetailsKey">
            Bank or credit card account used for making this gift transaction.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetGiftTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetGiftTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetGiftStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetGiftStatusLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetDateEnteredDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetDateEnteredLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetHomeAdminChargesFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetHomeAdminChargesFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetIltAdminChargesFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetIltAdminChargesFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetReceiptLetterCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetReceiptLetterCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetMethodOfGivingCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetMethodOfGivingCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetMethodOfPaymentCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetMethodOfPaymentCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetDonorKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetDonorKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetAdminChargeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetAdminChargeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetReceiptNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetReceiptNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetLastDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetLastDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetReferenceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetReferenceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetFirstTimeGiftDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetFirstTimeGiftLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetReceiptPrintedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetReceiptPrintedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetRestrictedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetRestrictedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetBankingDetailsKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetBankingDetailsKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow">
            Information on the donor's giving. Points to the gift detail records.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsGiftTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetGiftTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsGiftStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetGiftStatusNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsDateEnteredNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetDateEnteredNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsHomeAdminChargesFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetHomeAdminChargesFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsIltAdminChargesFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetIltAdminChargesFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsReceiptLetterCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetReceiptLetterCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsMethodOfGivingCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetMethodOfGivingCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsMethodOfPaymentCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetMethodOfPaymentCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsDonorKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetDonorKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsAdminChargeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetAdminChargeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsReceiptNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetReceiptNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsLastDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetLastDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsReferenceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetReferenceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsFirstTimeGiftNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetFirstTimeGiftNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsReceiptPrintedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetReceiptPrintedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsRestrictedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetRestrictedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsBankingDetailsKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetBankingDetailsKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.LedgerNumber">
            This is used as a key field in most of the accounting system files.  The four digit ledger number of the gift.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.BatchNumber">
            identifes which batch a transaction belongs to
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.GiftTransactionNumber">
            Identifies a transaction within a journal within a batch within a ledger
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.GiftStatus">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.DateEntered">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.HomeAdminChargesFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.IltAdminChargesFlag">
            Used to get a yes no response from the user
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.ReceiptLetterCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.MethodOfGivingCode">
            Defines how a gift is given.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.MethodOfPaymentCode">
            This is how the partner paid. Eg cash, Cheque etc
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.DonorKey">
            This is the partner key of the donor.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.AdminCharge">
            NOT USED AT ALL
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.ReceiptNumber">
            Gift Receipt Number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.LastDetailNumber">
            Identifies the last gift detail entered
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.Reference">
            Reference number/code for the transaction
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.FirstTimeGift">
            Flag to indicate Donors first gift
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.ReceiptPrinted">
            Indicates whether or not the receipt has been printed for this gift
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.Restricted">
            Indicates whether or not the gift has restricted access. If it does then the access will be controlled by s_group_gift
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.BankingDetailsKey">
            Bank or credit card account used for making this gift transaction.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftRow.ModificationId">
            This identifies the current version of the record.
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable">
            The gift recipient information for a gift.  A single gift can be split among more than one recipient.  A gift detail record is created for each recipient.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnBatchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftTransactionNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnDetailNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnRecipientLedgerNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnMotivationGroupCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnMotivationDetailCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnCommentOneTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftCommentOneId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnConfidentialGiftFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnTaxDeductableId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnRecipientKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnChargeFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnCostCentreCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftAmountIntlId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnModifiedDetailId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftTransactionAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnIchNumberId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnMailingCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnCommentTwoTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftCommentTwoId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnCommentThreeTypeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftCommentThreeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnDateCreatedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnCreatedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnDateModifiedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnModifiedById">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnModificationIdId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnLedgerNumber">
            The four digit ledger number of the gift.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnBatchNumber">
            Number of the gift batch containing this detail.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftTransactionNumber">
            Identifies a gift transaction within a gift batch.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnDetailNumber">
            Identifies a gift detail within a gift transaction.   When a donor gives a donation to multiple recipients (a split gift), a gift detail record is created for each recipient.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnRecipientLedgerNumber">
            The partner key of the commitment field (the unit) of the recipient of the gift.  This is not the ledger number but rather the partner key of the unit associated with the ledger.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftAmount">
            This is a number of currency units of the ledger base currency.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnMotivationGroupCode">
            This defines a motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnMotivationDetailCode">
            This defines the motivation detail within a motivation group.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnCommentOneType">
            Used to decide whose reports will see this comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftCommentOne">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnConfidentialGiftFlag">
            Defines whether the donor wishes the recipient to know who gave the gift
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnTaxDeductable">
            Whether this gift is tax deductable
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnRecipientKey">
            The partner key of the recipient of the gift.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnChargeFlag">
            To determine whether an admin fee on the transaction should be overwritten if it normally has a charge associated with it. Used for both local and ilt transaction.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnCostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftAmountIntl">
            This is a number of currency units in the International Currency
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnModifiedDetail">
            Indicates whether this gift detail has a matching inverse detail record because a modification was made
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftTransactionAmount">
            This is a number of currency units in the entered Currency
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnIchNumber">
            identifes the ICH process number
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnMailingCode">
            Mailing Code of the mailing that the gift was a response to.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnCommentTwoType">
            Used to decide whose reports will see this comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftCommentTwo">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnCommentThreeType">
            Used to decide whose reports will see this comment
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnGiftCommentThree">
            This is a long description and is 80 characters long.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnDateCreated">
            The date the record was created.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnCreatedBy">
            User ID of who created this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnDateModified">
            The date the record was modified.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.ColumnModificationId">
            This identifies the current version of the record.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetBatchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetBatchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftTransactionNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftTransactionNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetDetailNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetDetailNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetRecipientLedgerNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetRecipientLedgerNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetMotivationGroupCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetMotivationGroupCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetMotivationDetailCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetMotivationDetailCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetCommentOneTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetCommentOneTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftCommentOneDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftCommentOneLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetConfidentialGiftFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetConfidentialGiftFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetTaxDeductableDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetTaxDeductableLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetRecipientKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetRecipientKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetChargeFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetChargeFlagLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetCostCentreCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetCostCentreCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftAmountIntlDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftAmountIntlLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetModifiedDetailDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetModifiedDetailLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftTransactionAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftTransactionAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetIchNumberDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetIchNumberLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetMailingCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetMailingCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetCommentTwoTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetCommentTwoTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftCommentTwoDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftCommentTwoLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetCommentThreeTypeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetCommentThreeTypeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftCommentThreeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetGiftCommentThreeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetDateCreatedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetDateCreatedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetCreatedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetCreatedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetDateModifiedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetDateModifiedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetModifiedByDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetModifiedByLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetModificationIdDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.GetModificationIdLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow">
            The gift recipient information for a gift.  A single gift can be split among more than one recipient.  A gift detail record is created for each recipient.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsBatchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetBatchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsGiftTransactionNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetGiftTransactionNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsDetailNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetDetailNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsRecipientLedgerNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetRecipientLedgerNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsGiftAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetGiftAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsMotivationGroupCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetMotivationGroupCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsMotivationDetailCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetMotivationDetailCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsCommentOneTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetCommentOneTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsGiftCommentOneNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetGiftCommentOneNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsConfidentialGiftFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetConfidentialGiftFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsTaxDeductableNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetTaxDeductableNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsRecipientKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetRecipientKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsChargeFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetChargeFlagNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsCostCentreCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetCostCentreCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsGiftAmountIntlNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetGiftAmountIntlNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsModifiedDetailNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetModifiedDetailNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsGiftTransactionAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetGiftTransactionAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsIchNumberNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetIchNumberNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsMailingCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetMailingCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsCommentTwoTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetCommentTwoTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsGiftCommentTwoNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetGiftCommentTwoNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsCommentThreeTypeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetCommentThreeTypeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsGiftCommentThreeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetGiftCommentThreeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsDateCreatedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetDateCreatedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsCreatedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetCreatedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsDateModifiedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetDateModifiedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsModifiedByNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetModifiedByNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IsModificationIdNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.SetModificationIdNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.LedgerNumber">
            The four digit ledger number of the gift.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.BatchNumber">
            Number of the gift batch containing this detail.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.GiftTransactionNumber">
            Identifies a gift transaction within a gift batch.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.DetailNumber">
            Identifies a gift detail within a gift transaction.   When a donor gives a donation to multiple recipients (a split gift), a gift detail record is created for each recipient.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.RecipientLedgerNumber">
            The partner key of the commitment field (the unit) of the recipient of the gift.  This is not the ledger number but rather the partner key of the unit associated with the ledger.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.GiftAmount">
            This is a number of currency units of the ledger base currency.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.MotivationGroupCode">
            This defines a motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.MotivationDetailCode">
            This defines the motivation detail within a motivation group.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.CommentOneType">
            Used to decide whose reports will see this comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.GiftCommentOne">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.ConfidentialGiftFlag">
            Defines whether the donor wishes the recipient to know who gave the gift
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.TaxDeductable">
            Whether this gift is tax deductable
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.RecipientKey">
            The partner key of the recipient of the gift.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.ChargeFlag">
            To determine whether an admin fee on the transaction should be overwritten if it normally has a charge associated with it. Used for both local and ilt transaction.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.CostCentreCode">
            This identifies which cost centre an account is applied to. A cost centre can be a partner.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.GiftAmountIntl">
            This is a number of currency units in the International Currency
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.ModifiedDetail">
            Indicates whether this gift detail has a matching inverse detail record because a modification was made
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.GiftTransactionAmount">
            This is a number of currency units in the entered Currency
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.IchNumber">
            identifes the ICH process number
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.MailingCode">
            Mailing Code of the mailing that the gift was a response to.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.CommentTwoType">
            Used to decide whose reports will see this comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.GiftCommentTwo">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.CommentThreeType">
            Used to decide whose reports will see this comment
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.GiftCommentThree">
            This is a long description and is 80 characters long.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.DateCreated">
            The date the record was created.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.CreatedBy">
            User ID of who created this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.DateModified">
            The date the record was modified.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.ModifiedBy">
            User ID of who last modified this record.
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.AGiftDetailRow.ModificationId">
            This identifies the current version of the record.
        </member>
    </members>
</doc>
