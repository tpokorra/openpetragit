<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ict.Petra.Client.App.Gui</name>
    </assembly>
    <members>
        <member name="T:Ict.Petra.Client.App.Gui.Icons">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.App.Gui.Icons.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.App.Gui.Icons.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.TDataBinding">
             <summary>
             Contains routines that help with DataBinding.
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TDataBinding.SetFocusOnDataBoundControlInternal(System.Windows.Forms.ContainerControl,System.Windows.Forms.BindingManagerBase,System.String)">
             <summary>
             Sets the Focus to a databound control within a given Form or a UserControl by
             specifying the column to which it is bound.
            
             </summary>
             <param name="AContainerControl">Either a Form or a UserControl.</param>
             <param name="ABindingManagerBase">BindingManagerBase where the data binding
             information is stored</param>
             <param name="AColumnName">Name of the column whose databound control should get the
             focus.</param>
             <returns>Name of the control, or empty string if not found.
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TDataBinding.SetFocusOnDataBoundControl(System.Windows.Forms.ContainerControl,System.Data.DataView,System.String)">
             <summary>
             Sets the Focus to a databound control within a given Form or a UserControl by
             specifying the column to which it is bound.
            
             Internally it uses SetFocusOnDataBoundControlInternal to set the focus.
            
             </summary>
             <param name="AContainer">Either a Form or a UserControl.</param>
             <param name="ADataView">DataView in which the column is to be found.</param>
             <param name="AColumnName">Name of the column whose databound control should get the
             focus.</param>
             <returns>Name of the control, or empty string if not found.
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TDataBinding.SetColumnErrorText(System.Data.DataColumnChangeEventArgs,Ict.Common.Verification.TVerificationResult,System.String)">
             <summary>
             Sets the text of ColumnError.
            
             </summary>
             <param name="AEventArgs">Event arguments of DataColumnChange event.</param>
             <param name="AVerificationResultEntry">A VerificationResultEntry that holds
             information about the error.</param>
             <param name="AControlName">Name of the control on the form that is associated with
             the errenous DataColumn.
             </param>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TDataBinding.SetFocusOnDataBoundControl(System.Windows.Forms.ContainerControl,System.Data.DataTable,System.String)">
             <summary>
             Sets the Focus to a databound control within a given Form or a UserControl by
             specifying the column to which it is bound.
            
             Internally it uses SetFocusOnDataBoundControlInternal to set the focus.
            
             </summary>
             <param name="AContainer">Either a Form or a UserControl.</param>
             <param name="ADataTable">DataTable in which the column is to be found.</param>
             <param name="AColumnName">Name of the column whose databound control should get the
             focus.</param>
             <returns>Name of the control, or empty string if not found.
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TDataBinding.EnsureDataChangesAreStored(System.Windows.Forms.ContainerControl)">
             <summary>
             Makes sure that DataBinding writes the value of the active Control to the
             underlying DataSource - without leaving the Control!
            
             @comment The active Control must be DataBound for this to work, of course. If
             it isn't, nothing happens and no error is given.
            
             </summary>
             <param name="AContainerControl">A ContainterControl (eg. Form, UserControl, Panel)
             that contains controls
             </param>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TDataBinding.GetBoundControlForColumn(System.Windows.Forms.BindingManagerBase,System.Data.DataColumn)">
             <summary>
             Returns the Control that is bound to the specified DataColumn.
            
             </summary>
             <param name="ABindingManagerBase">A BindingManagerBase. Such an Object can be
             retrieved e.g. by such a code: BindingContext[FMainDS.PPartner]</param>
             <param name="AColumn">The DataColumn to which the Control should be found</param>
             <returns>The Control, if it could be found, otherwise nil.
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TDataBinding.IterateErrorsInData(System.Data.DataRow,System.String@,System.String@)">
             <summary>
             Builds a string out of DataColumns that have errors and gives the name of the
             column where the first error is stored.
            
             </summary>
             <param name="ADataRow">DataRow in which the DataColumn errors should be iterated.</param>
             <param name="AErrorMessages">String containing all DataColumns that have errors,
             separated by two CR+LF's.</param>
             <param name="AFirstErrorControlName">Name of the DataColumn where the first error is
             stored.
             </param>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TDataBinding.IterateErrorsInData(System.Data.DataTable,System.String@,System.String@)">
             <summary>
             Builds a string out of DataColumns that have errors and gives the name of the
             column where the first error is stored.
            
             </summary>
             <param name="ADataTable">DataTable in which the DataColumn errors or all DataRows
             should be iterated.</param>
             <param name="AErrorMessages">String containing all DataColumns that have errors,
             separated by two CR+LF's.</param>
             <param name="AFirstErrorControlName">Name of the DataColumn where the first error is
             stored.
             </param>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TDataBinding.IterateErrorsInData(System.Data.DataSet,System.String@,System.String@)">
             <summary>
             Builds a string out of DataColumns that have errors and gives the name of the
             column where the first error is stored.
            
             </summary>
             <param name="ADataSet">DataSet in which the DataColumn errors of all DataTables
             should be iterated.</param>
             <param name="AErrorMessages">String containing all DataColumns that have errors,
             separated by two CR+LF's.</param>
             <param name="AFirstErrorControlName">Name of the DataColumn where the first error is
             stored.
             </param>
             <returns>void</returns>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.TFocusing">
             <summary>
             Contains routines that help with Focus setting.
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TFocusing.SelectTab(System.Windows.Forms.TabControl,System.String)">
             <summary>
             Selects a TabPage by name on a specified TabControl control.
            
             </summary>
             <param name="ATabControl">TabControl control to which the TabPage belongs.</param>
             <param name="ATabToSelect">Name of the TabPage that should be selected.
             </param>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TFocusing.SetFocusOnControlInFormOrUserControl(System.Windows.Forms.ContainerControl,System.String)">
             <summary>
             Sets the Focus to a control within a given Form or a UserControl.
            
             </summary>
             <param name="AContainer">Either a Form or a UserControl.</param>
             <param name="AControlName">Name of the control to set the focus to</param>
             <returns>The name of the control if the control is found (used in
             SetFocusOnDataBoundControlInternal), otherwise ''.
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TFocusing.SetFocusOnControlInFormOrUserControl(System.Windows.Forms.ContainerControl,System.String,System.Windows.Forms.TabControl,System.String)">
             <summary>
             Sets the Focus to a control within a given Form or a UserControl.
            
             </summary>
             <param name="AContainer">Either a Form or a UserControl.</param>
             <param name="AControlName">Name of the control to set the focus to</param>
             <param name="ATabControl">A TabControl control whose TabPage should be selected to
             show the focused control.</param>
             <param name="ATabPageToFocus">The name of the TabPage that should be selected to
             show the focused control.</param>
             <returns>The name of the control if the control is found (used in
             SetFocusOnDataBoundControlInternal), otherwise ''.
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TFocusing.SetFocusOnControlInControlContainer(System.Object,System.String)">
             <summary>
             Sets the Focus to a control within a GroupBox, Panel, TabControl or
             UserControl.
            
             </summary>
             <param name="AControlContainer">Either a GroupBox or Panel.</param>
             <param name="AControlName">Name of the control to set the focus to</param>
             <returns>The name of the control if the control is found (used in
             SetFocusOnControlInFormOrUserControl), otherwise ''.
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TFocusing.SetFocusOnControlInControlContainer(System.Object,System.String,System.Windows.Forms.TabControl,System.String)">
             <summary>
             Sets the Focus to a control within a GroupBox, Panel, TabControl or
             UserControl.
            
             </summary>
             <param name="AControlContainer">Either a GroupBox or Panel.</param>
             <param name="AControlName">Name of the control to set the focus to</param>
             <param name="ATabControl">A TabControl control whose TabPage should be selected to
             show the focused control.</param>
             <param name="ATabPageToFocus">The name of the TabPage that should be selected to
             show the focused control.</param>
             <returns>The name of the control if the control is found (used in
             SetFocusOnControlInFormOrUserControl), otherwise ''.
             </returns>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.TScreenMode">
            <summary>
            Operation Mode of a Screen.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TScreenMode.smNew">
            <summary>Entering of new record(s).</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TScreenMode.smEdit">
            <summary>Editing of an existing record.</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TScreenMode.smEditCurrent">
            <summary>Editing of an existing record, no navigation to other records allowed.</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TScreenMode.smInquireCurrent">
            <summary>Read-only viewing of an existing record, no navigation to other records allowed.</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TScreenMode.smInquireAll">
            <summary>Read-only viewing of existing records.</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TScreenMode.smNewInquireAll">
            <summary>Read-only viewing of existing records and entering of new record(s).</summary>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.THookupDataChangeEventHandler">
            <summary>Event Handler for a generic Data Change Event.</summary>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.Types">
            <summary>
            Contains Types which can be used anywhere in the Petra Client. They are not
            specific for a certain Petra Module.
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.Types.TPartnerKeyData">
            <summary>
            Data structure for Partner Key Data.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.Types.TPartnerKeyData.#ctor(System.Int64,System.String,Ict.Petra.Shared.TPartnerClass)">
            <summary>
            Constructor.
            </summary>
            <param name="APartnerKey">PartnerKey of a Partner.</param>
            <param name="APartnerShortName">ShortName of a Partner.</param>
            <param name="APartnerClass">Partner Class of a Partner.</param>
        </member>
        <member name="P:Ict.Petra.Client.App.Gui.Types.TPartnerKeyData.PartnerKey">
            <summary>PartnerKey of a Partner.</summary>
        </member>
        <member name="P:Ict.Petra.Client.App.Gui.Types.TPartnerKeyData.PartnerShortName">
            <summary>Short Name of a Partner.</summary>
        </member>
        <member name="P:Ict.Petra.Client.App.Gui.Types.TPartnerKeyData.PartnerClass">
            <summary>Partner Class of a Partner.</summary>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.TMessages">
            <summary>
            Contains Messages which can be used anywhere in the Petra Client. They are not
            specific for a certain Petra Module.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrMessageNumber">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrContext">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrRelease">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyTitle">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyOtherUser">
            <summary>Notice to translators: when translating the following resourcestrings, be very careful that the message that the user gets displayed does still make sense and is still correct!!!
            (The strings are replaced in quite different ways depending
            on the situation.)</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencySelf">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyActionsRequired">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyWrittenSelfAction">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyWrittenOthersAction">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyWriteOthersAction">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyDeletedSelfAction1">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyDeletedSelfAction2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyDeletedOthersAction">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyDeleteOthersAction">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyDateInfoOthersAction">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMessages.StrDBConcurrencyDateInfoSelfAction">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.BuildMessageFooter(System.String,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="AMessageNumber"></param>
            <param name="AContext"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.MsgGeneralError(System.String,System.String,System.String,System.Type)">
            <summary>
            todoComment
            </summary>
            <param name="AErrorText"></param>
            <param name="ATitle"></param>
            <param name="AMessageNumber"></param>
            <param name="ATypeWhichRaisesException"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.MsgGeneralError(System.String,System.String,System.String)">
            <summary>
            overload
            </summary>
            <param name="AErrorText"></param>
            <param name="ATitle"></param>
            <param name="AMessageNumber"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.MsgSecurityException(Ict.Petra.Shared.RemotedExceptions.ESecurityGroupAccessDeniedException,System.Type)">
            <summary>
            todoComment
            </summary>
            <param name="AException"></param>
            <param name="ATypeWhichRaisesException"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.MsgSecurityException(Ict.Petra.Shared.RemotedExceptions.ESecurityAccessDeniedException,System.Type)">
            <summary>
            todoComment
            </summary>
            <param name="AException"></param>
            <param name="ATypeWhichRaisesException"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.MsgSecurityException(Ict.Petra.Shared.RemotedExceptions.ESecurityDBTableAccessDeniedException,System.Type)">
            <summary>
            todoComment
            </summary>
            <param name="AException"></param>
            <param name="ATypeWhichRaisesException"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.MsgSecurityException(Ict.Petra.Shared.RemotedExceptions.ESecurityPartnerAccessDeniedException,System.Type)">
            <summary>
            todoComment
            </summary>
            <param name="AException"></param>
            <param name="ATypeWhichRaisesException"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.MsgSecurityExceptionString(Ict.Petra.Shared.RemotedExceptions.ESecurityPartnerAccessDeniedException,System.Type)">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.MsgDBConcurrencyException(Ict.Common.EDBConcurrencyException,System.Type)">
            <summary>
            todoComment
            </summary>
            <param name="AException"></param>
            <param name="ATypeWhichRaisesException"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.MsgGeneralError(Ict.Common.Verification.TVerificationResult,System.Type)">
            <summary>
            overload
            </summary>
            <param name="AVerificationResult"></param>
            <param name="ATypeWhichRaisesException"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TMessages.MsgGeneralError(Ict.Common.Verification.TVerificationResult)">
            <summary>
            overload
            </summary>
            <param name="AVerificationResult"></param>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.TTabIndex">
             <summary>
             Contains routines that help with Tab Index setting in WinForms.
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TTabIndex.ExchangeTabIndex(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Boolean)">
             <summary>
             Exchanges the Tab Index of two Controls. Optionally the Tab Index of
             Labels that are associated with the specified Controls can be changed as
             well (useful for maintaining keyboard shortcuts).
            
             @comment Both controls need to reside in the same Container Control.
            
             </summary>
             <param name="AControl1">The first Control that should change Tab Index with the
             second Control.</param>
             <param name="AControl2">The second Control that should change Tab Index with the
             first Control.</param>
             <param name="AExchangeAssociatedLabels">Set to true to change the Tab Index of
             Labels that are associated with the specified Controls as well
             </param>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TTabIndex.ExchangeTabIndex(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            overload
            </summary>
            <param name="AControl1"></param>
            <param name="AControl2"></param>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.LocalisedStrings">
            <summary>
            Contains functions and procedures that return Localised Strings for the User Interface.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.LocalisedStrings.COUNTY_DEFAULT_LABEL">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.LocalisedStrings.GetLocStrCounty(System.String@,System.String@)">
            <summary>
            todoComment
            </summary>
            <param name="ALabelText"></param>
            <param name="AName"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.LocalisedStrings.GetLocStrBankBranchCode(System.String@,System.String@,System.String@)">
            <summary>
            todoComment
            </summary>
            <param name="ALabel"></param>
            <param name="AToolTip"></param>
            <param name="AName"></param>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.TMPartnerTips">
             Enumeration of User Tips for the Partner Module.
             The value of each enum member (0, 1, ...) is the position in the String of
             the User Default where the settings are stored.
            
             IMPORTANT: when adding new values to the enumeration, make sure that the
             enumeration VALUE IS SPECIFIED AND UNIQUE in the enum! Otherwise wrong
             User Tips settings might be read or written!!!
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMPartnerTips.mpatPartnerEditVideoTutorial">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMPartnerTips.mpatNewTabCountersGeneral">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMPartnerTips.mpatNewTabCountersAddresses">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMPartnerTips.mpatNewTabCountersSubscriptions">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMPartnerTips.mpatNewTabCountersNotes">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMPartnerTips.mpatNewCancelAllSubscriptions">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMPartnerTips.mpatNewPromotePartnerStatusChange">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.App.Gui.TMPartnerTips.mpatNewDeactivatePartner">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.TUserTips">
             <summary>
             The TUserTips class provides functions that read and write the statuses of
             'User Tips'. User Tips are short messages can be shown anywhere in the UI
             (eg. using 'Balloon Tips' or 'Tip of the Day'-style Dialogs).
            
             The status of a certain User Tip (eg. already shown, not yet shown) is stored
             in a single character. The character is part of a single UserDefault of the
             User. This allows currently 250 User Tips statuses to be stored in a single
             User Default (because the s_default_value_c DB field can hold up to 250
             characters)
             A separate User Default for storing User Tips exists for each Petra Module
             (eg. 'MPartner_TipsState' for the Partner Module).
             A separate User Tips Enumeration exists for each Petra Module (eg. TMPartnerTips
             for the Partner Module). The items there provide the index at which
             character position the single character for the User Tip is stored.
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.CheckTipNotViewed(System.Int16,System.String,System.String,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="ATipIndex"></param>
            <param name="ATipsUserDefault"></param>
            <param name="ATipsUserDefaultValue"></param>
            <param name="ASetViewed"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.CheckTipNotViewed(System.Int16,System.String,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ATipIndex"></param>
            <param name="ATipsUserDefault"></param>
            <param name="ATipsUserDefaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.CheckTipStatus(System.Int16,System.String,System.String,System.Char)">
            <summary>
            todoComment
            </summary>
            <param name="ATipIndex"></param>
            <param name="ATipsUserDefault"></param>
            <param name="ATipsUserDefaultValue"></param>
            <param name="ASetViewedStatus"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.CheckTipStatus(System.Int16,System.String,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ATipIndex"></param>
            <param name="ATipsUserDefault"></param>
            <param name="ATipsUserDefaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.CheckTipViewed(System.Int16,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ATipIndex"></param>
            <param name="ATipsUserDefault"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.SetTipStatus(System.Int16,System.String,System.String,System.Char)">
            <summary>
            todoComment
            </summary>
            <param name="ATipIndex"></param>
            <param name="ATipsUserDefault"></param>
            <param name="ATipsUserDefaultValue"></param>
            <param name="ASetStatus"></param>
        </member>
        <member name="T:Ict.Petra.Client.App.Gui.TUserTips.TMPartner">
                 The TMPartner class provides access to User Tips for the Partner Module.
            
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.TMPartner.CheckTipNotViewed(Ict.Petra.Client.App.Gui.TMPartnerTips,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="ATip"></param>
            <param name="ASetViewed"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.TMPartner.CheckTipNotViewed(Ict.Petra.Client.App.Gui.TMPartnerTips)">
            <summary>
            todoComment
            </summary>
            <param name="ATip"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.TMPartner.CheckTipStatus(Ict.Petra.Client.App.Gui.TMPartnerTips,System.Char)">
            <summary>
            todoComment
            </summary>
            <param name="ATip"></param>
            <param name="ASetViewedStatus"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.TMPartner.CheckTipStatus(Ict.Petra.Client.App.Gui.TMPartnerTips)">
            <summary>
            todoComment
            </summary>
            <param name="ATip"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.TMPartner.CheckTipViewed(Ict.Petra.Client.App.Gui.TMPartnerTips)">
            <summary>
            todoComment
            </summary>
            <param name="ATip"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.TMPartner.SetTipStatus(Ict.Petra.Client.App.Gui.TMPartnerTips,System.Char)">
            <summary>
            todoComment
            </summary>
            <param name="ATip"></param>
            <param name="ASetStatus"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.TMPartner.SetTipViewed(Ict.Petra.Client.App.Gui.TMPartnerTips)">
            <summary>
            todoComment
            </summary>
            <param name="ATip"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.TMPartner.SetTipNotViewed(Ict.Petra.Client.App.Gui.TMPartnerTips)">
            <summary>
            todoComment
            </summary>
            <param name="ATip"></param>
        </member>
        <member name="M:Ict.Petra.Client.App.Gui.TUserTips.TMPartner.GetTipsUserDefaultValue">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
