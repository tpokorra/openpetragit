<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ict.Petra.Client.MPartner.Logic</name>
    </assembly>
    <members>
        <member name="T:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.ULogic">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.FParentForm">
            <summary>Holds a reference to the Form that uses this Class.</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.FDataGrid">
            <summary>Holds a reference to the DataGrid that is used to display the records</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.FPartnerKey">
            <summary>The PartnerKey of the currently selected Row in the DataGrid</summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.CreateColumns(System.Data.DataTable,System.Boolean,System.Boolean,System.Collections.ArrayList)">
            <summary>
            constructor
            </summary>
            <param name="ASourceTable"></param>
            <param name="ADetailedResults"></param>
            <param name="ASearchForActivePartners"></param>
            <param name="AVisibleFields"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.DetermineCurrentEmailAddress">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.DetermineCurrentLocationPK">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.DetermineCurrentPartnerClass">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.DetermineCurrentPartnerKey">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.DetermineCurrentFoundationStatus(System.Boolean@)">
            <summary>
            Retrieves from the server the value if the selected partner is a foundation.
            </summary>
            <param name="AIsFoundation">True if the partner (organisation) is a foundation. Otherwise false.</param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.CanAccessPartner(System.Int64)">
            <summary>
            Checks if the current user can access this Partner.
            </summary>
            <param name="APartnerKey">The PartnerKey to check. Pass in -1 to use the
            PartnerKey of the currently selected Partner in the Search Result Grid.</param>
            <returns>True if the Partner can be accessed, otherwise false.</returns>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.DataGrid">
            <summary>DataGrid that is used to display the records</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.ParentForm">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.PartnerKey">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TPartnerFindScreenLogic.CurrentDataRow">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.TMenuFunctions">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.CopyPartnerKeyToClipboard">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.DeletePartner">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.DuplicateAddressCheck">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.ExportPartner">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.ImportPartner">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.MergeAddresses">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.MergePartners">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenDonorGiftHistory(System.Windows.Forms.IWin32Window)">
            <summary>
            todoComment
            </summary>
            <param name="AOwner"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenExtracts">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenWorkerField">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenRecipientGiftHistory(System.Windows.Forms.IWin32Window)">
            <summary>
            todoComment
            </summary>
            <param name="AOwner"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.PrintPartner">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenPartnerContacts">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenPartnerFinanceDetails">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenPartnerInterests">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenPartnerQuickView">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenPartnerRelationships">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenPartnerReminders">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.OpenPersonnelIndivData">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.SendEmailToPartner">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.SubscriptionCancellation">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TMenuFunctions.SubscriptionExpiryNotices">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.TPartnerNewDialogScreenLogic">
            <summary>
            Contains logic for the Partner New Dialog.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerNewDialogScreenLogic.CreateColumns(Ict.Common.Controls.TSgrdDataGrid,System.Data.DataTable)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="ASourceTable"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerNewDialogScreenLogic.DetermineCurrentSitePartnerKey(Ict.Common.Controls.TSgrdDataGrid)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerNewDialogScreenLogic.DetermineInitiallySelectedSite(System.Data.DataView,System.Int64,System.Int32@,System.Int64@)">
            <summary>
            todoComment
            </summary>
            <param name="AGridDataView"></param>
            <param name="APreselectedSiteKey"></param>
            <param name="ARowNumber"></param>
            <param name="ASiteKey"></param>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TPartnerNewDialogScreenLogic.SiteKey">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic">
            <summary>
            Contains logic for the PartnerType Add/Remove Family Members Propagation Selection Dialog.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.StrWarningOnColumnChangingAdd">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.StrWarningOnColumnChangingRemove">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.StrMessageBoxTitleWarning">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.StrTypeCodeCostCentre">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.StrPartnerHasCostCentreLink1">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.StrPartnerHasCostCentreLink2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.StrPartnerHasCostCentreLinkTitle">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.FTypeCodeModifyName">
            <summary>Column names for the FFamilyMembersDT table. They get initialised in InitialisePartnerTypeFamilyMembers.</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.FResultPartnerKeyName">
            <summary>Column names for the FFamilyMembersResultDT table. They get initialised in InitialisePartnerTypeFamilyMembers.</summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.AddRowToFamilyMembersPromotionTable(System.Int64)">
             <summary>
             This procedure adds a new datarow to the result table if the row with the
             specified values cannot be found in it.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.ChangeCheckedStateForAllRows(System.Boolean)">
             <summary>
             This procedure changes the State of the datarow.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.ChangeCheckedStateForRow(System.Int32,System.Boolean@)">
            <summary>
            This procedure changes the State of the datarow. This function is called
            from the UserControl. It contains several tests to determine whether the
            state of a CheckBox in the UserContro should be changed or not. If the state
            should be changed this routine marks it for change. If the state should not
            be changed a message is displayed. It basically draws a tick mark into the
            checkbox if necessary.
            </summary>
            <param name="ARow">row number.
            </param>
            <param name="AChanged"></param>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.CheckedStateForRowChanging(System.Data.DataColumnChangeEventArgs@)">
             <summary>
             This procedure does the actual changing of the CheckBox state.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.CreateColumns(Ict.Common.Controls.TSgrdDataGrid,System.Data.DataTable,System.String)">
             <summary>
             This procedure creates the colums of the DataGrid displayed
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.InitialisePartnerTypeFamilyMembers(Ict.Petra.Shared.MPartner.Partner.Data.PartnerEditTDSFamilyMembersTable)">
             <summary>
             This procedure initializes this System.Object.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.RemoveRowFromFamilyMembersPromotionTable(System.Int64)">
             <summary>
             This procedure adds a new datarow to the result table if the row with the
             specified values cannot be found in it.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.ResetCheckedStatusAfterSingleClick(System.Int32)">
            <summary>
            This procedure resets the Checked status immedieatly after the Single Click
            event.
            </summary>
            <param name="ARow">row number.
            </param>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.DetermineCurrentFamilyMemberPartnerKey(Ict.Common.Controls.TSgrdDataGrid)">
             <summary>
             This function determines the current PartnerKey
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.DeterminePartnerKeyFromRowNumber(System.Int32)">
             <summary>
             This function determines the current PartnerKey
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.GetResultTable">
             <summary>
             This function returns the Result table.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.FamilyMembersDV">
             <summary>
             This property handles the datasource of this dialogue
            
             </summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.TypeCode">
             <summary>
             This property handles the TypeCode property
            
             </summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.DataGrid">
             <summary>
             This property handles the TypeCode property
            
             </summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TPartnerTypeFamilyMembersPropagationSelectionLogic.PartnerEditUIConnector">
             <summary>
             This property handles the PartnerEditUIConnector property
            
             </summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.Resourcestrings">
            <summary>
            Contains resourcetexts that are used in the Petra Partner Module.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorNeedToSavePartner1">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorNeedToSavePartnerTitle">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorFindNewAddress2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorExportPartner2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorPrintPartner2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorChangeFamily2">
            <summary>todoComment</summary>
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorMaintainContacts2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorDeletePartner2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorMaintainField2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorMaintainFamilyMembers2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorMaintainFinanceDetails2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorMaintainDonorGiftHistory2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorMaintainRecipientGiftHistory2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorMaintainInterests2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorMaintainIndividualData2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorMaintainRelationships2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorMaintainReminders2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorCopyAddress2">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorNoEmailAddressForThisPartner">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorNoValidEmailAddressForThisPartner">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrErrorNoEmailAddressForThisPartnerTitle">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrDetails">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrMergedPartnerNotPossible">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrEmailAddressHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrAddress1Helptext">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrAddress2Helptext">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrAddress3Helptext">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrCityHelptext">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPostCodeHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrCountyHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrCountryHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrLocationKeyHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrLocationKeyExtraHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrLocationKeyButtonFindHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrMailingOnlyFindHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPhoneNumberFindHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnerNameFindHelptext">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPersonalNameFindHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnerKeyFindHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrOMSSKeyFindHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrActivePartnersFindHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrAllPartnersFindHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnersAddedToExtractText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnersAddedToExtractPluralText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnersAddedToExtractTitle">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrSearching">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrStoppingSearch">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrSearchStopped">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrSearchResult">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrNoCriteriaSpecified">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrSearchButtonHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrClearCriteriaButtonHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrNewButtonHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrEditButtonHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrViewButtonHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrAcceptButtonHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrCancelButtonHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrResultGridHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrDetailedResultsHelpText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrFamilyMembersMenuItemText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrFamilyMenuItemText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPersonnelPersonMenuItemText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPersonnelUnitMenuItemText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrTransferringDataForPageText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrNoPartnerSelectedText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrFoundText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrNoRecordsFound1Text">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrNoRecordsFound2Text">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrSearchButtonText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrSearchButtonStopText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrSearchMenuItemStopText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnerOrLocationNotExistantText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnerOrLocationNotExistantTextReRunSearchText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnerOrLocationNotExistantTitle">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnerFindSearchTargetText">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnerFindSearchTarget2Text">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.Resourcestrings.StrPartnerFindSearchTargetPluralText">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.Logic.TShepherdChurchFormLogic">
            <summary>
            Description of TShepherdChurchFormLogic.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.Logic.TShepherdChurchFormLogic.#ctor(System.String,Ict.Petra.Client.CommonForms.Logic.IPetraShepherdConcreteFormInterface)">
            <summary>Constructor</summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.Logic.TShepherdChurchFormLogic.SkipFirstShepherdPage">
            <summary>
            Skips the first page of the Shepherd ('Ledger Selection')
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.Logic.TShepherdFamilyFormLogic">
            <summary>
            Description of TShepherdFamilyFormLogic.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.Logic.TShepherdFamilyFormLogic.#ctor(System.String,Ict.Petra.Client.CommonForms.Logic.IPetraShepherdConcreteFormInterface)">
            <summary>Constructor</summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.Logic.TShepherdFamilyFormLogic.SkipFirstShepherdPage">
            <summary>
            Skips the first page of the Shepherd ('Ledger Selection')
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic">
            <summary>
            FamilyID logic for the UC_FamilyMembers UserControl.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.StrFamilyIDChangeDone1stLine">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.StrFamilyIDChangeDoneWasChangedFrom">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.StrFamilyIDChangeDoneTo">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.StrFamilyIDChangeDoneTitle">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.FGridEdited">
            <summary>isEdited: Boolean;</summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.LoadDataOnDemand">
             <summary>
             Loads FamilyMembers Data from Petra Server into FMainDS.
            
             </summary>
             <returns>true if successful and Family has Family Members, otherwise false.
             //DevAge.ComponentModel.Validator;</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.IsMaximum">
            <summary>
            Checks if the selected FamilyID is maximum.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.IsMinimum">
            <summary>
            Checks if the selected FamilyID is minimun.
            Checks, if the Family ID of selectedrow is the smallest of FamilyID:s.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.MembersInFamilyExist">
            <summary>
            returns true if Family has members (in the datagrid)
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.OnRecalculateScreenParts(Ict.Common.TRecalculateScreenPartsEventArgs)">
            <summary>
            Custom Event
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.OpenComboBox">
            <summary>
            enables the FamilyID edit combobox. This causes no errors, but uses the default list for FamilyID:s (1,2,3,4,5,6,7,8,9,0)
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.PrintOrder">
            <summary>
            returns Arraylist that has FamilyID and PartnerID pairs. For testing purposes.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.PromoteFamilyID">
            <summary>
            Promotes selected ID (and demotes the FamilyID next (up) to selected FamilyID
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.ShowStrMessage(System.String,System.String[])">
            <summary>
            Shows MessageBox, that has several lines on it.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.ShowArraylistMembers(System.Collections.ArrayList)">
            <summary>
            Shows the arraulist members in a combobox
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.ShowStrMessage(System.String[])">
            <summary>
            todoComment
            </summary>
            <param name="Lines"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.CreateColumns">
            <summary>
            Sets the order of colums
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.DataBindGrid">
             <summary>
             Sets up the DataBinding of the Grid.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.DataGridExist">
            <summary>
            returns true, if DataGrid is created
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.ChangeCheckedStateForRow(System.Int32)">
            <summary>
            Changes the state of checked row
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.GetComboBoxValues(System.Int32[]@)">
            <summary>
            gets asd sets the combox values. Redraws the grids last column. causes errors.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.GetFamilyID">
            <summary>
            returns the selected Family ID
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.GetNumberOfRows">
            <summary>
            Returns the number of rows in datagrid (number of Family members)
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.GetPartnerKeySelected">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.GetRowSelected">
            <summary>
            Returns the PartnerKey that's selected
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.GetRowSelected(System.Int32@,System.Int64@)">
            <summary>
            Finds out the number of row, and it's Partnerkey in datagrid that's selected.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.DemoteFamilyID">
            <summary>
            Demotes selected ID (and promotes the FamilyID next (lower) to selected FamilyID
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.DisableEditing">
            <summary>
            Disables the editing mode of FamilyID column
            </summary>
            <returns>void</returns>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.MainDS">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.DataGrid">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.PartnerEditUIConnector">
            <summary>used for passing through the Clientside Proxy for the UIConnector</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.GridEdited">
            <summary>todoComment</summary>
        </member>
        <member name="E:Ict.Petra.Client.MPartner.TUCFamilyMembersLogic.RecalculateScreenParts">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.TUC_PartnerDetailsBankLogic">
             <summary>
             UserControl for editing Partner Details for a Partner of Partner Class  BANK.
            
             When dealing with this grid one has to consider that the Netherland do not     know bank branches and that Credit Cards do not have branches as well.     Last time I checked how many accounts one bank in the Netherlands had     I ended up
             with some 9756. I was also puzzled what use this grid may have.     It is very tedious to find the right bank account from some 9000 bank     accounts. Therefore the paged grid would be needed. But Rob decided that     we currently do not
             build this grid into this screen, since this sreen     was hardly used anyway. We are happy to wait for the first complaints.
             </summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUC_PartnerDetailsBankLogic.MainDS">
             <summary>
             FBankingDetailsKey:        System.Int32;    FDataGrid:                 TSgrdDataGrid;    FPartnerEditUIConnector:   IPartnerUIConnectorsPartnerEdit;    FPBankingDetailsDT:        PBankingDetailsTable;    FPBankingDetailsDV:
             System.Data.DataView;    FPPartnerBankingDetailsDT: PPartnerBankingDetailsTable;    FPPartnerBankingDetailsDV: System.Data.DataView;    FRecalculateScreenParts:   TRecalculateScreenPartsEventHandler; Custom Events    procedure
             OnRecalculateScreenParts(e: TRecalculateScreenPartsEventArgs);
             This property is used to hold the main DataSet used in this screen
            
             </summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic">
            <summary>
            Contains logic for the UC_PartnerFoundation UserControl.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.FProposalDetailSequence">
            <summary>private int FProposalSequence;</summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.CreateColumns(Ict.Common.Controls.TSgrdDataGrid,Ict.Petra.Shared.MPartner.Partner.Data.PFoundationDeadlineTable)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="ASourceTable"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.CreateColumns(Ict.Common.Controls.TSgrdDataGrid,Ict.Petra.Shared.MPartner.Partner.Data.PFoundationProposalTable)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="ASourceTable"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.CreateColumns(Ict.Common.Controls.TSgrdDataGrid,Ict.Petra.Shared.MPartner.Partner.Data.PFoundationProposalDetailTable)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="ASourceTable"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.DeleteProposalDetail(Ict.Petra.Shared.MPartner.Partner.Data.PFoundationProposalDetailRow)">
            <summary>
            todoComment
            </summary>
            <param name="ProposalDetail"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.Get_LastSubmittedDate">
             <summary>
             Gets the date a proposal was last submitted.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.Get_NextReminderDate">
             <summary>
             Gets the next reminder date, if any.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.Get_NextSubmitDate">
             <summary>
             Calclulates a date when the next proposal can be submitted.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.LoadDataOnDemand">
             <summary>
             Loads Foundation Data (multiple DataTables) from Petra Server into FMainDS.
            
             </summary>
             <returns>true if successful, otherwise false.
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.NewProposalDetail(Ict.Petra.Shared.MPartner.Partner.Data.PFoundationProposalRow)">
            <summary>
            todoComment
            </summary>
            <param name="Proposal"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.PopulateDeadlines(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="AReviewFrequency"></param>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.MainDS">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.PartnerEditUIConnector">
            <summary>used for passing through the Clientside Proxy for the UIConnector</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.SubmitByDates">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.SubmitByDataView">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.ProposalsDataView">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerFoundationLogic.ProposalDetailsDataView">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic">
            <summary>
            Contains logic for the UC_PartnerInterests UserControl.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.StrDeleteQuestionLine1">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.StrDeleteQuestionNotShared">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.StrDeleteQuestionTitle">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.FPartnerEditUIConnector">
            <summary>Holds a reference to the Proxy System.Object of the Serverside UIConnector</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.FIsRecordBeingAdded">
            <summary>true if a record is being added, otherwise false</summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.AllowDelete(Ict.Common.Controls.TSgrdDataGrid,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="YesNo"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.FireRecalculateScreenPartsEventArgs">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.GetInterestCategory(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="Category"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.GetInterestNumber">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.GetSelectedDataRow(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="AInterest"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.LoadDataOnDemand">
             <summary>
             Loads Interest Data from Petra Server into FMultiTableDS.
            
             </summary>
             <returns>true if successful, otherwise false.
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.LoadInterests">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.OnRecalculateScreenParts(Ict.Common.TRecalculateScreenPartsEventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.ProcessEditedRecord(Ict.Petra.Shared.MPartner.Partner.Data.PPartnerInterestRow@)">
            <summary>
            todoComment
            </summary>
            <param name="APartnerInterestRow"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.DetermineRecordToSelect(System.Data.DataView,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ADataView"></param>
            <param name="tmpInterest"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.RefreshDataGrid(Ict.Common.Controls.TSgrdDataGrid@,System.Data.DataTable,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="tmpDT"></param>
            <param name="IsNew"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.EditRecord">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.DataBindGrid(Ict.Common.Controls.TSgrdDataGrid)">
             <summary>
             DataBinds the Grid.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.DetermineCurrentInterest(Ict.Common.Controls.TSgrdDataGrid,System.Int32)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="ARow"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.DeleteRecord(System.Int64,System.Int32)">
            <summary>
            This function probably deletes the record in the database
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.DetermineCurrentPartnerInterestKey(System.Int64@,System.Int32@,System.String@)">
            <summary>
            old function DetermineCurrentPartnerInterestKey(AGrid: TSgrdDataGrid; ARow: Int32): int64;
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.DetermineCurrentInterest(Ict.Common.Controls.TSgrdDataGrid)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.DetermineInitiallySelectedInterest(Ict.Common.Controls.TSgrdDataGrid,System.Int32@,System.String@)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="ARowNumber"></param>
            <param name="AInterest"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.DetermineNewPrimaryKeys(System.Int64@,System.Int32@)">
            <summary>
            Useful if the user happens to add an interest number that is already listed */
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.DetermineNextInterest(System.Int32,System.String@,System.String@)">
            <summary>
            todoComment
            </summary>
            <param name="InterestNumber"></param>
            <param name="Interest"></param>
            <param name="Category"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.DetermineNextInterestKey">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.CreateColumns(Ict.Common.Controls.TSgrdDataGrid)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.CreateNewInterestRow(System.Int64,System.Int32,System.String,System.String)">
            <summary>
            Creates a new row in the grid
            </summary>
            <returns>void</returns>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.MultiTableDS">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.PartnerEditUIConnector">
            <summary>used for passing through the Clientside Proxy for the UIConnector</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.IsRecordBeingAdded3">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.Interest">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.InterestNumber">
            <summary>todoComment</summary>
        </member>
        <member name="E:Ict.Petra.Client.MPartner.TUCPartnerInterestsLogic.RecalculateScreenParts">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic">
            <summary>
            Contains logic for the UC_PartnerSubscriptions UserControl.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.StrDeleteQuestionLine1">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.StrDeleteQuestionShared">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.StrDeleteQuestionNotShared">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.StrDeleteQuestionTitle">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.StrSubscriptionValueCancelled">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.StrSubscriptionValueExpired">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.StrPartnerReActivationBecauseOfNewSubscr">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.StrInactive">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.FPartnerEditUIConnector">
            <summary>Holds a reference to the Proxy System.Object of the Serverside UIConnector</summary>
        </member>
        <member name="F:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.FIsRecordBeingAdded">
            <summary>true if a record is beeing added, otherwise false</summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.AllowDelete(Ict.Common.Controls.TSgrdDataGrid,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="YesNo"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.CancelAllSubscriptionsCount">
             <summary>
             Counts all cancelable Subscriptions.
            
             </summary>
             <returns>Number of cancelable Subscriptions
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.CancelAllSubscriptions(System.String,System.DateTime)">
             <summary>
             Cancels all Subscriptions (that are not already CANCELED or EXPIRED).
            
             </summary>
             <param name="AReasonEnded">Text that gives the reason for ending the Subscriptions</param>
             <param name="ADateEnded">Date when the Subscriptions should end (can be empty)</param>
             <returns>ArrayList holding Publication Codes of the Subscriptions that were
             canceled
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.CreateTempSubscriptionsTable">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.FillTempSubscriptionsTable">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.FireRecalculateScreenPartsEventArgs">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.GetDescriptionForPublication(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="PublicationCode"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.AddSubscriptions(System.Int32,Ict.Petra.Shared.MPartner.Mailroom.Data.PSubscriptionTable)">
            <summary>
            todoComment
            </summary>
            <param name="ExtractID"></param>
            <param name="ASubscriptionTable"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.GetSelectedDataRow(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="APublicationCode"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.GetSubscriptionAddingResults(System.Data.DataTable@,Ict.Common.Verification.TVerificationResultCollection@,Ict.Common.TSubmitChangesResult@)">
            <summary>
            todoComment
            </summary>
            <param name="AlreadySubscribedPartnersDT"></param>
            <param name="AVerificationResult"></param>
            <param name="ASubmitChangesResult"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.IsPublicationValid">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.LoadDataOnDemand">
             <summary>
             Loads Subscription Data from Petra Server into FMultiTableDS.
            
             </summary>
             <returns>true if successful, otherwise false.
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.LoadPublications">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.ProcessEditedRecord(Ict.Petra.Shared.MPartner.Mailroom.Data.PSubscriptionRow@)">
            <summary>
            todoComment
            </summary>
            <param name="ASubscriptionRow"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.DetermineRecordToSelect(System.Data.DataView,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ADataView"></param>
            <param name="tmpPublicationCode"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.Dispose">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.PublicationAlreadyExcist(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ApublicationCode"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.RefreshDataGrid(Ict.Common.Controls.TSgrdDataGrid,System.Data.DataTable,System.Boolean)">
            <summary>
            function DeleteSubscriptionRow(AGrid: TSgrdDataGrid): Boolean;
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.RefreshDataGridEdit(Ict.Common.Controls.TSgrdDataGrid,System.String,System.String,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="pub"></param>
            <param name="SB"></param>
            <param name="isFreeSubscription"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.DeterminePublicationCost(System.Decimal@,System.String@)">
            <summary>
            todoComment
            </summary>
            <param name="APublicationCost"></param>
            <param name="ACurrencyCode"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.EditRecord">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.DataBindGrid(Ict.Common.Controls.TSgrdDataGrid)">
             <summary>
             DataBinds the Grid.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.DetermineCurrentPublicationCode(Ict.Common.Controls.TSgrdDataGrid,System.Int32)">
            <summary>
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.DeleteRecord(System.String,System.Int64)">
            <summary>
            AGrid.SelectedDataRows[0].Delete(); */
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.DetermineCurrentPartnerKey">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.DetermineCurrentPublicationCode(Ict.Common.Controls.TSgrdDataGrid)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.DetermineInitiallySelectedPublication(Ict.Common.Controls.TSgrdDataGrid,System.Int32@,System.String@)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
            <param name="ARowNumber"></param>
            <param name="APublicationCode"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.DetermineNewPrimaryKeys(System.Int64@,System.String@)">
            <summary>
            todoComment
            </summary>
            <param name="Partnerkey"></param>
            <param name="PublicationCode"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.CreateColumns(Ict.Common.Controls.TSgrdDataGrid)">
            <summary>
            todoComment
            </summary>
            <param name="AGrid"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.CreateNewSubscriptionRow(System.Int64,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="Partnerkey"></param>
            <param name="PublicationCode"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.RemoveLastRowAdded">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.MultiTableDS">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.PartnerEditUIConnector">
            <summary>used for passing through the Clientside Proxy for the UIConnector</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.IsRecordBeingAdded3">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.PublicationCode">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.AsyncExecProgress">
            <summary>todoComment</summary>
        </member>
        <member name="E:Ict.Petra.Client.MPartner.TUCPartnerSubscriptionsLogic.RecalculateScreenParts">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.TDelegatePartnerTypePropagationSelection">
            <summary>Delegate declaration</summary>
        </member>
        <member name="T:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic">
            <summary>
            Contains logic for the UC_PartnerTypes UserControl.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.LoadDataOnDemand">
            <summary>
            Loads Partner Types Data from Petra Server into FMainDS.
            </summary>
            <returns>true if successful, otherwise false.</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.LoadTypes">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.OnRecalculateScreenParts(Ict.Common.TRecalculateScreenPartsEventArgs)">
            <summary>
            Custom Event
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.PerformPartnerTypeAddOrRemoval(System.Data.DataRow,System.Boolean@)">
            <summary>
            todoComment
            </summary>
            <param name="AChangingPartnerTypeRow"></param>
            <param name="AIsRemoval"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.DetermineRowToSelect(System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ATypeCode"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.CreateTempPartnerTypesTable">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.FillTempPartnerTypesTable">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.InitialiseDelegatePartnerTypePropagationSelection(Ict.Petra.Client.MPartner.TDelegatePartnerTypePropagationSelection)">
            <summary>
            todoComment
            </summary>
            <param name="ADelegate"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.ChangeCheckedStateForRow(System.Int32)">
            <summary>
            todoComment
            </summary>
            <param name="ARow"></param>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.CreateColumns">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.DataBindGrid">
            <summary>
            Sets up the DataBinding of the Grid.
            </summary>
            <returns>void</returns>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.MultiTableDS">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.DataGrid">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.PetraUtilsObject">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.PartnerEditUIConnector">
            <summary>used for passing through the Clientside Proxy for the UIConnector</summary>
        </member>
        <member name="E:Ict.Petra.Client.MPartner.TUCPartnerTypesLogic.RecalculateScreenParts">
            <summary>todoComment</summary>
        </member>
    </members>
</doc>
