<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ict.Petra.Client.CommonControls.Gui</name>
    </assembly>
    <members>
        <member name="T:Ict.Petra.Client.CommonControls.TControlMode">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TControlMode.Normal">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TControlMode.Matches">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TMatches">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TMatches.BEGINS">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TMatches.ENDS">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TMatches.CONTAINS">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TMatches.EXACT">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TRemoveJokersFromTextBox">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.SplitButton">
            <summary>
            A UserControl that is based on the C# Control 'SplitButtonBase'.
            It extends it by allowing pre-configured context menus
              (selected by using the ControlMode proeprty)
            It also adds a SelectedValue property, and the means to show the context menu
              from outside the control.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.SplitButton.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.SplitButton.ShowContextMenu">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.SplitButton.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.SplitButton.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.SplitButton.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
            <summary>
            <summary> Required method for Designer support  do not modify the contents of this method with the code editor. </summary> <summary> Required method for Designer support  do not modify the contents of this method with the code editor.
            </summary>
            </summary>
            <returns>void</returns>
        </member>
        <member name="E:Ict.Petra.Client.CommonControls.SplitButton.RemoveJokersFromTextBox">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.SplitButton.ControlMode">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.SplitButton.SelectedValue">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.SplitButton.AssociatedTextBox">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TCmbAutoPopulated">
            <summary>
            A UserControl that consists of a ComboBox whose entries come from a DataTable
            whose contents can be coming from: Cacheable DataTables, Static DataTables, and
            DataTables which are loaded on demand.
            Next to the ComboBox sits a label that can display a text (eg. description of a
            code that is selected in the ComboBox).
            <para />
            The that should be displayed is selected with the ListTable property.
            The control fetches its list entries on its own from the source of the data that
            is hard-coded with each ListTable!
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.Get_SelectedText">
            <summary>
            todoComment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.SetSelectedString(System.String)">
            <summary>
            set the string that should be selected;
            uses TCmbVersatile.SetSelectedString
            </summary>
            <param name="ASelectedString"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.GetSelectedString">
            <summary>
            get the selected string
            uses TCmbVersatile.GetSelectedString
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.SetSelectedInt32(System.Int32)">
            <summary>
            Selects an item with the given Int32 value in the first column. Selects first element if the Int32 value is not existing.
            uses TCmbVersatile.SetSelectedInt32
            </summary>
            <param name="ANr"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.GetSelectedInt32">
            <summary>
            gets the Int32 value of the selected item, first column
            uses TCmbVersatile.GetSelectedInt32
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.InitialiseUserControl">
            <summary>
            initialise user controls for specific tables
            it might be better to do this in other functions, see also Client/lib/MFinance/gui/FinanceComboboxes.cs
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.InitialiseUserControl(System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            generic function for initialising the user control
            does not depend on table implementations
            </summary>
            <param name="ATable"></param>
            <param name="AValueDBName">name of the column in the table that has the name</param>
            <param name="ADisplayDBName"></param>
            <param name="ADescDBName">name of the column in the table that has the description; can be empty</param>
            <param name="AColumnsToSearch"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.InitialiseUserControl(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            overload
            assume that display is equals value
            </summary>
            <param name="ATable"></param>
            <param name="AValueDBName">name of the column in the table that has the name</param>
            <param name="ADescDBName">name of the column in the table that has the description; can be empty</param>
            <param name="AColumnsToSearch"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.AppearanceSetup(System.Int32[],System.Int32)">
            <summary>
            quick general way of setting the appearance of the combobox
            assumption: the width of the combobox is equal the width of the first column in the list
            assumption: if a value is not greater than 0, the default values are used
            assumption: images are not being used when this function is called
            </summary>
            <param name="AColumnWidth"></param>
            <param name="AMaxDropDownItems"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.AppearanceSetup(Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum)">
            it might be better to do this in other functions, see also Client/lib/MFinance/gui/FinanceComboboxes.cs
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.PerformDataBinding(System.ComponentModel.MarshalByValueComponent,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ADataSource"></param>
            <param name="AColumnName"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.AddNotSetRow(System.String,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="NotSetValue"></param>
            <param name="NotSetDisplay"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.PerformDataBinding">
            <summary>
            todoComment
            Also allow UNBOUND MODE
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.SaveValueNow">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.DropDown">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.Table">
            this allows to set the table manually,
            when it cannot come from a cache because it depends on too many other parameters on the screen
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.SelectedItem">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.SelectedValue">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.ComboBoxWidth">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.Filter">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.ListTable">
            This property determines which cached DataTable should make up the list of
            entries.
        </member>
        <member name="E:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.SelectedValueChanged">
            This Event is thrown when the internal ComboBox throws the SelectedValueChanged Event.
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.SelectedIndex">
            pass through the SelectedIndex property from the combobox
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.Count">
            the number of items in the combobox items list
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum">
            <summary>
            Enumeration for the Designer. Holds the possible values for ListTable.
            No enum prefixes here since these values are shown in the Designer.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.UserDefinedList">
            user defined list; calls InitializeUserControl(DataTable, ...) and AppearanceSetup(Int32[], Int32)
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.AccommodationCodeList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.AcquisitionCodeList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.AddresseeTypeList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.AddressDisplayOrderList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.AddressLayoutList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.AnalysisTypeList">
            <summary>for Finance module, Analysis Attributes</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.BusinessCodeList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.CountryList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.CurrencyCodeList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.DataLabelLookupList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.DenominationList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.DocumentTypeCategoryList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.FrequencyList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.GenderList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.InterestList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.InterestCategoryList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.InternationalPostalTypeList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.LanguageCodeList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.LocationTypeList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.MaritalStatusList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.PartnerClassList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.PartnerStatusList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.FoundationOwnerList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.ProposalStatusList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.ProposalSubmissionTypeList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.ProposalReviewFrequencyList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.ProposalSubmitFrequencyList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.PublicationList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.ReasonSubscriptionCancelledList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.ReasonSubscriptionGivenList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.RelationList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.RelationCategoryList">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.SubscriptionStatus">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TCmbAutoPopulated.TListTableEnum.UnitTypeList">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck">
             <summary>
             This unit provides an autocomplete ComboBox
             Short description:
             This extender provider gets the maximum length of a TextBox string. The
             datasource of the TextBoxes has to be in the database and the Petra datastore.
             This extender provider uses the following static function:
             - TPetraDataStore.GetLengthOfTableField(mTableName, mColumnName)
             User Guide:
             In order to use this TextBox check you need to perform the following steps in
             the order given below:
             1 Select the TexpTextBoxStringLengthCheck from the category "General" of
               the Tool Palette and drag it onto the UserControl
             2 Give this new component a name (here refered to as Name)
             3 Add the following lines into the routine, where the databinding takes place
               after all other controls of this UserControl have been databound:
            
                // Extender Provider
                this.&lt;Name&gt;.RetrieveTextboxes(Self);
            
             4 Recompile the project the UserControl belongs to.
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.strFoundControlKey">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.strFoundControlTextBox">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.strFoundControlMaxLength">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.strFoundControlTableName">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.strFoundControlColumnName">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.strFoundControlDataSource">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.strExceptionRegisterHost">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.strExceptionInitialisation">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.strUnknownControl">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.#ctor">
             <summary>
             This is the constructor of this class.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.#ctor(System.ComponentModel.IContainer)">
             <summary>
             This is the constructor of this class.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.InitializeFoundControlTable">
             <summary>
             This procedure initializes a table where all the data from the forms
             textboxes are stored.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.InitProvider">
             <summary>
             This procedure does some initializations for this class
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.IsControlAllowed(System.Windows.Forms.Control)">
             <summary>
             This procedure checks whether the control in its parameters contains a
             textbox, if so the textboxes detail are added to a table, if not it
             it does nothing.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.AddTextBoxToFoundControlTable(System.String,System.Windows.Forms.Control)">
             <summary>
             This procedure adds the controls to the table.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.CanExtend(System.Object)">
             <summary>
             This function is called from the designer in order to evaluate when and
             when not to display any new properties.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.CheckForExtenderProvider(System.Windows.Forms.UserControl)">
             <summary>
             This procedure checks for the ExtenderProvider System.Object in its host. If
             the UserControl contains this type of ExtenderProvider it returns TRUE,
             if not it returns FALSE.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.ControlIsEnabled(System.Windows.Forms.Control)">
             <summary>
             This function checks whether the control is disabled (enabled = false)
             and/or ReadOnly (ReadOnly = true). Then this functions returns a FALSE.
             The function returns TRUE when (ReadOnly = FALSE AND Enabled = TRUE).
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.RegisterExtenderProvider(System.Windows.Forms.UserControl)">
             <summary>
             This procedure registers this very ExtenderProvider System.Object to its host.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.RetrieveDataSourceDetails(System.Windows.Forms.Binding,System.Data.DataRow)">
             <summary>
             This procedure retrieves the datastructure of the textboxes
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.ImposeMaxLength">
             <summary>
             This procedure retrieves the DataBindings of the TextBoxes and imposes the
             correct MaxLength.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.SetMaxLength(System.Windows.Forms.Control,System.Int32)">
             <summary>
             This procedure sets the MaxLength property of the textbox control.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.RetrieveTextBoxMaxLength(System.Data.DataRow)">
             <summary>
             This procedure retrieves the length of the textbox specified in the datarow
             of the UFoundControlTable table.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.GetTextBox(System.Windows.Forms.Control)">
             <summary>
             This procedure checks whether the control in its parameters contains a
             textbox, if so the textboxes detail are added to a table, if not it
             it does nothing.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.RetrieveTextboxes(System.Object)">
             <summary>
             This procedure ensures that all textboxes in the form have the MaxLength
             property set to the value given from the database.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.ExtenderHost">
             <summary>
             This property gets or sets the creator.
            
             </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TexpTextBoxStringLengthCheck.ExtenderHostName">
             <summary>
             This property gets or sets the creator.
            
             </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TPGE_PartnerStatusComboBox">
             <summary>
             The TPGE_PartnerStatusComboBox class is a 'value editor' that provides a
             ComboBox-like Editor for Partner Statuses in a PropertyGrid.
            
             The entries for the Partner Statuses list come from a DataTable in the
             Client DataCache and exclude some statuses.
            
             @Comment Uses the TUITE_ListBox class to actually draw the DropDown.
             </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TUITE_ListBox">
             <summary>
             Allows runtime creation of custom list boxes in a PropertyGrid control.
            
             @Comment First used in the (WinForms) Finance Hierarchy Demo screen.
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TUITE_ListBox.ListItemsArray">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUITE_ListBox.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUITE_ListBox.DrawDropDown(System.Collections.ArrayList)">
            <summary>
            todoComment
            </summary>
            <param name="al"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUITE_ListBox.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            todoComment
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUITE_ListBox.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            todoComment
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TPGE_PartnerStatusComboBox.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel">
             <summary>
             Petra CustomControls
             This unit provides a TextBox with adjacent Button and Label. The TextBox is
             prepared for AutoPopulation
            
             Short description on how to add other TextBox types:
              1. Add the new type to the following list: "TListTableEnum"
              2. Add the code for the appearance of this type to the function "AppearanceSetup"
              3. Add the code for the initialization of this type to the function "InitialiseUserControl"
              4. Add the code for user entry varification to the function "OnDataboundTableColumnChanged"
              5. Add the code for the button action to the function "txtAutoPopulated_ButtonClick"
              6. Add the code for a formating routine if needed in the function "txtAutoPopulated_FormatText"
              7. Add the code for the initial display of the Label in the function "txtAutoPopulated_Paint"
                 This step is only necessary if you do not use a LookUpTable!
              8. Add the code for the Label display to the function "txtAutoPopulated_SetLabel"
              9. Add the code for databinding to the function "PerformDataBinding"
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.UNIT_ALLOWED_DATATYPES">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.UNIT_DEFAULT_HEIGHT">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.UNIT_NO_DATA_MESSAGE">
            <summary>Error message</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.UNIT_NO_VALID_OCCUPATIONCODE">
            <summary>Error message</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.UNIT_NO_VALID_PARTNERKEY">
            <summary>Error message</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.UNIT_DELIMITERS_PARTNERCLASS">
            <summary>Error message</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FListTable">
            <summary>private bool FAutomaticallyUpdateDataSource;</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FUserControlInitialised">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FASpecialSetting">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FButtonWidth">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FDefaultButtonWidth">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FTextBoxWidth">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FDefaultTextBoxWidth">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FButtonText">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FDefaultButtonText">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FButtonTextAlign">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FDefaultButtonTextAlign">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FPartnerClass">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FValueMember">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FVerifiedString">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FLookUpColumnIndex">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FDisplayLabelString">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FErrorData">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FPreventFaultyLeaving">
            <summary></summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FVerificationResultCollection">
            <summary></summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.#ctor">
            <summary>
            Private Declarations }
            This is the constructor of this class.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.AppearanceSetup(Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.TListTableEnum)">
            <summary>
            This procedure sets the appearance of this control according to the data contained.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.InitialiseUserControl">
            <summary>
            This procedure initialises the user control according to the presets.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.FormatPartnerClassString(System.String)">
            <summary>
            Property Fields
            This function ensures that the format of the PartnerClass property string
            is correctly passed to 4GL. It basicly removes all blanks and changes the
            case to upper case. The following would be for example a correct
            PartnerClass string: PERSON,FAMILY
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.OnDataboundTableColumnChanged(System.Object,System.Data.DataColumnChangeEventArgs)">
            <summary>
            This procedure verifies the changes of the DataSource.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.TextHasChanged(System.Object,System.EventArgs)">
            <summary>
            Properties
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.OnResize(System.EventArgs)">
            <summary>
            This procedure ensures that the height of this control cannot be changed.
            </summary>
            <param name="e">Event Arguments
            </param>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.ResetLabelText">
            <summary>
            this will update the databound source
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.UpdateDisplayedValue">
            <summary>
            Updates the label for the text button
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.MonitorDataSourceChanges(System.Data.DataView)">
            <summary>
            This function gets DataBinding of this System.Object. The function is used by the
            expTextBoxStringLengthCheck module in order to expand the TextBox properties.
            }//    function  GetTextBoxDataBinding(): System.Windows.Forms.Binding;{***************************************************************************
            This procedure enables the monitoring of changes to the DataSource.
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.PerformDataBinding(System.Data.DataView,System.String)">
            <summary>
            This procedure does the databinding of this user control.
            </summary>
            <returns>void</returns>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.InDesignMode">
            <summary>
            Special property to determine whether our code is running in the WinForms Designer.
            The result of this property is correct even if InitializeComponent() wasn't run yet
            (.NET's DesignMode property returns false in that case)!
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.ASpecialSetting">
            <summary>
            control is in the Special Settings Mode.
            If this function returns TRUE it is in the Special Settings Mode. This
            means the programmer MUST set all Special Settings!!!
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.ButtonWidth">
            <summary>
            ButtonWidth if the typ 'PartnerKey' from the ListTable ListTable property is chosen.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.ButtonText">
            <summary>
            ButtonText if the type 'PartnerKey' from the ListTable property is chosen.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.ButtonTextAlign">
            <summary>
            alignmet of the text that will be displayed in the face of the button.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.ListTable">
            <summary>
            This property determines which cached DataTable should make up the list of entries.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.PreventFaultyLeaving">
            <summary>
            This procedure gets whether the user can leave this control even if entered faulty data.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.MaxLength">
            <summary>
            This property gets or sets the maximum number of characters the user can
            type or paste into the text box control.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.PartnerClass">
            <summary>
            This property determines which cached DataTable should make up the list of
            entries.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.ReadOnly">
            <summary>
            This property determines whether the text in the edit control can be
            changed or not.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.Text">
            <summary>
            This property gets and sets the Text of this control.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.LabelText">
            <summary>
            This property gets the Text of the text box label control.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.TextBoxWidth">
            <summary>
            ButtonWidth if the type 'PartnerKey' from the ListTable property is chosen.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.BorderStyle">
            <summary>
            Sets the BorderStyle of the underlying TextBox.
            </summary>
        </member>
        <member name="E:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.ClickButton">
            <summary>
            This property is used to provide a function which sets the Label''s and TextBox's Texts.
            </summary>
        </member>
        <member name="E:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.PartnerFound">
            <summary>
            This property is used to provide a function which sets the Label''s and TextBox's Texts.
            </summary>
        </member>
        <member name="E:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.ValueChanged">
            <summary>
            This property is used to provide a function which sets the Label''s and TextBox's Texts.
            </summary>
        </member>
        <member name="E:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.VerifyUserEntry">
            <summary>
            This property is used to provide a function which sets the Label''s and TextBox's Texts.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.VerificationResultCollection">
            <summary>
            Here the hosting form has to provide a function to come up with a partner short name.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.AutomaticallyUpdateDataSource">
            <summary>
            This Property allows the control to automaticall update the datasource. You normally DONT want this!
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.ShowLabel">
            <summary>
            This property determines whether the label is blank or not.
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.TListTableEnum">
            <summary>
            Available Types for TtxtAutoPopulatedButtonLabel
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.TListTableEnum.OccupationList">
            <summary>Type occupation list</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.TListTableEnum.PartnerKey">
            <summary>Type partner key</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.TListTableEnum.Extract">
            <summary>Type extract</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TtxtAutoPopulatedButtonLabel.TListTableEnum.Conference">
            <summary>Type conference</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TUC_CountryComboBox">
             <summary>
             A UserControl that consists of a ComboBox with Country Code entries and a
             label to its right that displays the name of the country.
            
             Interesting feature: this control fetches its list entries on its own from
             the Client DataCache!
            
             @Comment Have a look at the UC_PartnerEdit_PartnerTabSet to see how DataBinding
                      works with this UserControl (it's quite easy!)
                      Important: Always DataBind this UserControl to a DataColumn of a
                      DataTable - otherwise a changed Country selection will not be
                      automatically reflected in a DataTable/DataSet!
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.InitialiseUserControl">
            <summary>
            Initialise the user control
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.AddNotSetRow(System.String,System.String)">
            <summary>
            Adds a row to the combo box repesenting the "not set" state
            </summary>
            <param name="NotSetValue">The Value when NotSet state is true</param>
            <param name="NotSetDisplay">The DisplayedText when NotSet state is true</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.SelectNotSetRow">
            <summary>
            Selects the special NotSet row, if enabled.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.NoValueSet">
            <summary>
            Test for whether the control is in NotSet state
            </summary>
            <returns>True if the control is "NotSet"</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.PerformDataBinding(System.ComponentModel.MarshalByValueComponent,System.String)">
            <summary>
            DataBind user control to the specified source and column
            </summary>
            <param name="ADataSource">The source to bind to</param>
            <param name="AColumnName">The column to bind to</param>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.SelectedValue">
            <summary>the selected country code</summary>
        </member>
        <member name="E:Ict.Petra.Client.CommonControls.TUC_CountryComboBox.SelectedValueChanged">
             <summary>
             This Event is thrown when the internal ComboBox throws the SelectedValueChanged Event.
            
             </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox">
             <summary>
             A UserControl that consists of a ComboBox with Country Code entries and a
             label to its right that displays the name of the country.
            
             Interesting feature: this control fetches its list entries on its own from
             the Client DataCache!
            
             @Comment Have a look at the AddressTab_UserControl to see how DataBinding
                      works with this UserControl (it's quite easy!)
                      Note: DataBinding is currently specific to the 'Locations'
                      DataTable but can easily be extended other DataTables.
                      Important: Always DataBind this UserControl to a DataColumn of a
                      DataTable - otherwise a changed Country selection will not be
                      automatically reflected in a DataTable/DataSet!
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.InitialiseUserControl">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.PerformDataBinding(System.Data.DataTable,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ADataTable"></param>
            <param name="AColumnName"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.PerformDataBinding(System.Data.DataView,System.String)">
            <summary>
            todoComment
            </summary>
            <param name="ADataView"></param>
            <param name="AColumnName"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.PerformDataBinding(System.Data.DataSet,System.Int32)">
            <summary>
            todoComment
            </summary>
            <param name="multiTableDS"></param>
            <param name="LocationKey"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.CmbCountry_Leave(System.Object,System.EventArgs)">
            <summary>
            /  messagebox.show( 'Text changed!'); */
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.CustomDisable">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.CustomEnable">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TUC_CountryLabelledComboBox.Text">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TUC_MultiMotivationDetailSelection">
             <summary>
             A UserControl that allows to select several combinations
             of Motivation Group and Detail entries
            
             This could be implemented with 2 comboboxes and a
             list box to its right that displays the selected Motivations, and 2 buttons to add and remove.
             For the moment it is just implemented as a Checkedlistbox
            
             This is not used anywhere, but could be used in future as a starting point
            
             @Comment This was copied and modified from UC_MultiMotivationDetailSelection.pas
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TUC_MultiMotivationDetailSelection.components">
            <summary>
            Designer variable used to keep track of non-visual components.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_MultiMotivationDetailSelection.Dispose(System.Boolean)">
            <summary>
            Disposes resources used by the form.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_MultiMotivationDetailSelection.InitializeComponent">
            <summary>
            This method is required for Windows Forms designer support.
            Do not change the method contents inside the source code editor. The Forms designer might
            not be able to load this method if it was changed manually.
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_MultiMotivationDetailSelection.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_MultiMotivationDetailSelection.InitialiseUserControl(System.Int32)">
            <summary>
            todoComment
            </summary>
            <param name="ALedgerNumber"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_MultiMotivationDetailSelection.CustomDisable">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_MultiMotivationDetailSelection.CustomEnable">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUC_MultiMotivationDetailSelection.GetMotivationDetails(System.Int32,System.String@,System.String@,System.String@,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="ALedgerNr"></param>
            <param name="ACheckedMember"></param>
            <param name="ADisplayMember"></param>
            <param name="AValueMember"></param>
            <param name="AExcludeInactive"></param>
            <returns></returns>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.CustomEnablingDisabling">
             <summary>
             Provides procedures that allow a custom 'disabled' (non-editable) look for
             TextBoxes, ComboBoxes and DateTimePickers.
            
             How it works:
             The controls are hidden and labels with a certain look are placed where the
             controls lie. When the controls should be 'enabled' again, these labels are
             hidden and the controls are shown again.
            
             Note: Controls other than TextBoxes, ComboBoxes and DateTimePickers are
             disabled/enabled in the usual way.
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.NO_DISABLING_OF_CONTROL">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.CUSTOMDISABLING_ALTHOUGH_INVISIBLE">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.LABELINSTEADOFCONTROL_NAMEPREFIX">
            <summary>for 'LabelInsteadOfControl'</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.ANYCONTROL_HSHIFT">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.ANYCONTROL_VSHIFT">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.COMBOBOX_HSHIFT">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.DATETIMEPICKER_VSHIFT">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.DisableControl(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            todoComment
            </summary>
            <param name="AControlContainer"></param>
            <param name="AControlToDisable"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.AdjustLabelControlsAfterResizingGroup(System.Windows.Forms.Control)">
            <summary>
            todoComment
            </summary>
            <param name="AControlContainer"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.AdjustLabelControlsAfterResizing(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            todoComment
            </summary>
            <param name="AControlContainer"></param>
            <param name="AControlToAdjust"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.DisableControl(System.Windows.Forms.Control,System.Windows.Forms.Control,Ict.Petra.Client.CommonControls.CustomEnablingDisabling.TDelegateDisabledControlClick)">
            <summary>
            todoComment
            </summary>
            <param name="AControlContainer"></param>
            <param name="AControlToDisable"></param>
            <param name="AClickDelegate"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.EnableControl(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            todoComment
            </summary>
            <param name="AControlContainer"></param>
            <param name="AControlToEnable"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.DisableControlGroup(System.Windows.Forms.Control)">
            <summary>
            todoComment
            </summary>
            <param name="AControlContainer"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.DisableControlGroup(System.Windows.Forms.Control,Ict.Petra.Client.CommonControls.CustomEnablingDisabling.TDelegateDisabledControlClick)">
            <summary>
            todoComment
            </summary>
            <param name="AControlContainer"></param>
            <param name="AClickDelegate"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.EnableControlGroup(System.Windows.Forms.Control)">
            <summary>
            todoComment
            </summary>
            <param name="AControlContainer"></param>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.CustomEnablingDisabling.TDelegateDisabledControlClick">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TUneditableDataGrid">
             <summary>
             Rudimentary inplementation of a DataGrid that prevents editing of columns.
             Not used yet, not much tested either.
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUneditableDataGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TUneditableDataGrid.OnCurrentCellChanged(System.EventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TDataGridControlledSort">
             <summary>
             A DataGrid that provides the ability to prevent sorting of certain columns
             and that fires an OnSort event as data is about to be sorted.
             Additionally, the PrimaryKey(s) of the row that was selected before the
             DataGrid was sorted can be retrieved.
            
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TDataGridControlledSort.FNotSortableColumns">
            <summary>Holds the value of NotSortableColumns property to prevent sorting of certain columns</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TDataGridControlledSort.FCurrentlySelectedRowPK">
            <summary>Holds an array of PrimaryKeys after the DataGrid was sorted.</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TDataGridControlledSort.FLastSortedColumn">
            <summary>Stores the last column that the DataGrid was sorted on</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridControlledSort.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridControlledSort.GetCurrentlySelectedRowPKAfterSorting(System.Object[]@)">
             <summary>
             Can be called by the form/control that hosts this DataGrid to retrieve the
             PrimaryKey(s) of the row that was selected before the DataGrid was sorted.
            
             </summary>
             <param name="APKArray">Array of PrimaryKeys
             </param>
             <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridControlledSort.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="AEvent"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridControlledSort.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            todoComment
            </summary>
            <param name="AEvent"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridControlledSort.ResetCurrentlySelectedRowPKAfterSorting">
             <summary>
             Needs to be called by the form/control that hosts this DataGrid to set the
             Array of PrimaryKeys to nil after the form/control has eg. re-selected the
             row that was selected before.
            
             </summary>
             <returns>void</returns>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TDataGridControlledSort.NotSortableColumns">
             <summary>
             Disallows sorting of all columns which names are passed in the ArrayList
            
             </summary>
        </member>
        <member name="E:Ict.Petra.Client.CommonControls.TDataGridControlledSort.OnSort">
            <summary>Event that fires when the DataGrid is about to be sorted.</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.DelegateGetIconIndexForRow">
            <summary>Delegate forward declaration</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TDataGridTextBoxColumnNotEditable">
             <summary>
             A column that is not editable.
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridTextBoxColumnNotEditable.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="ASource"></param>
            <param name="ARowNum"></param>
            <param name="ABounds"></param>
            <param name="AReadOnly"></param>
            <param name="AInstantText"></param>
            <param name="ACellIsVisible"></param>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TDataGridTextBoxColumnNotEditableNotNavigable">
             <summary>
             A column that is not editable.
             Additionally, it prevents cursor-down and cursor-up keys to be pressed when
             in last/first row and also prevents cursor-left and cursor-right to change
             the column.
            
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TDataGridTextBoxColumnNotEditableNotNavigable.RowCount">
            <summary>todoComment</summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridTextBoxColumnNotEditableNotNavigable.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridTextBoxColumnNotEditableNotNavigable.Commit(System.Windows.Forms.CurrencyManager,System.Int32)">
            <summary>
            todoComment
            </summary>
            <param name="dataSource"></param>
            <param name="rowNum"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridTextBoxColumnNotEditableNotNavigable.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String,System.Boolean)">
            <summary>
            procedure TextBoxEditStarted(sender: System.Object; e: KeyPressEventArgs);    procedure LeaveKeyTrapTextBox(sender: System.Object; e: EventArgs);
            </summary>
            <returns>void</returns>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TKeyTrapTextBox">
             <summary>
             TextBox that prevents cursor-down and cursor-up keys to be pressed when in
             last/first row.
             @see Used by TDataGridTextBoxColumnNotEditableNotNavigable.
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TKeyTrapTextBox.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>
            WM_KEYUP: Integer = 0x101;    WM_CHAR: Integer = 0x102;
            </summary>
            <returns>void</returns>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TDataGridIconOnlyColumn">
             <summary>
             A column that displays an icon.
            
             Each row can have a different icon - the icon for each row needs to be
             determined in a function that is called as a Delegate for each row.
            
             @see For an implementation look in UC_PartnerEdit_PartnerTabSet.pas!
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridIconOnlyColumn.#ctor(System.Windows.Forms.ImageList,Ict.Petra.Client.CommonControls.DelegateGetIconIndexForRow)">
            <summary>
            constructor
            </summary>
            <param name="Icons"></param>
            <param name="getIconIndex"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridIconOnlyColumn.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="source"></param>
            <param name="rowNum"></param>
            <param name="backBrush"></param>
            <param name="foreBrush"></param>
            <param name="alignToRight"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridIconOnlyColumn.Edit(System.Windows.Forms.CurrencyManager,System.Int32,System.Drawing.Rectangle,System.Boolean,System.String,System.Boolean)">
            <summary>
            todoComment
            </summary>
            <param name="source"></param>
            <param name="rowNum"></param>
            <param name="bounds"></param>
            <param name="readOnly"></param>
            <param name="instantText"></param>
            <param name="cellIsVisible"></param>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TDataGridJoinTextBoxColumn">
             <summary>
             Delphi implementation of
             'HOW TO: Extend the Windows Form DataGridTextBoxColumn to Display Data From
             Other Tables by Using Visual C# .NET'.
            
             @comment Be sure to have read and understood the article
             http://support.microsoft.com/default.aspx?scid=kb;en-us;Q319076 before
             using this quited advanced column!
             @see For an implementation look in UC_PartnerEdit_PartnerTabSet.pas!
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridJoinTextBoxColumn.#ctor(System.String,System.Data.DataColumn)">
            <summary>
            constructor
            </summary>
            <param name="ARelationName"></param>
            <param name="AParentField"></param>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridJoinTextBoxColumn.GetColumnValueAtRow(System.Windows.Forms.CurrencyManager,System.Int32)">
            <summary>
            todoComment
            </summary>
            <param name="ACm"></param>
            <param name="ARowNum"></param>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TDataGridJoinTextBoxColumn.Commit(System.Windows.Forms.CurrencyManager,System.Int32)">
            <summary>
            todoComment
            </summary>
            <param name="ACm"></param>
            <param name="ARowNum"></param>
            <returns></returns>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TDataGridJoinTextBoxColumn.ReadOnly">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TPartnerFindCriteriaSelectionChangedEventArgs">
             <summary>
             Custom Event used by UC_PartnerFind_Criteria to signal to the
             PartnerFind_Options screen that Critiera have been selected or rearranged
            
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TPartnerFindCriteriaSelectionChangedEventArgs.FSelectedCriteria">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TPartnerFindCriteriaSelectionChangedEventArgs.FCriteriaColumn">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TPartnerFindCriteriaSelectionChangedEventArgs.FIsFirstInColumn">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TPartnerFindCriteriaSelectionChangedEventArgs.FIsLastInColumn">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TPartnerFindCriteriaSelectionChangedEventArgs.SelectedCriteria">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TPartnerFindCriteriaSelectionChangedEventArgs.CriteriaColumn">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TPartnerFindCriteriaSelectionChangedEventArgs.IsFirstInColumn">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TPartnerFindCriteriaSelectionChangedEventArgs.IsLastInColumn">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TFindCriteriaColumn">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TFindCriteriaColumn.fccLeft">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TFindCriteriaColumn.fccRight">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TDelegateClickButton">
            <summary>Button Click</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TDelegateVerifyUserEntry">
            <summary>Text box edited</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TDelegatePartnerFound">
            <summary>Partner found</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TDelegatePartnerChanged">
            <summary>Partner found</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.txtAutoPopulatedButtonLabel.EXCEPTION_CLICK_BUTTON">
            <summary>Exception message</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.txtAutoPopulatedButtonLabel.EXCEPTION_WRONG_DATATYPE">
            <summary>Exception message</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.txtAutoPopulatedButtonLabel.EXCEPTION_VERIFIC_MISSING">
            <summary>Exception message</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TErrorData">
            <summary>
            Defines the error message
            </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TErrorData.RErrorMessage">
            <summary>Error message</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TErrorData.RCaption">
            <summary>Caption text</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TErrorData.RVerified">
            <summary>False if we have an error message</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.EClickButton">
            <summary>
            Exception
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.EClickButton.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.EClickButton.#ctor(System.String)">
            <summary>
            </summary>
            <param name="AMessage"></param>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.EWrongDataType">
            <summary>
            Exception
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.EWrongDataType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.EWrongDataType.#ctor(System.String)">
            <summary>
            </summary>
            <param name="AMessage"></param>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.EVerificationMissing">
            <summary>
            Exception
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.EVerificationMissing.#ctor(System.String)">
            <summary>
            </summary>
            <param name="AMessage"></param>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TListTextBoxTypes">
             <summary>
             Enumeration for the Designer. Holds the possible values for ListTable.
             No enum prefixes here since these values are shown in the Designer.
            
             </summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TListTextBoxTypes.System_Windows_Forms_Textbox">
            <summary>todoComment</summary>
        </member>
        <member name="F:Ict.Petra.Client.CommonControls.TListTextBoxTypes.PartnerKey">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TtxtPetraDate">
             <summary>
             A Control that derives from System.Windows.Forms.TextBox that allows entry
             and formatting of dates in the Petra-specific format and with all the Petra
             entry functionality (eg. +, -, =, today). It cannot be used to display
             'normal' text.
            
             The Control provides internal date parsing and validation. Restrictions can
             be set on what the user is allowed to enter - this is governed by the
             Properties 'AllowEmptyDate', 'AllowFutureDate' and 'AllowPastDate' (grouped
             in the Designer's Object Inspector under 'Date Validation').
             The date can also be validated from outside by calling the 'ValidDate'
             function.
            
             </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtPetraDate.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtPetraDate.OnDateChanged(Ict.Petra.Client.CommonControls.TPetraDateChangedEventArgs)">
            <summary>
            procedure Date_TextChanged(sender: System.Object; e: System.EventArgs);
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtPetraDate.Date_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            procedure TtxtPetraDate.Date_TextChanged(sender: System.Object; e: System.EventArgs);var  DateChangeArgs: TPetraDateChangedEventArgs;begin/  if DesignMode then/  begin/    return;/  end;/  if not FSuppressTextChangeEvent then
            beginMessageBox.Show('Entering TtxtPetraDate.Date_TextChanged...');     Verify the Date. If it is OK, the Text will be changed to correspond to the     'Petra Date' format.    if VerifyDate then    begin      DateChangeArgs := new
            TPetraDateChangedEventArgs.Create(FDate, true);    end    else    begin      DateChangeArgs := TPetraDateChangedEventArgs(DateTime.MinValue, false);    end;/     Raise OnDateChanged Event  whether the Date was valid or not!
            OnDateChanged(DateChangeArgs);  end;end;
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtPetraDate.ValidDate(System.Boolean)">
            <summary>
            Verifies the Date value.
            </summary>
            <param name="AShowVerificationError">Set to true to show errors if verification
            failed, or to false to suppress error messages</param>
            <returns>true if the Control is not empty and has a valid date, otherwise false
            </returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtPetraDate.ValidDate">
            <summary>
            overload
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtPetraDate.VerifyDate(System.Boolean)">
             <summary>
             Verifies the Date value.
            
             </summary>
             <param name="AShowVerificationError">Set to true to show errors if verification
             failed, or to false to suppress error messages</param>
             <returns>true if the Control is not empty and has a valid date, otherwise false
             </returns>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TtxtPetraDate.VerifyDate">
            <summary>
            overload
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtPetraDate.Text">
             <summary>
             This property determines the Text that the Control should display.
             NOTE: Needs to be re-declared here so that we can assign a DefaultValue to it
             that is actually a Date!
            
             </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtPetraDate.Date">
             <summary>
             / Custom Properties
             This property determines the Date that the Control should display.
            
             </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtPetraDate.Description">
             <summary>
             This property determines the description of the Date. This is used when
             showing a verification error.
            
             </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtPetraDate.AllowFutureDate">
            <summary>
            This property determines whether a Date in the future is allowed to be entered. (Default: true)
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtPetraDate.AllowPastDate">
            <summary>
            This property determines whether a Date in the past is allowed to be entered. (Default: true)
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtPetraDate.AllowEmpty">
            <summary>
            This property determines whether an empty value will be allowed to be entered. (Default: true)
            </summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TtxtPetraDate.LeavingOnFailedValidationOK">
             <summary>
             This property determines whether the user will be allowed to leave the Date
             TextBox if it contains an invalid date. (Default: true)
            
             </summary>
        </member>
        <member name="E:Ict.Petra.Client.CommonControls.TtxtPetraDate.DateChanged">
            <summary>
            This Event is thrown when the Date has changed.
            </summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TPetraDateChangedEventHandler">
            <summary>todoComment</summary>
        </member>
        <member name="T:Ict.Petra.Client.CommonControls.TPetraDateChangedEventArgs">
            <summary>
            todoComment
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TPetraDateChangedEventArgs.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Ict.Petra.Client.CommonControls.TPetraDateChangedEventArgs.#ctor(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            constructor
            </summary>
            <param name="ADate"></param>
            <param name="AValidDate"></param>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TPetraDateChangedEventArgs.DateTime">
            <summary>todoComment</summary>
        </member>
        <member name="P:Ict.Petra.Client.CommonControls.TPetraDateChangedEventArgs.ValidDate">
            <summary>todoComment</summary>
        </member>
    </members>
</doc>
