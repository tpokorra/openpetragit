<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ict.Petra.Shared.MFinance.DataSets</name>
    </assembly>
    <members>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.#ctor">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            auto generated for serialization
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.#ctor(System.String)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.GetChangesTyped(System.Boolean)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.InitTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.InitTables(System.Data.DataSet)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.MapTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.InitVars">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.InitConstraints">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.AApSupplier">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.AApDocument">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.AApDocumentDetail">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.AApDocumentPayment">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.AApPayment">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDS.AApAnalAttrib">
            auto generated
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable">
            This is either an invoice or a credit note in the Accounts Payable system.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.ColumnTaggedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.ColumnDateDueId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.ColumnTagged">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.ColumnDateDue">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.GetTaggedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.GetTaggedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.GetDateDueDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.GetDateDueLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentRow">
            This is either an invoice or a credit note in the Accounts Payable system.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentRow.IsTaggedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentRow.SetTaggedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentRow.IsDateDueNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentRow.SetDateDueNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentRow.Tagged">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentRow.DateDue">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable">
            This table links the different payments to actual invoices and credit notes.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.ColumnTotalAmountToPayId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.ColumnUseDiscountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.ColumnPayFullInvoiceId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.ColumnHasValidDiscountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.ColumnDiscountPercentageId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.ColumnTotalAmountToPay">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.ColumnUseDiscount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.ColumnPayFullInvoice">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.ColumnHasValidDiscount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.ColumnDiscountPercentage">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetTotalAmountToPayDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetTotalAmountToPayLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetUseDiscountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetUseDiscountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetPayFullInvoiceDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetPayFullInvoiceLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetHasValidDiscountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetHasValidDiscountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetDiscountPercentageDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.GetDiscountPercentageLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow">
            This table links the different payments to actual invoices and credit notes.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.IsTotalAmountToPayNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.SetTotalAmountToPayNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.IsUseDiscountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.SetUseDiscountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.IsPayFullInvoiceNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.SetPayFullInvoiceNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.IsHasValidDiscountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.SetHasValidDiscountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.IsDiscountPercentageNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.SetDiscountPercentageNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.TotalAmountToPay">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.UseDiscount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.PayFullInvoice">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.HasValidDiscount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApDocumentPaymentRow.DiscountPercentage">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable">
            Records all payments that have been made against an accounts payable detail.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.ColumnSupplierKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.ColumnSupplierNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.ColumnCurrencyCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.ColumnListLabelId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.ColumnSupplierKey">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.ColumnSupplierName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.ColumnCurrencyCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.ColumnListLabel">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetSupplierKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetSupplierKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetSupplierNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetSupplierNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetCurrencyCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetCurrencyCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetListLabelDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.GetListLabelLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow">
            Records all payments that have been made against an accounts payable detail.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.IsSupplierKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.SetSupplierKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.IsSupplierNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.SetSupplierNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.IsCurrencyCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.SetCurrencyCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.IsListLabelNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.SetListLabelNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.SupplierKey">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.SupplierName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.CurrencyCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.AP.Data.AccountsPayableTDSAApPaymentRow.ListLabel">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.#ctor">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            auto generated for serialization
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.#ctor(System.String)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.GetChangesTyped(System.Boolean)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.InitTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.InitTables(System.Data.DataSet)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.MapTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.InitVars">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.InitConstraints">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.ALedger">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.AGiftBatch">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.AGift">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.AGiftDetail">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.AMotivationGroup">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDS.AMotivationDetail">
            auto generated
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable">
            The gift recipient information for a gift.  A single gift can be split among more than one recipient.  A gift detail record is created for each recipient.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.ColumnDonorKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.ColumnDonorNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.ColumnDateEnteredId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.ColumnRecipientDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.ColumnAccountCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.ColumnDonorKey">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.ColumnDonorName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.ColumnDateEntered">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.ColumnRecipientDescription">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.ColumnAccountCode">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetDonorKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetDonorKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetDonorNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetDonorNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetDateEnteredDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetDateEnteredLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetRecipientDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetRecipientDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetAccountCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.GetAccountCodeLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow">
            The gift recipient information for a gift.  A single gift can be split among more than one recipient.  A gift detail record is created for each recipient.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.IsDonorKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.SetDonorKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.IsDonorNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.SetDonorNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.IsDateEnteredNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.SetDateEnteredNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.IsRecipientDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.SetRecipientDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.IsAccountCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.SetAccountCodeNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.DonorKey">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.DonorName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.DateEntered">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.RecipientDescription">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.GiftBatchTDSAGiftDetailRow.AccountCode">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.#ctor">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            auto generated for serialization
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.#ctor(System.String)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.GetChangesTyped(System.Boolean)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.InitTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.InitTables(System.Data.DataSet)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.MapTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.InitVars">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.InitConstraints">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.AGiftDetail">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.PBankingDetails">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.AEpStatement">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.AEpTransaction">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.AEpMatch">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.ACostCentre">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDS.AMotivationDetail">
            auto generated
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable">
            The gift recipient information for a gift.  A single gift can be split among more than one recipient.  A gift detail record is created for each recipient.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.ColumnDonorKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.ColumnDonorShortNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.ColumnRecipientDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.ColumnAlreadyMatchedId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.ColumnBatchStatusId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.ColumnDonorKey">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.ColumnDonorShortName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.ColumnRecipientDescription">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.ColumnAlreadyMatched">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.ColumnBatchStatus">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetDonorKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetDonorKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetDonorShortNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetDonorShortNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetRecipientDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetRecipientDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetAlreadyMatchedDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetAlreadyMatchedLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetBatchStatusDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.GetBatchStatusLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow">
            The gift recipient information for a gift.  A single gift can be split among more than one recipient.  A gift detail record is created for each recipient.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.IsDonorKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.SetDonorKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.IsDonorShortNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.SetDonorShortNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.IsRecipientDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.SetRecipientDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.IsAlreadyMatchedNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.SetAlreadyMatchedNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.IsBatchStatusNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.SetBatchStatusNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.DonorKey">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.DonorShortName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.RecipientDescription">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.AlreadyMatched">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAGiftDetailRow.BatchStatus">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable">
            Any bank details for a partner can be stored in this table
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.ColumnPartnerKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.ColumnPartnerKey">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.GetPartnerKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.GetPartnerKeyLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsRow">
            Any bank details for a partner can be stored in this table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsRow.IsPartnerKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsRow.SetPartnerKeyNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSPBankingDetailsRow.PartnerKey">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable">
            the transactions from the recently imported bank statements; they should help to identify the other party of the transaction (donor, etc) and the purpose of the transaction
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.ColumnMatchActionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.ColumnMatchAction">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.GetMatchActionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.GetMatchActionLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionRow">
            the transactions from the recently imported bank statements; they should help to identify the other party of the transaction (donor, etc) and the purpose of the transaction
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionRow.IsMatchActionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionRow.SetMatchActionNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpTransactionRow.MatchAction">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable">
            the matches that can be used to identify recurring gift or GL transactions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.ColumnCostCentreNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.ColumnCostCentreName">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.GetCostCentreNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.GetCostCentreNameLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchRow">
            the matches that can be used to identify recurring gift or GL transactions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchRow.IsCostCentreNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchRow.SetCostCentreNameNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.BankImportTDSAEpMatchRow.CostCentreName">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.#ctor">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            auto generated for serialization
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.#ctor(System.String)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.GetChangesTyped(System.Boolean)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.InitTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.InitTables(System.Data.DataSet)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.MapTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.InitVars">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.InitConstraints">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.AGift">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDS.BestAddress">
            auto generated
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable">
            Information on the donor's giving. Points to the gift detail records.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnDonorShortNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnRecipientDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnDateOfSubscriptionStartId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnDateOfFirstGiftId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnMotivationGroupCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnMotivationDetailCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnDonorShortName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnRecipientDescription">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnDateOfSubscriptionStart">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnDateOfFirstGift">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnMotivationGroupCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.ColumnMotivationDetailCode">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetDonorShortNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetDonorShortNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetRecipientDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetRecipientDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetDateOfSubscriptionStartDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetDateOfSubscriptionStartLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetDateOfFirstGiftDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetDateOfFirstGiftLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetMotivationGroupCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetMotivationGroupCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetMotivationDetailCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.GetMotivationDetailCodeLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow">
            Information on the donor's giving. Points to the gift detail records.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.IsDonorShortNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.SetDonorShortNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.IsRecipientDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.SetRecipientDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.IsDateOfSubscriptionStartNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.SetDateOfSubscriptionStartNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.IsDateOfFirstGiftNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.SetDateOfFirstGiftNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.IsMotivationGroupCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.SetMotivationGroupCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.IsMotivationDetailCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.SetMotivationDetailCodeNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.DonorShortName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.RecipientDescription">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.DateOfSubscriptionStart">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.DateOfFirstGift">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.MotivationGroupCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.NewDonorTDSAGiftRow.MotivationDetailCode">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.#ctor">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            auto generated for serialization
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.#ctor(System.String)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.GetChangesTyped(System.Boolean)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.InitTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.InitTables(System.Data.DataSet)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.MapTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.InitVars">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.InitConstraints">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.Gift">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDS.Donor">
            auto generated
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnDonorKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnDonorShortNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnRecipientDescriptionId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnDateOfGiftId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnGiftAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnMotivationGroupCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnMotivationDetailCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnDonorKey">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnDonorShortName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnRecipientDescription">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnDateOfGift">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnGiftAmount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnMotivationGroupCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.ColumnMotivationDetailCode">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetDonorKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetDonorKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetDonorShortNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetDonorShortNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetRecipientDescriptionDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetRecipientDescriptionLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetDateOfGiftDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetDateOfGiftLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetGiftAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetGiftAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetMotivationGroupCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetMotivationGroupCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetMotivationDetailCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.GetMotivationDetailCodeLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.IsDonorKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.SetDonorKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.IsDonorShortNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.SetDonorShortNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.IsRecipientDescriptionNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.SetRecipientDescriptionNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.IsDateOfGiftNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.SetDateOfGiftNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.IsGiftAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.SetGiftAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.IsMotivationGroupCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.SetMotivationGroupCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.IsMotivationDetailCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.SetMotivationDetailCodeNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.DonorKey">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.DonorShortName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.RecipientDescription">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.DateOfGift">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.GiftAmount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.MotivationGroupCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSGiftRow.MotivationDetailCode">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnDonorKeyId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnDonorShortNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnGiftTotalCountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnGiftTotalAmountId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnEmailId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnValidAddressId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnLocalityId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnStreetNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnBuilding1Id">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnBuilding2Id">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnAddress3Id">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnCountryCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnCountryNameId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnPostalCodeId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnCityId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnDonorKey">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnDonorShortName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnGiftTotalCount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnGiftTotalAmount">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnEmail">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnValidAddress">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnLocality">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnStreetName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnBuilding1">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnBuilding2">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnAddress3">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnCountryCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnCountryName">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnPostalCode">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.ColumnCity">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetDonorKeyDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetDonorKeyLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetDonorShortNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetDonorShortNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetGiftTotalCountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetGiftTotalCountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetGiftTotalAmountDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetGiftTotalAmountLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetEmailDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetEmailLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetValidAddressDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetValidAddressLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetLocalityDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetLocalityLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetStreetNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetStreetNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetBuilding1DBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetBuilding1Length">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetBuilding2DBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetBuilding2Length">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetAddress3DBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetAddress3Length">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetCountryCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetCountryCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetCountryNameDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetCountryNameLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetPostalCodeDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetPostalCodeLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetCityDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.GetCityLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsDonorKeyNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetDonorKeyNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsDonorShortNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetDonorShortNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsGiftTotalCountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetGiftTotalCountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsGiftTotalAmountNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetGiftTotalAmountNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsEmailNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetEmailNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsValidAddressNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetValidAddressNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsLocalityNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetLocalityNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsStreetNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetStreetNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsBuilding1Null">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetBuilding1Null">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsBuilding2Null">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetBuilding2Null">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsAddress3Null">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetAddress3Null">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsCountryCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetCountryCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsCountryNameNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetCountryNameNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsPostalCodeNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetPostalCodeNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.IsCityNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.SetCityNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.DonorKey">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.DonorShortName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.GiftTotalCount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.GiftTotalAmount">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.Email">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.ValidAddress">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.Locality">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.StreetName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.Building1">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.Building2">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.Address3">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.CountryCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.CountryName">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.PostalCode">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.Gift.Data.DonorHistoryTDSDonorRow.City">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.#ctor">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            auto generated for serialization
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.#ctor(System.String)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.GetChangesTyped(System.Boolean)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.InitTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.InitTables(System.Data.DataSet)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.MapTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.InitVars">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.InitConstraints">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.ALedger">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.ABatch">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.AJournal">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.ATransaction">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.AAccount">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.ACostCentre">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.AAccountHierarchyDetail">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.AGeneralLedgerMaster">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.AGeneralLedgerMasterPeriod">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDS.ATransAnalAttrib">
            auto generated
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable">
            Detailed information for each debit and credit in a general ledger journal.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.ColumnDateEnteredId">
            used for generic TTypedDataTable functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.ColumnAnalysisAttributesId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.ColumnDateEntered">
            
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.ColumnAnalysisAttributes">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.GetDateEnteredDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.GetDateEnteredLength">
            get character length for column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.GetAnalysisAttributesDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.GetAnalysisAttributesLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionRow">
            Detailed information for each debit and credit in a general ledger journal.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionRow.IsDateEnteredNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionRow.SetDateEnteredNull">
            assign NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionRow.IsAnalysisAttributesNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionRow.SetAnalysisAttributesNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionRow.DateEntered">
            
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLBatchTDSATransactionRow.AnalysisAttributes">
            
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.#ctor">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            auto generated for serialization
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.#ctor(System.String)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.GetChangesTyped(System.Boolean)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.InitTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.InitTables(System.Data.DataSet)">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.MapTables">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.InitVars">
            auto generated
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.InitConstraints">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.PPartner">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.ALedger">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.ALedgerInitFlag">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AAccountingSystemParameter">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AAccountingPeriod">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.ASystemInterface">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AAccount">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AAccountHierarchy">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AAccountHierarchyDetail">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AAccountProperty">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AAccountPropertyCode">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.ATransactionType">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AAnalysisAttribute">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AAnalysisStoreTable">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AAnalysisType">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AFreeformAnalysis">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.ABudget">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.ABudgetPeriod">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.ABudgetRevision">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.ABudgetType">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.ACostCentreTypes">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.ACostCentre">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AValidLedgerNumber">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AGeneralLedgerMaster">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AGeneralLedgerMasterPeriod">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AMotivationGroup">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.AMotivationDetail">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.SModule">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.SSystemDefaults">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.PUnit">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.PLocation">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.PPartnerType">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.PPartnerLocation">
            auto generated
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDS.PPartnerLedger">
            auto generated
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable">
            Details about each account code within a ledger. Also holds information on the summary account structure for reporting.
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.TableId">
            TableId for Ict.Common.Data generic functions
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.ColumnBankAccountFlagId">
            used for generic TTypedDataTable functions
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.#ctor">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.#ctor(System.String)">
            constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            constructor for serialization
        </member>
        <member name="F:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.ColumnBankAccountFlag">
            
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.InitClass">
            create the columns
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.InitVars">
            assign columns to properties, set primary key
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.NewRowTyped(System.Boolean)">
            create a new typed row
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.NewRowTyped">
            create a new typed row, always with default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            new typed row using DataRowBuilder
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.GetChangesTyped">
            get typed set of changes
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.GetTableName">
            return the CamelCase name of the table
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.GetTableDBName">
            return the name of the table as it is used in the database
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.CreateOdbcParameter(System.Int32)">
            get an odbc parameter for the given column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.GetBankAccountFlagDBName">
            get the name of the field in the database for this column
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.GetBankAccountFlagLength">
            get character length for column
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountTable.Item(System.Int32)">
            Access a typed row by index
        </member>
        <member name="T:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountRow">
            Details about each account code within a ledger. Also holds information on the summary account structure for reporting.
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountRow.#ctor(System.Data.DataRowBuilder)">
            Constructor
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountRow.InitValues">
            set default values
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountRow.IsBankAccountFlagNull">
            test for NULL value
        </member>
        <member name="M:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountRow.SetBankAccountFlagNull">
            assign NULL value
        </member>
        <member name="P:Ict.Petra.Shared.MFinance.GL.Data.GLSetupTDSAAccountRow.BankAccountFlag">
            
        </member>
    </members>
</doc>
