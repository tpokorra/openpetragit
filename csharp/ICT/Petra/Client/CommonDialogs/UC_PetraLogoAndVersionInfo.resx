<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxPetraLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAgwSURBVHhe7VsJUFVlFH7WTOM0Ns7Y6jbaopWmg5WaTZNS
        uOKaWaGEWcMWZmaIoKFCgBYYiIIgJgikIvIEFEQBkacsiokiIoiIociigQjhgna632//9d7Hvr/34M78
        8x5wL7zzne//zjnfvSgU3Uc3At0IdBoCTyhIgdXVjief6kHzjY1IGR5GQX8E0qQpEwnf6xo4CBk3nDGN
        ikuL6F96wFZe/iUaqTeiawAw/K1hdPLUCTF4DsJeZSi92PcFHQdByL6jkwNV362qBcDf5Tfoy4XGug0A
        aF5eUVYreM6C7ItZ9OzzfXQThKd79SRvH696gwcI9x/co2XWP+imIH72xTwCzXm2i2/fJNX5RDp6LoGK
        yq6K3wcLxo4bo1ssQPaPqhLEIKuqK8k+eCXNdJlFM50m04/+S0QQah7ep61+PrrTH6C+W1iai8HfuVdN
        2w/70Hj7CbLlGupIt6sq2Hk4Z7z+h7oBwtA3hlByapIIQMaVc2TiblQLgNnr57AtwbdISOhu7RdEZN9z
        80a6V3OXBYZXu4AVNGG1fi0AwIivNxkTtgfOBRsWL7HSbhag6Sm9WSJmNTkniQwcDeoMHgDor/mIIk8q
        xfPPnc/QXhagnu8K2SkGA6X/3s+q3uC5JizauIDyr+eK16Fxgohq3ZwwZ+5sWb+vTNpDhg4TGwUALNga
        tUlWFkePeVe7AEDG0s+elmUfIqeu/PV9DaCyCrPZ9SiLmBO0Z1oU+n0zc1MxeAhfXWWvMTBQFvnMAGFk
        ZVEbjlHv6BHEi5czCN+cXz5pcvY5MGiQDqSFi78n7kgs9R/QT8NBELLv9purrOyh46uv7DXGAqst5iIL
        UBbRUGkuCYTg0cPzbg4MiEuPZaWtsUDr+zmAC1XtYkMSft+VgnzNZcEzvXtRQKC/SNnC8lLW47c0eH6d
        qddCWVlcZb9SMwURwied9SF8DTU9TQUGDIIgck0BCwwmfqxZWwHZl9pcaHpaInz1gQJBlJZFzAkaUxbx
        QWztVsimPbd9bq2mvjoY7pHurCfg0yIaLY2w1GFzSZue9IupbZp9DgSGKD4oAYT9UZHUb0DfTt4KgvLD
        15dmpin9flP3v/Q8x5C1zCfgWoD3YF6nlkU0PdKswN5qTdlrqBxKmyKpIHaaiQoPHzTkH6agOI/QuLQk
        uw1dM8t5Km1QOou9AP97/BV+Q6dMi/DwpWVvR7xfm5Q9sRUW/EL0EWimGrLScVepw+cEZB/uLc8C5ncY
        nK3JPiZAWGXY66A7GqkbFZWUkltEoWm5tOXYBfaacbWUKu/WyOz16JiojmMByh68e6kYoUS1JHi0utwV
        hhOEWo9WuqC0knzjM2je7wnU32kfDbQNpuesA0hhF0x668LIbNdxKil7ZKBiYWqcajilY8riuPffk2Uf
        wtec7EszHZsWwejNM42gp3sepiH2ISzol2wCSbF8Jwseq/ey7Wz1XOrHgIjPufZ46hSM11dfe6Wdq4JQ
        9vx3bBcFCeUPZa8p0x5AwmSIoJFpZC3vehl5xWfTIn8VjXKOpF4/KYUs72HBNwYAQBjjGiFuB1QjG9vl
        7QiAEDzu40trMbLfUPsKfw99PILGXSGeaZ/ESzTf6wgLeph9OMs4gu+5KqxZAPRY4kuuMWn0T81DxgTc
        cocN3y69AeotrClpGVJ3esAEWF880xDHispbYqaXBqXSpF9j6APHcBq+OoIF31oAsBUgjPxzwY9o+7Io
        ZB8evfptbbg9pr7mrP6jVh86E8X2dFllNZ28XErItInvMdJ3OUCjHKNIz+EAjVy7n0asiWwzAMACE/84
        uvOQRBYwQWzLA9OetOxJWYDJDwvg5BRWkV9sNiHTMzwSaKzLIRrtHENv/xzdrgAorP0Z4PxzoSy22bQI
        Ormsd5ZRn/8h7L2sglsUqMonM28VTV4XTwbOsWzx4DsEgMVbyNArmq6X3xGdZDRqbQICbK66sl9ScZ8F
        /pV3Ck1zPcqCn+QS12kAgAXBxzPFRB1JjKfBLw9q3VZA9tWFD1nPuHyTvtuWStPdEsXgOx0AgQWD7YPE
        Bgl2PJjbKs8APbbU5ITQJGUWy4Ln2dcEABQCCCiLXBALrv3V8uZo4KABBC9ebHn/D97II5FlnmdfowD4
        1ouxICmnUPzceNgCIt7somBpZcFqOAcAYme67U+asUGl0QAoBBBQFvnnLiy69mhOaM6BOzC4UKr21sFn
        6HNXlVYAABBiMi/L5oQmN0coHbglLa312PcL3FO0BwAzD/rUO5K13txExaO5TRJEeO4QD9HpEUZTZN9o
        w3GtAoALIo8Dxm2jcwKyL32oARej1s/1TNU+AAQWQBClLFizdnUDLBD6fXjt3OFF8JeKq8l8czKjv9Yx
        QABAISzbEJU4LULU2UPZdT2iD+FDD80pA9vJPzafBa/NAPRf6c9sNR4XnlatLYgCIqCHdNqD8Fl6n9B6
        AMCCmRvDRBbgoS0miNIDd1jgrkqV33H3BTL2SNUJAPpYusuaI8wJIgvwBt66NHiYktLgtXkLgAFYFkGP
        u1roHBo9Ni2i38ctZykAED9dA8A04KAsRtzNfv3NoaSAz6d+twXDhEf4RTLx1A0N6GPjJ9sCiBfTImKv
        EwCcAHMh7kwJqwTesXni8jqUS1hwfvh7z4M5pL7WR2cRXy77M0l9OUWcJb7swtPJQXma8GoTdkq2rPae
        IL4sQpJJfeEeAV/fBCcSX6A8lr0yhbXFfEKUJrtBANRZoWtfQwdEAKSPtelaoPXFg/9fYE+gAgXM/V1t
        sezzg33B/4uzC7zKgm+OT9B9rg4i8B/RQ5Qg0XdSrQAAAABJRU5ErkJggg==
</value>
  </data>
</root>